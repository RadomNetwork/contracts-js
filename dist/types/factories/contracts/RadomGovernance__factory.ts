/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RadomGovernance,
  RadomGovernanceInterface,
} from "../../contracts/RadomGovernance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "votes",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "argument",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "executionFromTime",
        type: "uint32",
      },
    ],
    name: "ProposalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokensDeposited",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stakedAmount",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "StakedBalanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "yesVotes",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "noVotes",
        type: "uint32",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokensWithdrawn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unstakedAmount",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "cancelProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernanceParameters",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8[5]",
            name: "quorum",
            type: "uint8[5]",
          },
          {
            internalType: "uint32",
            name: "minProposalDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "executionDelay",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "proposalId",
            type: "uint64",
          },
          {
            internalType: "enum ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "enum ProposalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "yesVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "noVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "executionFromTime",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "argument",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ProposalResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "proposalId",
            type: "uint64",
          },
          {
            internalType: "enum ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "enum ProposalStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "yesVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "noVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "executionFromTime",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "argument",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ProposalResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPossibleVotes",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isYesVote",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "votes",
            type: "uint32",
          },
        ],
        internalType: "struct VoteReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8[5]",
            name: "quorum",
            type: "uint8[5]",
          },
          {
            internalType: "uint32",
            name: "minProposalDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "executionDelay",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "govParam",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8[5]",
            name: "quorum",
            type: "uint8[5]",
          },
          {
            internalType: "uint32",
            name: "minProposalDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "executionDelay",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "govParam",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeChangeGovernanceParameters",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isDelegateCall",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ExecutionData[]",
        name: "executionData",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeCodeExecution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "facetCuts",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeDiamondChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeOwnershipChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeText",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "queue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_amount",
        type: "uint32",
      },
    ],
    name: "transferStakedBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_yesVote",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_yesVote",
        type: "bool",
      },
    ],
    name: "voteAndQueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeAmount",
        type: "uint32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055614bcc806100256000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063aa9224cd116100b8578063cf1d7a0a1161007c578063cf1d7a0a14610314578063d7f176f2146103a8578063ded5da6a146103b0578063eab92bbb146103c3578063f1610a28146103d6578063f650414e146103f657600080fd5b8063aa9224cd146102b0578063b590be77146102c3578063c08cc02d146102d6578063c3a2b0e0146102ee578063c7f215601461030157600080fd5b806347d2b3711161010a57806347d2b371146101da578063570809c1146101ed5780635835cf30146102185780636386c1c71461022d578063926c46b21461028a578063a694fc3a1461029d57600080fd5b80630917e776146101475780631293191e146101705780631e754f641461019157806331ec464e146101b257806337a9a59e146101c7575b600080fd5b600654610100900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b61018361017e366004613312565b610409565b604051908152602001610167565b6101a461019f366004613386565b61044f565b60405161016792919061354c565b6101c56101c0366004613726565b61055d565b005b6101c56101d53660046137e2565b610a0b565b6101836101e836600461385e565b610bf6565b6102006101fb3660046139cd565b610c0e565b6040516001600160401b039091168152602001610167565b610220610c35565b6040516101679190613a34565b61026d61023b366004613ae6565b6001600160a01b031660009081526008602090815260408083205460099092529091205463ffffffff91821692911690565b6040805163ffffffff938416815292909116602083015201610167565b6101c56102983660046137e2565b610d65565b6101c56102ab366004613b03565b610e85565b6101c56102be366004613b1c565b61123c565b6101c56102d13660046137e2565b6114ce565b600654600160281b90046001600160401b0316610200565b6101836102fc366004613b5c565b611db4565b6101c561030f366004613cf2565b611dcc565b610385610322366004613d20565b604080518082018252600080825260209182018190526001600160a01b03949094168452600a81528184206001600160401b039390931684529182529182902082518084019093525460ff811615158352610100900463ffffffff169082015290565b6040805182511515815260209283015163ffffffff169281019290925201610167565b610156611f71565b6101c56103be366004613d3e565b612009565b6102006103d1366004613d6c565b6121b7565b6103e96103e43660046137e2565b6124a1565b6040516101679190613daf565b6101c5610404366004613cf2565b61269b565b604080516001600160a01b038516602082015260009161043e91600191015b60405160208183030381529060405285856128ba565b6001600160401b0316949350505050565b60606000826001600160401b03811682036104795750600654600160281b90046001600160401b03165b6000816001600160401b03166001600160401b0381111561049c5761049c6135c1565b6040519080825280602002602001820160405280156104d557816020015b6104c261312f565b8152602001906001900390816104ba5790505b50905060005b826001600160401b0316816001600160401b0316101561053b576105026103e48289613dd8565b82826001600160401b03168151811061051d5761051d613df8565b6020026020010181905250808061053390613e0e565b9150506104db565b50600654909350600160281b90046001600160401b03169150505b9250929050565b60065460ff16156105cc5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6006805460ff19166001179055608081015151606460ff909116118015906106025750608081015160200151606460ff90911611155b801561061c5750608081015160400151606460ff90911611155b80156106365750608081015160600151606460ff90911611155b801561064f57506080818101510151606460ff90911611155b80156106665750606081015151606460ff90911611155b80156106805750606081015160200151606460ff90911611155b801561069a5750606081015160400151606460ff90911611155b80156106b357506060818101510151606460ff90911611155b80156106cd5750606081015160800151606460ff90911611155b6106e95760405162461bcd60e51b81526004016105c390613e34565b600081600001516001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190613e7b565b90508161010001516001600160401b03168260400151600a6107739190613f78565b61077d9083613f9d565b101561079b5760405162461bcd60e51b81526004016105c390613fb1565b6401000000008260400151600a6107b29190613f78565b6107bc9083613f9d565b11156108155760405162461bcd60e51b815260206004820152602260248201527f5374616b656420746f6b656e732073686f756c642066697420696e2075696e74604482015261199960f11b60648201526084016105c3565b81516001600160a01b031661086c5760405162461bcd60e51b815260206004820152601e60248201527f566f746520746f6b656e20616464726573732063616e6e6f742062652030000060448201526064016105c3565b8160c0015163ffffffff168260a0015163ffffffff1611156109015760405162461bcd60e51b815260206004820152604260248201527f50726f706f73616c20706572696f64206d75737420626520677265617465722060448201527f7468616e20746865206d696e696d756d2070726f706f73616c2064757261746960648201526137b760f11b608482015260a4016105c3565b8151600180546001600160a01b039283166001600160a01b0319909116178155602084015160028054604087015160ff16600160a01b026001600160a81b0319909116929094169190911792909217909155606083015183919061096990600390600561318d565b50608082015161097f906003830190600561318d565b5060a08201516004909101805460c084015160e0850151610100909501516001600160401b0316600160601b0267ffffffffffffffff60601b1963ffffffff968716600160401b02166bffffffffffffffffffffffff60401b199287166401000000000267ffffffffffffffff1990941696909516959095179190911716919091179190911790555050565b6001600160401b038116600090815260076020526040812080549091600160481b90910463ffffffff169003610a535760405162461bcd60e51b81526004016105c39061401e565b60018101546001600160a01b03163314610abf5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79207468652070726f706f7365722063616e2063616e63656c206120706044820152661c9bdc1bdcd85b60ca1b60648201526084016105c3565b6000610aca82612b9e565b90506003816007811115610ae057610ae06133bf565b03610b385760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c2068617320616c7265616479206265656e2063616e63656c604482015261195960f21b60648201526084016105c3565b6007816007811115610b4c57610b4c6133bf565b03610ba45760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c2068617320616c7265616479206265656e20657865637574604482015261195960f21b60648201526084016105c3565b815460ff60a81b1916600160a81b1782556040516001600160401b03841681527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c9060200160405180910390a1505050565b600061043e6002856040516020016104289190614055565b6000610c2c60046040518060200160405280600081525085856128ba565b90505b92915050565b610c3d613220565b6040805161012081018252600180546001600160a01b0390811683526002549081166020840152600160a01b900460ff1682840152825160a0810193849052919290916060840191600390600590826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610c905750505092845250506040805160a081019182905260209093019291506003840190600590826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610ce5575050509284525050506004919091015463ffffffff8082166020840152640100000000820481166040840152600160401b8204166060830152600160601b90046001600160401b0316608090910152919050565b610d6d612f5a565b6001600160401b038116600090815260076020526040812080549091600160481b90910463ffffffff169003610db55760405162461bcd60e51b81526004016105c39061401e565b6004610dc082612b9e565b6007811115610dd157610dd16133bf565b14610e1e5760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20686173206e6f742070617373656400000000000000000060448201526064016105c3565b610e2781612fb3565b8054604080516001600160401b0385168152600160881b90920463ffffffff1660208301527f6337451f5a95a2d61afa7fa36ff679d26b53bb281a0a2683fa424532276c37ff910160405180910390a150610e826001600055565b50565b610e8d612f5a565b600154604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff9190613e7b565b1015610f6b5760405162461bcd60e51b815260206004820152603560248201527f596f75206d75737420617070726f76652074686520636f6e747261637420746f6044820152741039ba30b5b2903cb7bab9103b37ba32aa37b5b2b760591b60648201526084016105c3565b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190613e7b565b10156110375760405162461bcd60e51b815260206004820152602960248201527f596f7520646f206e6f74206861766520656e6f75676820766f7465546f6b656e60448201526820746f207374616b6560b81b60648201526084016105c3565b60025460009061105290600160a01b900460ff16600a613f78565b61105c9083613f9d565b3360009081526008602052604081208054929350839290919061108690849063ffffffff166140eb565b92506101000a81548163ffffffff021916908363ffffffff16021790555080600660018282829054906101000a900463ffffffff166110c591906140eb565b92506101000a81548163ffffffff021916908363ffffffff16021790555060006001800160149054906101000a900460ff16600a6111039190613f78565b6111139063ffffffff8416614108565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611194919061411f565b9050806111db5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105c3565b6001546040805184815263ffffffff861660208201526001600160a01b039092169082015233907fd676067c05ef8b4ac4a22dcaf7b041b6b62cee13c21263d778c878fdda9162529060600160405180910390a2505050610e826001600055565b611244612f5a565b336000908152600960205260409020544263ffffffff9091161061127a5760405162461bcd60e51b81526004016105c39061413c565b3360009081526008602052604090205463ffffffff808316911610156112fa5760405162461bcd60e51b815260206004820152602f60248201527f596f7520646f206e6f74206861766520656e6f756768207374616b656420667560448201526e6e647320746f20776974686472617760881b60648201526084016105c3565b336000908152600860205260408120805483929061131f90849063ffffffff1661417f565b92506101000a81548163ffffffff021916908363ffffffff16021790555080600660018282829054906101000a900463ffffffff1661135e919061417f565b92506101000a81548163ffffffff021916908363ffffffff16021790555060006001800160149054906101000a900460ff16600a61139c9190613f78565b6113ac9063ffffffff8416614108565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506000916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611403573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611427919061411f565b90508061146e5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105c3565b6001546040805184815263ffffffff861660208201526001600160a01b039092169082015233907f4fc11fd1483f37f7268881dbaa11bc46c4a72298c87d20bfa4d52562e2dd52449060600160405180910390a25050610e826001600055565b6114d6612f5a565b6001600160401b038116600090815260076020526040812080549091600160481b90910463ffffffff16900361151e5760405162461bcd60e51b81526004016105c39061401e565b805460ff16600661152e83612b9e565b600781111561153f5761153f6133bf565b146115985760405162461bcd60e51b8152602060048201526024808201527f50726f706f73616c206973206e6f7420726561647920746f20626520657865636044820152631d5d195960e21b60648201526084016105c3565b815460ff60b01b1916600160b01b17825560008160048111156115bd576115bd6133bf565b036116e05760008260020180546115d39061419c565b80601f01602080910402602001604051908101604052809291908181526020018280546115ff9061419c565b801561164c5780601f106116215761010080835404028352916020019161164c565b820191906000526020600020905b81548152906001019060200180831161162f57829003601f168201915b505050505080602001905181019061166491906141e1565b60025460408051600080825260208201928390526307e4c70760e21b9092529293506001600160a01b0390911691631f931c1c916116a89185919060248101614417565b600060405180830381600087803b1580156116c257600080fd5b505af11580156116d6573d6000803e3d6000fd5b5050505050611d6c565b60018160048111156116f4576116f46133bf565b036117cf57600082600201805461170a9061419c565b80601f01602080910402602001604051908101604052809291908181526020018280546117369061419c565b80156117835780601f1061175857610100808354040283529160200191611783565b820191906000526020600020905b81548152906001019060200180831161176657829003601f168201915b505050505080602001905181019061179b919061444b565b60025460405163f2fde38b60e01b81526001600160a01b03808416600483015292935091169063f2fde38b906024016116a8565b60028160048111156117e3576117e36133bf565b03611a4f5760008260020180546117f99061419c565b80601f01602080910402602001604051908101604052809291908181526020018280546118259061419c565b80156118725780601f1061184757610100808354040283529160200191611872565b820191906000526020600020905b81548152906001019060200180831161185557829003601f168201915b505050505080602001905181019061188a9190614468565b905060005b8151811015611a485760008282815181106118ac576118ac613df8565b6020026020010151905080600001511561197957600081602001516001600160a01b031682606001516040516118e291906145af565b600060405180830381855af49150503d806000811461191d576040519150601f19603f3d011682016040523d82523d6000602084013e611922565b606091505b50509050806119735760405162461bcd60e51b815260206004820152601d60248201527f4572726f7220657865637574696e672070726f706f73616c20636f646500000060448201526064016105c3565b50611a35565b600081602001516001600160a01b0316826040015183606001516040516119a091906145af565b60006040518083038185875af1925050503d80600081146119dd576040519150601f19603f3d011682016040523d82523d6000602084013e6119e2565b606091505b5050905080611a335760405162461bcd60e51b815260206004820152601d60248201527f4572726f7220657865637574696e672070726f706f73616c20636f646500000060448201526064016105c3565b505b5080611a40816145cb565b91505061188f565b5050611d6c565b6003816004811115611a6357611a636133bf565b03611d13576000826002018054611a799061419c565b80601f0160208091040260200160405190810160405280929190818152602001828054611aa59061419c565b8015611af25780601f10611ac757610100808354040283529160200191611af2565b820191906000526020600020905b815481529060010190602001808311611ad557829003601f168201915b5050505050806020019051810190611b0a9190614653565b600654909150610100900463ffffffff1615801590611b57575060015481516001600160a01b039081169116141580611b575750600254604082015160ff908116600160a01b9092041614155b15611c075760405162461bcd60e51b815260206004820152606e60248201527f43616e6e6f74206368616e676520766f746520746f6b656e206f72207374616b60448201527f6520646563696d616c7320696620746865726520617265207374616b6564207460648201527f6f6b656e732e2050726f706f7365207472616e7366657272696e67206f776e6560848201526d3939b434b81034b739ba32b0b21760911b60a482015260c4016105c3565b8051600180546001600160a01b039283166001600160a01b0319909116178155602083015160028054604086015160ff16600160a01b026001600160a81b03199091169290941691909117929092179091556060820151829190611c6f90600390600561318d565b506080820151611c85906003830190600561318d565b5060a08201516004909101805460c084015160e0850151610100909501516001600160401b0316600160601b0267ffffffffffffffff60601b1963ffffffff968716600160401b02166bffffffffffffffffffffffff60401b199287166401000000000267ffffffffffffffff19909416969095169590951791909117169190911791909117905550611d6c565b6004816004811115611d2757611d276133bf565b14611d6c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642070726f706f73616c207479706560581b60448201526064016105c3565b6040516001600160401b03841681527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a15050610e826001600055565b600061043e6000856040516020016104289190614704565b6001600160401b038216600090815260076020526040812080549091600160481b90910463ffffffff169003611e145760405162461bcd60e51b81526004016105c39061401e565b6000611e1f82612b9e565b6007811115611e3057611e306133bf565b14611e765760405162461bcd60e51b815260206004820152601660248201527550726f706f73616c206973206e6f742061637469766560501b60448201526064016105c3565b3360009081526008602052604090205463ffffffff1680611ea95760405162461bcd60e51b81526004016105c390614717565b336000908152600a602090815260408083206001600160401b0388168452909152902054610100900463ffffffff1615611ef55760405162461bcd60e51b81526004016105c39061475f565b611f0184838386613001565b8154604080516001600160401b0387168152851515602082015263ffffffff6101008404811692820192909252600160281b90920416606082015233907f6dc1b06bc1dbf44e51a1335ada376f6a896c93405a0fd93eea0a61ee3c0decdb9060800160405180910390a250505050565b600254600090611f8c90600160a01b900460ff16600a613f78565b600154604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa158015611fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffa9190613e7b565b6120049190613f9d565b905090565b612011612f5a565b3360009081526008602052604090205463ffffffff808316911610156120915760405162461bcd60e51b815260206004820152602f60248201527f596f7520646f206e6f74206861766520656e6f756768207374616b656420667560448201526e373239903a37903a3930b739b332b960891b60648201526084016105c3565b336000908152600960205260409020544263ffffffff909116106120c75760405162461bcd60e51b81526004016105c39061413c565b33600090815260086020526040812080548392906120ec90849063ffffffff1661417f565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038416600090815260086020526040812080548594509092612134918591166140eb565b92506101000a81548163ffffffff021916908363ffffffff160217905550816001600160a01b0316336001600160a01b03167fb7ce2951b7b593ee2e36d1e53e6fa9d4ed9157314863b392287111e2ab4bdc09836040516121a1919063ffffffff91909116815260200190565b60405180910390a36121b36001600055565b5050565b600060646121cd610120860161010087016147a6565b60ff16111580156121f3575060646121ed610140860161012087016147a6565b60ff1611155b80156122145750606461220e610160860161014087016147a6565b60ff1611155b80156122355750606461222f610180860161016087016147a6565b60ff1611155b8015612256575060646122506101a0860161018087016147a6565b60ff1611155b80156122755750606461226f60808601606087016147a6565b60ff1611155b80156122945750606461228e60a08601608087016147a6565b60ff1611155b80156122b3575060646122ad60c0860160a087016147a6565b60ff1611155b80156122d2575060646122cc60e0860160c087016147a6565b60ff1611155b80156122f2575060646122ec610100860160e087016147a6565b60ff1611155b61230e5760405162461bcd60e51b81526004016105c390613e34565b600061231d6020860186613ae6565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561235a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237e9190613e7b565b9050612392610220860161020087016137e2565b6001600160401b03166123ab60608701604088016147a6565b6123b690600a613f78565b6123c09083613f9d565b10156123de5760405162461bcd60e51b81526004016105c390613fb1565b6401000000006123f460608701604088016147a6565b6123ff90600a613f78565b6124099083613f9d565b111561246c5760405162461bcd60e51b815260206004820152602c60248201527f4e756d626572206f66207374616b656420746f6b656e732073686f756c64206660448201526b34ba1034b7103ab4b73a199960a11b60648201526084016105c3565b61249860038660405160200161248291906147f3565b60405160208183030381529060405286866128ba565b95945050505050565b6124a961312f565b6001600160401b0382166000818152600760209081526040918290208251610160810190935292825282549082019060ff1660048111156124ec576124ec6133bf565b81526020016124fa83612b9e565b600781111561250b5761250b6133bf565b8152825463ffffffff610100820481166020840152600160281b820481166040840152600160481b820481166060840152600160681b820481166080840152600160881b9091041660a082015260018301546001600160a01b031660c082015260028301805460e0909201916125809061419c565b80601f01602080910402602001604051908101604052809291908181526020018280546125ac9061419c565b80156125f95780601f106125ce576101008083540402835291602001916125f9565b820191906000526020600020905b8154815290600101906020018083116125dc57829003601f168201915b505050505081526020018260030180546126129061419c565b80601f016020809104026020016040519081016040528092919081815260200182805461263e9061419c565b801561268b5780601f106126605761010080835404028352916020019161268b565b820191906000526020600020905b81548152906001019060200180831161266e57829003601f168201915b5050505050815250915050919050565b6001600160401b038216600090815260076020526040812080549091600160481b90910463ffffffff1690036126e35760405162461bcd60e51b81526004016105c39061401e565b60006126ee82612b9e565b60078111156126ff576126ff6133bf565b146127455760405162461bcd60e51b815260206004820152601660248201527550726f706f73616c206973206e6f742061637469766560501b60448201526064016105c3565b3360009081526008602052604090205463ffffffff16806127785760405162461bcd60e51b81526004016105c390614717565b336000908152600a602090815260408083206001600160401b0388168452909152902054610100900463ffffffff16156127c45760405162461bcd60e51b81526004016105c39061475f565b6127d084838386613001565b8154604080516001600160401b0387168152851515602082015263ffffffff6101008404811692820192909252600160281b90920416606082015233907f6dc1b06bc1dbf44e51a1335ada376f6a896c93405a0fd93eea0a61ee3c0decdb9060800160405180910390a2600461284583612b9e565b6007811115612856576128566133bf565b036128645761286482612fb3565b8154604080516001600160401b0387168152600160881b90920463ffffffff1660208301527f6337451f5a95a2d61afa7fa36ff679d26b53bb281a0a2683fa424532276c37ff910160405180910390a150505050565b600554336000908152600860205260408120549091600160601b90046001600160401b031663ffffffff909116101561295b5760405162461bcd60e51b815260206004820152603f60248201527f596f75206d7573742068617665207374616b6564206174206c6561737420746860448201527f652070726f706f73616c207468726573686f6c6420746f2070726f706f73650060648201526084016105c3565b816129a85760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d707479000000000060448201526064016105c3565b600654600160281b90046001600160401b0316600090815260076020526040902080548690829060ff191660018360048111156129e7576129e76133bf565b0217905550805463ffffffff42818116600160481b026cffffffff00000000000000000019909316929092178355600554612a2e92640100000000909104909116906148cd565b815463ffffffff91909116600160681b0263ffffffff60681b199091161781556001810180546001600160a01b0319163317905560028101612a70868261492f565b5060038101612a808486836149ee565b503360009081526008602052604090205460065463ffffffff90911690612aba90600160281b90046001600160401b031683836001613001565b600654825460405133927f7b101fad0117bf0820a0834afd2d190ec8834bc5512b6d6cb383ec66325e4eb492612b2492600160281b9092046001600160401b03169186918d91600160481b820463ffffffff90811692600160681b900416908e908e908e90614aae565b60405180910390a260068054600160281b90046001600160401b0316906005612b4c83613e0e565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550506001600660059054906101000a90046001600160401b0316612b939190614b33565b979650505050505050565b8054600090600160a81b900460ff1615612bba57506003919050565b8154600160b01b900460ff1615612bd357506007919050565b8154600160b81b900460ff1615612c0a57815442600160881b90910463ffffffff1611612c0257506006919050565b506005919050565b815460009060649060049060ff1681811115612c2857612c286133bf565b60ff1660058110612c3b57612c3b613df8565b602081049091015460025460ff601f9093166101000a909104821691612c6a91600160a01b900416600a613f78565b600154604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa158015612cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd89190613e7b565b612ce29190613f9d565b612cec9190614108565b612cf69190613f9d565b8354612d169063ffffffff600160281b82048116916101009004166140eb565b845463ffffffff91821692909211925042600160681b9092041611801590612df95781612d47575060019392505050565b835460009060649060039060ff166004811115612d6657612d666133bf565b60ff1660058110612d7957612d79613df8565b6020810491909101548754601f90921661010090810a90910460ff1691612db491600160281b820463ffffffff9081169291909104166140eb565b612dbe9190614b53565b612dc89190614b73565b855463ffffffff91821661010090910490911611905080612dee57506002949350505050565b506004949350505050565b60055484546000914291612e1d9163ffffffff90811691600160481b9004166140eb565b865463ffffffff919091169190911115915060009060649060039060ff166004811115612e4c57612e4c6133bf565b60ff1660058110612e5f57612e5f613df8565b602081049091015460025460ff601f9093166101000a909104821691612e8e91600160a01b900416600a613f78565b600154604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa158015612ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612efc9190613e7b565b612f069190613f9d565b612f109190614108565b612f1a9190613f9d565b8654610100900463ffffffff16119050838015612f345750805b8015612f3d5750815b15612f4e5750600495945050505050565b50600095945050505050565b600260005403612fac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105c3565b6002600055565b805460ff60b81b1916600160b81b178155600554612fdf9063ffffffff600160401b90910416426148cd565b815463ffffffff91909116600160881b0263ffffffff60881b19909116179055565b336000818152600a602090815260408083206001600160401b03891684528252808320805464ffffffffff191686151564ffffffff0019161761010063ffffffff89811691909102919091179091558754948452600990925290912054600160681b9092048116911610156130a15782543360009081526009602052604090208054600160681b90920463ffffffff1663ffffffff199092169190911790555b80156130e9578254829084906001906130c6908490610100900463ffffffff166140eb565b92506101000a81548163ffffffff021916908363ffffffff160217905550613129565b82548290849060059061310a908490600160281b900463ffffffff166140eb565b92506101000a81548163ffffffff021916908363ffffffff1602179055505b50505050565b604080516101608101909152600080825260208201908152602001600081526000602082018190526040820181905260608083018290526080830182905260a0830182905260c083019190915260e082018190526101009091015290565b6001830191839082156132105791602002820160005b838211156131e157835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026131a3565b801561320e5782816101000a81549060ff02191690556001016020816000010492830192600103026131e1565b505b5061321c929150613279565b5090565b6040805161012081018252600080825260208201819052918101919091526060810161324a61328e565b815260200161325761328e565b8152600060208201819052604082018190526060820181905260809091015290565b5b8082111561321c576000815560010161327a565b6040518060a001604052806005906020820280368337509192915050565b6001600160a01b0381168114610e8257600080fd5b80356132cc816132ac565b919050565b60008083601f8401126132e357600080fd5b5081356001600160401b038111156132fa57600080fd5b60208301915083602082850101111561055657600080fd5b60008060006040848603121561332757600080fd5b8335613332816132ac565b925060208401356001600160401b0381111561334d57600080fd5b613359868287016132d1565b9497909650939450505050565b6001600160401b0381168114610e8257600080fd5b80356132cc81613366565b6000806040838503121561339957600080fd5b82356133a481613366565b915060208301356133b481613366565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b600581106133e5576133e56133bf565b9052565b600881106133e5576133e56133bf565b60005b838110156134145781810151838201526020016133fc565b50506000910152565b600081518084526134358160208601602086016133f9565b601f01601f19169290920160200192915050565b80516001600160401b031682526000610160602083015161346d60208601826133d5565b50604083015161348060408601826133e9565b506060830151613498606086018263ffffffff169052565b5060808301516134b0608086018263ffffffff169052565b5060a08301516134c860a086018263ffffffff169052565b5060c08301516134e060c086018263ffffffff169052565b5060e08301516134f860e086018263ffffffff169052565b50610100838101516001600160a01b031690850152610120808401518186018390526135268387018261341d565b925050506101408084015185830382870152613542838261341d565b9695505050505050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156135a357605f19888703018552613591868351613449565b95509382019390820190600101613575565b50508394506001600160401b03871681870152505050509392505050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b03811182821017156135fa576135fa6135c1565b60405290565b604051608081016001600160401b03811182821017156135fa576135fa6135c1565b604051606081016001600160401b03811182821017156135fa576135fa6135c1565b60405160a081016001600160401b03811182821017156135fa576135fa6135c1565b604051601f8201601f191681016001600160401b038111828210171561368e5761368e6135c1565b604052919050565b60ff81168114610e8257600080fd5b80356132cc81613696565b600082601f8301126136c157600080fd5b6136c9613644565b8060a08401858111156136db57600080fd5b845b818110156136fe5780356136f081613696565b8452602093840193016136dd565b509095945050505050565b63ffffffff81168114610e8257600080fd5b80356132cc81613709565b6000610220828403121561373957600080fd5b6137416135d7565b61374a836132c1565b8152613758602084016132c1565b6020820152613769604084016136a5565b604082015261377b84606085016136b0565b606082015261010061378f858286016136b0565b60808301526137a16101a0850161371b565b60a08301526137b36101c0850161371b565b60c08301526137c56101e0850161371b565b60e08301526137d7610200850161337b565b908201529392505050565b6000602082840312156137f457600080fd5b81356137ff81613366565b9392505050565b60006001600160401b0382111561381f5761381f6135c1565b5060051b60200190565b8015158114610e8257600080fd5b60006001600160401b03821115613850576138506135c1565b50601f01601f191660200190565b60008060006040848603121561387357600080fd5b83356001600160401b038082111561388a57600080fd5b818601915086601f83011261389e57600080fd5b813560206138b36138ae83613806565b613666565b82815260059290921b8401810191818101908a8411156138d257600080fd5b8286015b848110156139a9578035868111156138ed57600080fd5b87016080818e03601f1901121561390357600080fd5b61390b613600565b8582013561391881613829565b81526040820135613928816132ac565b818701526060820135604082015260808201358881111561394857600080fd5b8083019250508d603f83011261395d57600080fd5b8582013561396d6138ae82613837565b8181528f604083860101111561398257600080fd5b816040850189830137600091810188019190915260608201528452509183019183016138d6565b50975050870135925050808211156139c057600080fd5b50613359868287016132d1565b600080602083850312156139e057600080fd5b82356001600160401b038111156139f657600080fd5b613a02858286016132d1565b90969095509350505050565b8060005b600581101561312957815160ff16845260209384019390910190600101613a12565b81516001600160a01b0316815261022081016020830151613a6060208401826001600160a01b03169052565b506040830151613a75604084018260ff169052565b506060830151613a886060840182613a0e565b506080830151610100613a9d81850183613a0e565b60a085015163ffffffff9081166101a086015260c086015181166101c086015260e0860151166101e08501528401516001600160401b03811661020085015290505b5092915050565b600060208284031215613af857600080fd5b81356137ff816132ac565b600060208284031215613b1557600080fd5b5035919050565b600060208284031215613b2e57600080fd5b81356137ff81613709565b60038110610e8257600080fd5b6001600160e01b031981168114610e8257600080fd5b600080600060408486031215613b7157600080fd5b6001600160401b038085351115613b8757600080fd5b8435850186601f820112613b9a57600080fd5b613ba76138ae8235613806565b81358082526020808301929160051b84010189811115613bc657600080fd5b602084015b81811015613cbf578581351115613be157600080fd5b803585016060818d03601f19011215613bf957600080fd5b613c01613622565b6020820135613c0f816132ac565b81526040820135613c1f81613b39565b6020820152606082013588811115613c3657600080fd5b8083019250508c603f830112613c4b57600080fd5b6020820135613c5c6138ae82613806565b81815260059190911b83016040019060208101908f831115613c7d57600080fd5b6040850194505b82851015613ca957613c968535613b46565b8435825260209485019490910190613c84565b6040840152505085525060209384019301613bcb565b50909650505050602085013581811115613cd857600080fd5b613ce4878288016132d1565b959890975094955050505050565b60008060408385031215613d0557600080fd5b8235613d1081613366565b915060208301356133b481613829565b60008060408385031215613d3357600080fd5b82356133a4816132ac565b60008060408385031215613d5157600080fd5b8235613d5c816132ac565b915060208301356133b481613709565b6000806000838503610240811215613d8357600080fd5b61022080821215613d9357600080fd5b85945084013590506001600160401b0381111561334d57600080fd5b602081526000610c2c6020830184613449565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115613adf57613adf613dc2565b634e487b7160e01b600052603260045260246000fd5b60006001600160401b03808316818103613e2a57613e2a613dc2565b6001019392505050565b60208082526027908201527f4d696e696d756d2059657320766f746573206d757374206265206c6573732074604082015266068616e203130360cc1b606082015260800190565b600060208284031215613e8d57600080fd5b5051919050565b600181815b80851115613ecf578160001904821115613eb557613eb5613dc2565b80851615613ec257918102915b93841c9390800290613e99565b509250929050565b600082613ee657506001610c2f565b81613ef357506000610c2f565b8160018114613f095760028114613f1357613f2f565b6001915050610c2f565b60ff841115613f2457613f24613dc2565b50506001821b610c2f565b5060208310610133831016604e8410600b8410161715613f52575081810a610c2f565b613f5c8383613e94565b8060001904821115613f7057613f70613dc2565b029392505050565b6000610c2c60ff841683613ed7565b634e487b7160e01b600052601260045260246000fd5b600082613fac57613fac613f87565b500490565b60208082526047908201527f50726f706f73616c207468726573686f6c64206d757374206265206c6573732060408201527f7468616e2074686520746f74616c20737570706c79206f662074686520766f7460608201526632903a37b5b2b760c91b608082015260a00190565b60208082526017908201527f50726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156140dd57888303603f190185528151805115158452878101516001600160a01b03168885015286810151878501526060908101516080918501829052906140c98186018361341d565b96890196945050509086019060010161407c565b509098975050505050505050565b63ffffffff818116838216019080821115613adf57613adf613dc2565b8082028115828204841417610c2f57610c2f613dc2565b60006020828403121561413157600080fd5b81516137ff81613829565b60208082526023908201527f596f752068617665206c6f636b65642066756e64732064756520746f20766f74604082015262696e6760e81b606082015260800190565b63ffffffff828116828216039080821115613adf57613adf613dc2565b600181811c908216806141b057607f821691505b6020821081036141d057634e487b7160e01b600052602260045260246000fd5b50919050565b80516132cc816132ac565b600060208083850312156141f457600080fd5b82516001600160401b038082111561420b57600080fd5b818501915085601f83011261421f57600080fd5b815161422d6138ae82613806565b81815260059190911b8301840190848101908883111561424c57600080fd5b8585015b83811015614344578051858111156142685760008081fd5b86016060818c03601f19018113156142805760008081fd5b614288613622565b89830151614295816132ac565b81526040838101516142a681613b39565b828c01529183015191888311156142bd5760008081fd5b82840193508d603f8501126142d457600092508283fd5b8a84015192506142e66138ae84613806565b83815260059390931b84018101928b8101908f8511156143065760008081fd5b948201945b8486101561432d57855161431e81613b46565b8252948c0194908c019061430b565b918301919091525085525050918601918601614250565b5098975050505050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015614409578385038a52825180516001600160a01b031686528681015160609081880190600381106143a7576143a76133bf565b888a01526040928301519288019190915281519081905290870190608087019084905b808210156143f45783516001600160e01b03191683529289019291890191600191909101906143ca565b50509a87019a95505091850191600101614370565b509298975050505050505050565b60608152600061442a6060830186614351565b6001600160a01b03851660208401528281036040840152613542818561341d565b60006020828403121561445d57600080fd5b81516137ff816132ac565b6000602080838503121561447b57600080fd5b82516001600160401b038082111561449257600080fd5b818501915085601f8301126144a657600080fd5b81516144b46138ae82613806565b81815260059190911b830184019084810190888311156144d357600080fd5b8585015b83811015614344578051858111156144ef5760008081fd5b86016080818c03601f19018113156145075760008081fd5b61450f613600565b8983015161451c81613829565b815260408381015161452d816132ac565b828c01526060848101518284015292840151928984111561454e5760008081fd5b83850194508e603f86011261456557600093508384fd5b8b85015193506145776138ae85613837565b8481528f8386880101111561458c5760008081fd5b61459b858e83018589016133f9565b9083015250855250509186019186016144d7565b600082516145c18184602087016133f9565b9190910192915050565b6000600182016145dd576145dd613dc2565b5060010190565b80516132cc81613696565b600082601f83011261460057600080fd5b614608613644565b8060a084018581111561461a57600080fd5b845b818110156136fe57805161462f81613696565b84526020938401930161461c565b80516132cc81613709565b80516132cc81613366565b6000610220828403121561466657600080fd5b61466e6135d7565b614677836141d6565b8152614685602084016141d6565b6020820152614696604084016145e4565b60408201526146a884606085016145ef565b60608201526101006146bc858286016145ef565b60808301526146ce6101a0850161463d565b60a08301526146e06101c0850161463d565b60c08301526146f26101e0850161463d565b60e08301526137d76102008501614648565b602081526000610c2c6020830184614351565b60208082526028908201527f596f75206d7573742068617665206120706f7369746976652062616c616e636560408201526720746f20766f746560c01b606082015260800190565b60208082526027908201527f596f75206861766520616c726561647920766f746564206f6e207468697320706040820152661c9bdc1bdcd85b60ca1b606082015260800190565b6000602082840312156147b857600080fd5b81356137ff81613696565b8060005b60058110156131295781356147db81613696565b60ff16845260209384019391909101906001016147c7565b61022081018235614803816132ac565b6001600160a01b03168252602083013561481c816132ac565b6001600160a01b03166020830152614836604084016136a5565b60ff16604083015261484e60608084019085016147c3565b61010061485f8184018286016147c3565b506101a061486e81850161371b565b63ffffffff16908301526101c061488684820161371b565b63ffffffff16908301526101e061489e84820161371b565b63ffffffff16908301526102006148b684820161337b565b6001600160401b038116848301525b505092915050565b80820180821115610c2f57610c2f613dc2565b601f82111561492a57600081815260208120601f850160051c810160208610156149075750805b601f850160051c820191505b8181101561492657828155600101614913565b5050505b505050565b81516001600160401b03811115614948576149486135c1565b61495c81614956845461419c565b846148e0565b602080601f83116001811461499157600084156149795750858301515b600019600386901b1c1916600185901b178555614926565b600085815260208120601f198616915b828110156149c0578886015182559484019460019091019084016149a1565b50858210156149de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160401b03831115614a0557614a056135c1565b614a1983614a13835461419c565b836148e0565b6000601f841160018114614a4d5760008515614a355750838201355b600019600387901b1c1916600186901b178355614aa7565b600083815260209020601f19861690835b82811015614a7e5786850135825560209485019460019092019101614a5e565b5086821015614a9b5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160401b0389168152600063ffffffff808a166020840152614ad6604084018a6133d5565b808816606084015280871660808401525060e060a0830152614afb60e083018661341d565b82810360c0840152838152838560208301376000602085830101526020601f19601f8601168201019150509998505050505050505050565b6001600160401b03828116828216039080821115613adf57613adf613dc2565b63ffffffff8181168382160280821691908281146148c5576148c5613dc2565b600063ffffffff80841680614b8a57614b8a613f87565b9216919091049291505056fea26469706673582212204caa4983b9582f11d5358592caf68832fd032e7ca97461af44604db6d7201c4164736f6c63430008110033";

type RadomGovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RadomGovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RadomGovernance__factory extends ContractFactory {
  constructor(...args: RadomGovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RadomGovernance> {
    return super.deploy(overrides || {}) as Promise<RadomGovernance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RadomGovernance {
    return super.attach(address) as RadomGovernance;
  }
  override connect(signer: Signer): RadomGovernance__factory {
    return super.connect(signer) as RadomGovernance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RadomGovernanceInterface {
    return new utils.Interface(_abi) as RadomGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RadomGovernance {
    return new Contract(address, _abi, signerOrProvider) as RadomGovernance;
  }
}
