/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RadomGovernance,
  RadomGovernanceInterface,
} from "../../contracts/RadomGovernance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "argument",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokensDeposited",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "stakedAmount",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "destinationAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "StakedBalanceTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "yesVotes",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "noVotes",
        type: "uint32",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTokensWithdrawn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "unstakedAmount",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "_proposals",
    outputs: [
      {
        internalType: "enum ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "yesVotes",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "noVotes",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "startTime",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "endTime",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "isExecuted",
        type: "bool",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "argument",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_proposalId",
        type: "uint64",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernanceParameters",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8",
            name: "quorum",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedProposals",
    outputs: [
      {
        components: [
          {
            internalType: "enum ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "yesVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "noVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isExecuted",
            type: "bool",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "argument",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Proposal[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_proposalId",
        type: "uint64",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "enum ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "yesVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "noVotes",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isExecuted",
            type: "bool",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "argument",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "proposalId",
        type: "uint64",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8",
            name: "quorum",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "govParam",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voteToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "radomRegistryDiamond",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "stakeDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8[5]",
            name: "minYes",
            type: "uint8[5]",
          },
          {
            internalType: "uint8",
            name: "quorum",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "proposalPeriod",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "proposalThreshold",
            type: "uint64",
          },
        ],
        internalType: "struct GovernanceParameters",
        name: "govParam",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeChangeGovernanceParameters",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isDelegateCall",
            type: "bool",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct ExecutionData",
        name: "executionData",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeCodeExecution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_facetCuts",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeDiamondChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeOwnershipChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeText",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalances",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_amount",
        type: "uint32",
      },
    ],
    name: "transferStakedBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_proposalId",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_yesVote",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeAmount",
        type: "uint32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000556141cd806100256000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063aa9224cd116100a2578063c7f2156011610071578063c7f21560146102d6578063cf1d7a0a146102e9578063db4e472b1461033d578063ded5da6a14610350578063f1610a281461036357600080fd5b8063aa9224cd1461028a578063b590be771461029d578063c1dc069a146102b0578063c3a2b0e0146102c357600080fd5b8063570809c1116100e9578063570809c1146101b05780635835cf30146101db5780636386c1c7146101f057806364aa60801461024d578063a694fc3a1461027557600080fd5b80631293191e1461011b5780631460fa87146101415780631e754f641461017c5780633fd69db11461019d575b600080fd5b61012e610129366004612b6d565b610383565b6040519081526020015b60405180910390f35b61016761014f366004612bc1565b60076020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610138565b61018f61018a366004612c0a565b6103c9565b604051610138929190612d8e565b61012e6101ab366004612f0c565b61069e565b6101c36101be366004613006565b6106b6565b6040516001600160401b039091168152602001610138565b6101e36106dd565b6040516101389190613047565b6102306101fe366004612bc1565b6001600160a01b031660009081526007602090815260408083205460089092529091205463ffffffff91821692911690565b6040805163ffffffff938416815292909116602083015201610138565b61026061025b3660046130f0565b6107a7565b6040516101389998979695949392919061310d565b61028861028336600461318f565b610926565b005b6102886102983660046131c5565b610ce5565b6102886102ab3660046130f0565b610f77565b6101c36102be3660046131e2565b611a40565b61012e6102d136600461326b565b611ca3565b6102886102e4366004613401565b611cbb565b61032d6102f736600461342f565b6001600160a01b03821660009081526009602090815260408083206001600160401b038516845290915290205460ff1692915050565b6040519015158152602001610138565b61028861034b366004613467565b611ee7565b61028861035e366004613548565b612252565b6103766103713660046130f0565b612400565b6040516101389190613576565b604080516001600160a01b03851660208201526000916103b891600191015b60405160208183030381529060405285856125e8565b6001600160401b0316949350505050565b6005546060906000906001600160401b03600160281b9091048116908490811683036103f25750805b6000816001600160401b03166001600160401b0381111561041557610415612e03565b60405190808252806020026020018201604052801561044e57816020015b61043b6129bd565b8152602001906001900390816104335790505b50905060005b826001600160401b0316816001600160401b0316101561068f576006600061047c838b61359f565b6001600160401b0316815260208101919091526040908101600020815161012081019092528054829060ff1660048111156104b9576104b9612c43565b60048111156104ca576104ca612c43565b8152815463ffffffff610100820481166020840152600160281b820481166040840152600160481b820481166060840152600160681b820416608083015260ff600160881b90910416151560a082015260018201546001600160a01b031660c082015260028201805460e090920191610542906135bf565b80601f016020809104026020016040519081016040528092919081815260200182805461056e906135bf565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b505050505081526020016003820180546105d4906135bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610600906135bf565b801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b50505050508152505082826001600160401b031681518110610671576106716135f9565b602002602001018190525080806106879061360f565b915050610454565b509350909150505b9250929050565b60006103b86002856040516020016103a29190613635565b60006106d460046040518060200160405280600081525085856125e8565b90505b92915050565b6106e5612a0d565b6040805160e081018252600180546001600160a01b0390811683526002549081166020840152600160a01b900460ff1682840152825160a0810193849052919290916060840191600390600590826000855b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610737575050509284525050506003919091015460ff81166020830152610100810463ffffffff166040830152600160281b90046001600160401b0316606090910152919050565b60066020526000908152604090208054600182015460028301805460ff8085169563ffffffff6101008704811696600160281b8104821696600160481b8204831696600160681b830490931695600160881b909204909416936001600160a01b0316929190610815906135bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610841906135bf565b801561088e5780601f106108635761010080835404028352916020019161088e565b820191906000526020600020905b81548152906001019060200180831161087157829003601f168201915b5050505050908060030180546108a3906135bf565b80601f01602080910402602001604051908101604052809291908181526020018280546108cf906135bf565b801561091c5780601f106108f15761010080835404028352916020019161091c565b820191906000526020600020905b8154815290600101906020018083116108ff57829003601f168201915b5050505050905089565b61092e61287c565b600154604051636eb1769f60e11b815233600482015230602482015282916001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190613680565b1015610a115760405162461bcd60e51b815260206004820152603560248201527f596f75206d75737420617070726f76652074686520636f6e747261637420746f6044820152741039ba30b5b2903cb7bab9103b37ba32aa37b5b2b760591b60648201526084015b60405180910390fd5b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190613680565b1015610add5760405162461bcd60e51b815260206004820152602960248201527f596f7520646f206e6f74206861766520656e6f75676820766f7465546f6b656e60448201526820746f207374616b6560b81b6064820152608401610a08565b600254600090610af890600160a01b900460ff16600a61377d565b610b0290836137a2565b33600090815260076020526040812080549293508392909190610b2c90849063ffffffff166137b6565b92506101000a81548163ffffffff021916908363ffffffff16021790555080600560018282829054906101000a900463ffffffff16610b6b91906137b6565b92506101000a81548163ffffffff021916908363ffffffff16021790555060006001800160149054906101000a900460ff16600a610ba9919061377d565b610bb99063ffffffff84166137d3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3a91906137ea565b905080610c815760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610a08565b6001546040805184815263ffffffff861660208201526001600160a01b039092169082015233907fd676067c05ef8b4ac4a22dcaf7b041b6b62cee13c21263d778c878fdda9162529060600160405180910390a2505050610ce26001600055565b50565b610ced61287c565b336000908152600860205260409020544263ffffffff90911610610d235760405162461bcd60e51b8152600401610a0890613807565b3360009081526007602052604090205463ffffffff80831691161015610da35760405162461bcd60e51b815260206004820152602f60248201527f596f7520646f206e6f74206861766520656e6f756768207374616b656420667560448201526e6e647320746f20776974686472617760881b6064820152608401610a08565b3360009081526007602052604081208054839290610dc890849063ffffffff1661384a565b92506101000a81548163ffffffff021916908363ffffffff16021790555080600560018282829054906101000a900463ffffffff16610e07919061384a565b92506101000a81548163ffffffff021916908363ffffffff16021790555060006001800160149054906101000a900460ff16600a610e45919061377d565b610e559063ffffffff84166137d3565b60015460405163a9059cbb60e01b8152336004820152602481018390529192506000916001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed091906137ea565b905080610f175760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610a08565b6001546040805184815263ffffffff861660208201526001600160a01b039092169082015233907f4fc11fd1483f37f7268881dbaa11bc46c4a72298c87d20bfa4d52562e2dd52449060600160405180910390a25050610ce26001600055565b610f7f61287c565b6001600160401b0381166000908152600660205260409020805460045460025460ff92831692606492811691610fbf91600160a01b90910416600a61377d565b600154604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa158015611009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102d9190613680565b61103791906137a2565b61104191906137d3565b61104b91906137a2565b825461106b9063ffffffff600160281b82048116916101009004166137b6565b63ffffffff1610156110bf5760405162461bcd60e51b815260206004820152601f60248201527f50726f706f73616c20686173206e6f7420726561636865642071756f72756d006044820152606401610a08565b606460038260048111156110d5576110d5612c43565b60ff16600581106110e8576110e86135f9565b6020810491909101548454601f90921661010090810a90910460ff169161112391600160281b820463ffffffff9081169291909104166137b6565b61112d9190613867565b611137919061388f565b825463ffffffff918216610100909104909116116111975760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20686173206e6f74207061737365640000000000000000006044820152606401610a08565b8154600160881b900460ff16156111c05760405162461bcd60e51b8152600401610a08906138b2565b606460038260048111156111d6576111d6612c43565b60ff16600581106111e9576111e96135f9565b60208104919091015460055461121692601f1661010090810a90920460ff1691900463ffffffff16613867565b611220919061388f565b825463ffffffff918216610100909104909116118061124d5750815442600160681b90910463ffffffff16105b6112a55760405162461bcd60e51b8152602060048201526024808201527f50726f706f73616c20766f74696e6720706572696f6420686173206e6f7420656044820152631b99195960e21b6064820152608401610a08565b815460ff60881b1916600160881b17825560008160048111156112ca576112ca612c43565b036113ed5760008260020180546112e0906135bf565b80601f016020809104026020016040519081016040528092919081815260200182805461130c906135bf565b80156113595780601f1061132e57610100808354040283529160200191611359565b820191906000526020600020905b81548152906001019060200180831161133c57829003601f168201915b505050505080602001905181019061137191906138f4565b60025460408051600080825260208201928390526307e4c70760e21b9092529293506001600160a01b0390911691631f931c1c916113b59185919060248101613b2a565b600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b50505050506119f8565b600181600481111561140157611401612c43565b036114dc576000826002018054611417906135bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611443906135bf565b80156114905780601f1061146557610100808354040283529160200191611490565b820191906000526020600020905b81548152906001019060200180831161147357829003601f168201915b50505050508060200190518101906114a89190613b5e565b60025460405163f2fde38b60e01b81526001600160a01b03808416600483015292935091169063f2fde38b906024016113b5565b60028160048111156114f0576114f0612c43565b0361171c576000826002018054611506906135bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611532906135bf565b801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b50505050508060200190518101906115979190613b7b565b80519091501561165a57600081602001516001600160a01b031682606001516040516115c39190613c52565b600060405180830381855af49150503d80600081146115fe576040519150601f19603f3d011682016040523d82523d6000602084013e611603565b606091505b50509050806116545760405162461bcd60e51b815260206004820152601d60248201527f4572726f7220657865637574696e672070726f706f73616c20636f64650000006044820152606401610a08565b50611716565b600081602001516001600160a01b0316826040015183606001516040516116819190613c52565b60006040518083038185875af1925050503d80600081146116be576040519150601f19603f3d011682016040523d82523d6000602084013e6116c3565b606091505b50509050806117145760405162461bcd60e51b815260206004820152601d60248201527f4572726f7220657865637574696e672070726f706f73616c20636f64650000006044820152606401610a08565b505b506119f8565b600381600481111561173057611730612c43565b0361199f576000826002018054611746906135bf565b80601f0160208091040260200160405190810160405280929190818152602001828054611772906135bf565b80156117bf5780601f10611794576101008083540402835291602001916117bf565b820191906000526020600020905b8154815290600101906020018083116117a257829003601f168201915b50505050508060200190518101906117d79190613c8f565b600554909150610100900463ffffffff1615801590611824575060015481516001600160a01b0390811691161415806118245750600254604082015160ff908116600160a01b9092041614155b156118d45760405162461bcd60e51b815260206004820152606e60248201527f43616e6e6f74206368616e676520766f746520746f6b656e206f72207374616b60448201527f6520646563696d616c7320696620746865726520617265207374616b6564207460648201527f6f6b656e732e2050726f706f7365207472616e7366657272696e67206f776e6560848201526d3939b434b81034b739ba32b0b21760911b60a482015260c401610a08565b8051600180546001600160a01b039283166001600160a01b0319909116178155602083015160028054604086015160ff16600160a01b026001600160a81b0319909116929094169190911792909217909155606082015182919061193c906003906005612a51565b5060808201516003909101805460a084015160c0909401516001600160401b0316600160281b026cffffffffffffffff00000000001963ffffffff9095166101000264ffffffffff1990921660ff909416939093171792909216179055506119f8565b60048160048111156119b3576119b3612c43565b146119f85760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642070726f706f73616c207479706560581b6044820152606401610a08565b6040516001600160401b03841681527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200160405180910390a15050610ce26001600055565b60006064611a5661012086016101008701613d64565b60ff1611158015611a7a57506064611a746080860160608701613d64565b60ff1611155b8015611a9957506064611a9360a0860160808701613d64565b60ff1611155b8015611ab857506064611ab260c0860160a08701613d64565b60ff1611155b8015611ad757506064611ad160e0860160c08701613d64565b60ff1611155b8015611af757506064611af1610100860160e08701613d64565b60ff1611155b611b135760405162461bcd60e51b8152600401610a0890613d81565b6000611b226020860186612bc1565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b839190613680565b9050611b97610160860161014087016130f0565b6001600160401b0316611bb06060870160408801613d64565b611bbb90600a61377d565b611bc590836137a2565b1015611be35760405162461bcd60e51b8152600401610a0890613dc8565b640100000000611bf96060870160408801613d64565b611c0490600a61377d565b611c0e90836137a2565b1115611c6e5760405162461bcd60e51b815260206004820152602960248201527f50726f706f73616c207468726573686f6c64206d757374206265206c657373206044820152683a3430b710192f199960b91b6064820152608401610a08565b611c9a600386604051602001611c849190613e35565b60405160208183030381529060405286866125e8565b95945050505050565b60006103b86000856040516020016103a29190613f07565b6001600160401b0382166000908152600660205260409020805442600160681b90910463ffffffff1611611d285760405162461bcd60e51b8152602060048201526014602482015273141c9bdc1bdcd85b081a185cc8195e1c1a5c995960621b6044820152606401610a08565b3360009081526007602052604090205463ffffffff16611d9b5760405162461bcd60e51b815260206004820152602860248201527f596f75206d7573742068617665206120706f7369746976652062616c616e636560448201526720746f20766f746560c01b6064820152608401610a08565b8054600160881b900460ff1615611dc45760405162461bcd60e51b8152600401610a08906138b2565b3360009081526009602090815260408083206001600160401b038716845290915290205460ff1615611e485760405162461bcd60e51b815260206004820152602760248201527f596f75206861766520616c726561647920766f746564206f6e207468697320706044820152661c9bdc1bdcd85b60ca1b6064820152608401610a08565b611e5281836128d5565b3360008181526009602090815260408083206001600160401b03881680855290835292819020805460ff19166001179055845481519384528615159284019290925263ffffffff6101008304811691840191909152600160281b9091041660608201527f6dc1b06bc1dbf44e51a1335ada376f6a896c93405a0fd93eea0a61ee3c0decdb9060800160405180910390a2505050565b60055460ff1615611f515760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610a08565b6005805460ff191660011790556080810151606460ff9190911611801590611f845750606081015151606460ff90911611155b8015611f9e5750606081015160200151606460ff90911611155b8015611fb85750606081015160400151606460ff90911611155b8015611fd157506060818101510151606460ff90911611155b8015611feb5750606081015160800151606460ff90911611155b6120075760405162461bcd60e51b8152600401610a0890613d81565b600081600001516001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561204b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206f9190613680565b90508160c001516001600160401b03168260400151600a612090919061377d565b61209a90836137a2565b10156120b85760405162461bcd60e51b8152600401610a0890613dc8565b6401000000008260400151600a6120cf919061377d565b6120d990836137a2565b11156121325760405162461bcd60e51b815260206004820152602260248201527f5374616b656420746f6b656e732073686f756c642066697420696e2075696e74604482015261199960f11b6064820152608401610a08565b81516001600160a01b03166121895760405162461bcd60e51b815260206004820152601e60248201527f566f746520746f6b656e20616464726573732063616e6e6f74206265203000006044820152606401610a08565b8151600180546001600160a01b039283166001600160a01b0319909116178155602084015160028054604087015160ff16600160a01b026001600160a81b031990911692909416919091179290921790915560608301518391906121f1906003906005612a51565b5060808201516003909101805460a084015160c0909401516001600160401b0316600160281b026cffffffffffffffff00000000001963ffffffff9095166101000264ffffffffff1990921660ff9094169390931717929092161790555050565b61225a61287c565b3360009081526007602052604090205463ffffffff808316911610156122da5760405162461bcd60e51b815260206004820152602f60248201527f596f7520646f206e6f74206861766520656e6f756768207374616b656420667560448201526e373239903a37903a3930b739b332b960891b6064820152608401610a08565b336000908152600860205260409020544263ffffffff909116106123105760405162461bcd60e51b8152600401610a0890613807565b336000908152600760205260408120805483929061233590849063ffffffff1661384a565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b03841660009081526007602052604081208054859450909261237d918591166137b6565b92506101000a81548163ffffffff021916908363ffffffff160217905550816001600160a01b0316336001600160a01b03167fb7ce2951b7b593ee2e36d1e53e6fa9d4ed9157314863b392287111e2ab4bdc09836040516123ea919063ffffffff91909116815260200190565b60405180910390a36123fc6001600055565b5050565b6124086129bd565b6001600160401b03821660009081526006602052604090819020815161012081019092528054829060ff16600481111561244457612444612c43565b600481111561245557612455612c43565b8152815463ffffffff610100820481166020840152600160281b820481166040840152600160481b820481166060840152600160681b820416608083015260ff600160881b90910416151560a082015260018201546001600160a01b031660c082015260028201805460e0909201916124cd906135bf565b80601f01602080910402602001604051908101604052809291908181526020018280546124f9906135bf565b80156125465780601f1061251b57610100808354040283529160200191612546565b820191906000526020600020905b81548152906001019060200180831161252957829003601f168201915b5050505050815260200160038201805461255f906135bf565b80601f016020809104026020016040519081016040528092919081815260200182805461258b906135bf565b80156125d85780601f106125ad576101008083540402835291602001916125d8565b820191906000526020600020905b8154815290600101906020018083116125bb57829003601f168201915b5050505050815250509050919050565b600454336000908152600760205260408120549091600160281b90046001600160401b031663ffffffff90911610156126895760405162461bcd60e51b815260206004820152603f60248201527f596f75206d7573742068617665207374616b6564206174206c6561737420746860448201527f652070726f706f73616c207468726573686f6c6420746f2070726f706f7365006064820152608401610a08565b600554600160281b90046001600160401b0316600090815260066020526040902080548690829060ff191660018360048111156126c8576126c8612c43565b0217905550805463ffffffff42818116600160481b026cffffffff0000000000000000001990931692909217835560045461270c9261010090910490911690613f1a565b815463ffffffff91909116600160681b0263ffffffff60681b199091161781556001810180546001600160a01b031916331790556002810161274e8682613f7c565b506003810161275e84868361403b565b50600554815460405133927f58377810ef50bef1bd2d99f95540b415cbce13b844a2aabab985ddf09a7d5b16926127c892600160281b9092046001600160401b0316918b91600160481b810463ffffffff90811692600160681b90920416908c908c908c906140fb565b60405180910390a26127db8160016128d5565b336000908152600960209081526040808320600580546001600160401b03600160281b91829004811687529290945291909320805460ff19166001179055805491909104909116908061282d8361360f565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050600160058054906101000a90046001600160401b03166128729190614177565b9695505050505050565b6002600054036128ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a08565b6002600055565b81543360009081526008602052604090205463ffffffff600160681b90920482169116101561292f5781543360009081526008602052604090208054600160681b90920463ffffffff1663ffffffff199092169190911790555b80156129895733600090815260076020526040902054825463ffffffff918216918491600191612967918591610100909104166137b6565b92506101000a81548163ffffffff021916908363ffffffff1602179055505050565b33600090815260076020526040902054825463ffffffff918216918491600591612967918591600160281b909104166137b6565b60408051610120810190915280600081526000602082018190526040820181905260608083018290526080830182905260a0830182905260c083019190915260e082018190526101009091015290565b6040805160e0810182526000808252602082018190529181019190915260608101612a36612ae4565b81526000602082018190526040820181905260609091015290565b600183019183908215612ad45791602002820160005b83821115612aa557835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302612a67565b8015612ad25782816101000a81549060ff0219169055600101602081600001049283019260010302612aa5565b505b50612ae0929150612b02565b5090565b6040518060a001604052806005906020820280368337509192915050565b5b80821115612ae05760008155600101612b03565b6001600160a01b0381168114610ce257600080fd5b60008083601f840112612b3e57600080fd5b5081356001600160401b03811115612b5557600080fd5b60208301915083602082850101111561069757600080fd5b600080600060408486031215612b8257600080fd5b8335612b8d81612b17565b925060208401356001600160401b03811115612ba857600080fd5b612bb486828701612b2c565b9497909650939450505050565b600060208284031215612bd357600080fd5b8135612bde81612b17565b9392505050565b6001600160401b0381168114610ce257600080fd5b8035612c0581612be5565b919050565b60008060408385031215612c1d57600080fd5b8235612c2881612be5565b91506020830135612c3881612be5565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60058110612c6957612c69612c43565b9052565b60005b83811015612c88578181015183820152602001612c70565b50506000910152565b60008151808452612ca9816020860160208601612c6d565b601f01601f19169290920160200192915050565b6000610120612ccd848451612c59565b6020830151612ce4602086018263ffffffff169052565b506040830151612cfc604086018263ffffffff169052565b506060830151612d14606086018263ffffffff169052565b506080830151612d2c608086018263ffffffff169052565b5060a0830151612d4060a086018215159052565b5060c0830151612d5b60c08601826001600160a01b03169052565b5060e08301518160e0860152612d7382860182612c91565b91505061010080840151858303828701526128728382612c91565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015612de557605f19888703018552612dd3868351612cbd565b95509382019390820190600101612db7565b50508394506001600160401b03871681870152505050509392505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612e3b57612e3b612e03565b60405290565b604051606081016001600160401b0381118282101715612e3b57612e3b612e03565b60405160e081016001600160401b0381118282101715612e3b57612e3b612e03565b60405160a081016001600160401b0381118282101715612e3b57612e3b612e03565b604051601f8201601f191681016001600160401b0381118282101715612ecf57612ecf612e03565b604052919050565b8015158114610ce257600080fd5b60006001600160401b03821115612efe57612efe612e03565b50601f01601f191660200190565b600080600060408486031215612f2157600080fd5b83356001600160401b0380821115612f3857600080fd5b9085019060808288031215612f4c57600080fd5b612f54612e19565b8235612f5f81612ed7565b8152602083810135612f7081612b17565b8282015260408481013590830152606084013583811115612f9057600080fd5b80850194505088601f850112612fa557600080fd5b8335612fb8612fb382612ee5565b612ea7565b8181528a83838801011115612fcc57600080fd5b818387018483013760009181018301919091526060830152909550860135915080821115612ff957600080fd5b50612bb486828701612b2c565b6000806020838503121561301957600080fd5b82356001600160401b0381111561302f57600080fd5b61303b85828601612b2c565b90969095509350505050565b60006101608201905060018060a01b038084511683526020818186015116818501526040850151915060ff8083166040860152606086015192506060850160005b60058110156130a7578451831682529383019390830190600101613088565b505050505060808301516130c161010084018260ff169052565b5060a083015163ffffffff1661012083015260c08301516001600160401b0381166101408401525b5092915050565b60006020828403121561310257600080fd5b8135612bde81612be5565b600061012061311c838d612c59565b63ffffffff8b811660208501528a8116604085015289811660608501528816608084015286151560a08401526001600160a01b03861660c084015260e0830181905261316a81840186612c91565b905082810361010084015261317f8185612c91565b9c9b505050505050505050505050565b6000602082840312156131a157600080fd5b5035919050565b63ffffffff81168114610ce257600080fd5b8035612c05816131a8565b6000602082840312156131d757600080fd5b8135612bde816131a8565b60008060008385036101808112156131f957600080fd5b6101608082121561320957600080fd5b85945084013590506001600160401b03811115612ba857600080fd5b60006001600160401b0382111561323e5761323e612e03565b5060051b60200190565b60038110610ce257600080fd5b6001600160e01b031981168114610ce257600080fd5b60008060006040848603121561328057600080fd5b6001600160401b03808535111561329657600080fd5b8435850186601f8201126132a957600080fd5b6132b6612fb38235613225565b81358082526020808301929160051b840101898111156132d557600080fd5b602084015b818110156133ce5785813511156132f057600080fd5b803585016060818d03601f1901121561330857600080fd5b613310612e41565b602082013561331e81612b17565b8152604082013561332e81613248565b602082015260608201358881111561334557600080fd5b8083019250508c603f83011261335a57600080fd5b602082013561336b612fb382613225565b81815260059190911b83016040019060208101908f83111561338c57600080fd5b6040850194505b828510156133b8576133a58535613255565b8435825260209485019490910190613393565b60408401525050855250602093840193016132da565b509096505050506020850135818111156133e757600080fd5b6133f387828801612b2c565b959890975094955050505050565b6000806040838503121561341457600080fd5b823561341f81612be5565b91506020830135612c3881612ed7565b6000806040838503121561344257600080fd5b8235612c2881612b17565b60ff81168114610ce257600080fd5b8035612c058161344d565b6000610160828403121561347a57600080fd5b613482612e63565b823561348d81612b17565b815260208381013561349e81612b17565b8282015260408401356134b08161344d565b6040830152607f840185136134c457600080fd5b6134cc612e85565b806101008601878111156134df57600080fd5b606087015b818110156135045780356134f78161344d565b84529284019284016134e4565b508160608601526135148161345c565b60808601525050505061352a61012084016131ba565b60a082015261353c6101408401612bfa565b60c08201529392505050565b6000806040838503121561355b57600080fd5b823561356681612b17565b91506020830135612c38816131a8565b6020815260006106d46020830184612cbd565b634e487b7160e01b600052601160045260246000fd5b6001600160401b038181168382160190808211156130e9576130e9613589565b600181811c908216806135d357607f821691505b6020821081036135f357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001600160401b0380831681810361362b5761362b613589565b6001019392505050565b6020815281511515602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261367860a0840182612c91565b949350505050565b60006020828403121561369257600080fd5b5051919050565b600181815b808511156136d45781600019048211156136ba576136ba613589565b808516156136c757918102915b93841c939080029061369e565b509250929050565b6000826136eb575060016106d7565b816136f8575060006106d7565b816001811461370e576002811461371857613734565b60019150506106d7565b60ff84111561372957613729613589565b50506001821b6106d7565b5060208310610133831016604e8410600b8410161715613757575081810a6106d7565b6137618383613699565b806000190482111561377557613775613589565b029392505050565b60006106d460ff8416836136dc565b634e487b7160e01b600052601260045260246000fd5b6000826137b1576137b161378c565b500490565b63ffffffff8181168382160190808211156130e9576130e9613589565b80820281158282048414176106d7576106d7613589565b6000602082840312156137fc57600080fd5b8151612bde81612ed7565b60208082526023908201527f596f752068617665206c6f636b65642066756e64732064756520746f20766f74604082015262696e6760e81b606082015260800190565b63ffffffff8281168282160390808211156130e9576130e9613589565b63ffffffff81811683821602808216919082811461388757613887613589565b505092915050565b600063ffffffff808416806138a6576138a661378c565b92169190910492915050565b60208082526022908201527f50726f706f73616c2068617320616c7265616479206265656e20657865637574604082015261195960f21b606082015260800190565b6000602080838503121561390757600080fd5b82516001600160401b038082111561391e57600080fd5b818501915085601f83011261393257600080fd5b8151613940612fb382613225565b81815260059190911b8301840190848101908883111561395f57600080fd5b8585015b83811015613a575780518581111561397b5760008081fd5b86016060818c03601f19018113156139935760008081fd5b61399b612e41565b898301516139a881612b17565b81526040838101516139b981613248565b828c01529183015191888311156139d05760008081fd5b82840193508d603f8501126139e757600092508283fd5b8a84015192506139f9612fb384613225565b83815260059390931b84018101928b8101908f851115613a195760008081fd5b948201945b84861015613a40578551613a3181613255565b8252948c0194908c0190613a1e565b918301919091525085525050918601918601613963565b5098975050505050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015613b1c578385038a52825180516001600160a01b03168652868101516060908188019060038110613aba57613aba612c43565b888a01526040928301519288019190915281519081905290870190608087019084905b80821015613b075783516001600160e01b0319168352928901929189019160019190910190613add565b50509a87019a95505091850191600101613a83565b509298975050505050505050565b606081526000613b3d6060830186613a64565b6001600160a01b038516602084015282810360408401526128728185612c91565b600060208284031215613b7057600080fd5b8151612bde81612b17565b60006020808385031215613b8e57600080fd5b82516001600160401b0380821115613ba557600080fd5b9084019060808287031215613bb957600080fd5b613bc1612e19565b8251613bcc81612ed7565b815282840151613bdb81612b17565b8185015260408381015190820152606083015182811115613bfb57600080fd5b80840193505086601f840112613c1057600080fd5b82519150613c20612fb383612ee5565b8281528785848601011115613c3457600080fd5b613c4383868301878701612c6d565b60608201529695505050505050565b60008251613c64818460208701612c6d565b9190910192915050565b8051612c058161344d565b8051612c05816131a8565b8051612c0581612be5565b60006101608284031215613ca257600080fd5b613caa612e63565b8251613cb581612b17565b8152602083810151613cc681612b17565b828201526040840151613cd88161344d565b6040830152607f84018513613cec57600080fd5b613cf4612e85565b80610100860187811115613d0757600080fd5b606087015b81811015613d2c578051613d1f8161344d565b8452928401928401613d0c565b50816060860152613d3c81613c6e565b608086015250505050613d526101208401613c79565b60a082015261353c6101408401613c84565b600060208284031215613d7657600080fd5b8135612bde8161344d565b60208082526027908201527f4d696e696d756d2059657320766f746573206d757374206265206c6573732074604082015266068616e203130360cc1b606082015260800190565b60208082526047908201527f50726f706f73616c207468726573686f6c64206d757374206265206c6573732060408201527f7468616e2074686520746f74616c20737570706c79206f662074686520766f7460608201526632903a37b5b2b760c91b608082015260a00190565b61016081018235613e4581612b17565b6001600160a01b03908116835260209084820135613e6281612b17565b16838201526040840135613e758161344d565b60ff80821660408601526060850191506060860160005b6005811015613eb4578135613ea08161344d565b831684529284019290840190600101613e8c565b5050505050610100613ec781850161345c565b60ff1690830152610120613edc8482016131ba565b63ffffffff1690830152610140613ef4848201612bfa565b6001600160401b03811684830152613887565b6020815260006106d46020830184613a64565b808201808211156106d7576106d7613589565b601f821115613f7757600081815260208120601f850160051c81016020861015613f545750805b601f850160051c820191505b81811015613f7357828155600101613f60565b5050505b505050565b81516001600160401b03811115613f9557613f95612e03565b613fa981613fa384546135bf565b84613f2d565b602080601f831160018114613fde5760008415613fc65750858301515b600019600386901b1c1916600185901b178555613f73565b600085815260208120601f198616915b8281101561400d57888601518255948401946001909101908401613fee565b508582101561402b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160401b0383111561405257614052612e03565b6140668361406083546135bf565b83613f2d565b6000601f84116001811461409a57600085156140825750838201355b600019600387901b1c1916600186901b1783556140f4565b600083815260209020601f19861690835b828110156140cb57868501358255602094850194600190920191016140ab565b50868210156140e85760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6001600160401b03881681526141146020820188612c59565b600063ffffffff808816604084015280871660608401525060c0608083015261414060c0830186612c91565b82810360a0840152838152838560208301376000602085830101526020601f19601f86011682010191505098975050505050505050565b6001600160401b038281168282160390808211156130e9576130e961358956fea264697066735822122049281adb8f51459a6bd09a81ab9014bf6bba579c6dd0ad3bbce4418fb838755564736f6c63430008110033";

type RadomGovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RadomGovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RadomGovernance__factory extends ContractFactory {
  constructor(...args: RadomGovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RadomGovernance> {
    return super.deploy(overrides || {}) as Promise<RadomGovernance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RadomGovernance {
    return super.attach(address) as RadomGovernance;
  }
  override connect(signer: Signer): RadomGovernance__factory {
    return super.connect(signer) as RadomGovernance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RadomGovernanceInterface {
    return new utils.Interface(_abi) as RadomGovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RadomGovernance {
    return new Contract(address, _abi, signerOrProvider) as RadomGovernance;
  }
}
