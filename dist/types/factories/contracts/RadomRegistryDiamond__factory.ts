/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RadomRegistryDiamond,
  RadomRegistryDiamondInterface,
} from "../../contracts/RadomRegistryDiamond";

const _abi = [
  {
    inputs: [],
    name: "AddressCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DoesNotAcceptEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct RadomRegistryDiamond.ConstructorArgs",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611578806100206000396000f3fe6080604052600436106100225760003560e01c8063cbf7f748146100ed57610040565b366100405760405163e67c3afd60e01b815260040160405180910390fd5b600080356001600160e01b03191681526000805160206114d7833981519152602081905260409091205481906001600160a01b0316806100c75760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100e6573d6000f35b3d6000fd5b005b3480156100f957600080fd5b506100eb61010836600461104e565b80516001600160a01b0316610130576040516303988b8160e61b815260040160405180910390fd5b61013861023e565b604080516000808252602082019092526101539184916102dd565b805161015e906104ee565b50507fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f6020527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557ff97e938d8af42f52387bb74b8b526fda8f184cc2aa534340a8d75a88fbecc77580548216831790557f65d510a5d8f7ef134ec444f7f34ee808c8eeb5177cdfd16be0c40fe1ab43369580548216831790556307f5828d60e41b6000527f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c380549091169091179055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546000805160206114d783398151915290600160a01b900460ff16156102c75760405162461bcd60e51b815260206004820152601f60248201527f4c69624469616d6f6e643a20416c726561647920696e697469616c697a65640060448201526064016100be565b600401805460ff60a01b1916600160a01b179055565b60005b83518110156104a35760008482815181106102fd576102fd6111dd565b60200260200101516020015190506000600281111561031e5761031e6111f3565b816002811115610330576103306111f3565b0361037e5761037985838151811061034a5761034a6111dd565b602002602001015160000151868481518110610368576103686111dd565b602002602001015160400151610571565b610490565b6001816002811115610392576103926111f3565b036103db576103798583815181106103ac576103ac6111dd565b6020026020010151600001518684815181106103ca576103ca6111dd565b6020026020010151604001516106f0565b60028160028111156103ef576103ef6111f3565b0361043857610379858381518110610409576104096111dd565b602002602001015160000151868481518110610427576104276111dd565b602002602001015160400151610880565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100be565b508061049b8161121f565b9150506102e0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516104d793929190611288565b60405180910390a16104e9828261099e565b505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040516000805160206114d7833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60008151116105925760405162461bcd60e51b81526004016100be90611388565b6000805160206114d78339815191526001600160a01b0383166105c75760405162461bcd60e51b81526004016100be906113d3565b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105fd576105fd8285610a64565b60005b83518110156106e957600084828151811061061d5761061d6111dd565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156106bb5760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100be565b6106c78583868a610ace565b836106d18161141f565b945050505080806106e19061121f565b915050610600565b5050505050565b60008151116107115760405162461bcd60e51b81526004016100be90611388565b6000805160206114d78339815191526001600160a01b0383166107465760405162461bcd60e51b81526004016100be906113d3565b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361077c5761077c8285610a64565b60005b83518110156106e957600084828151811061079c5761079c6111dd565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036108475760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100be565b610852858284610b6e565b61085e8583868a610ace565b836108688161141f565b945050505080806108789061121f565b91505061077f565b60008151116108a15760405162461bcd60e51b81526004016100be90611388565b6000805160206114d78339815191526001600160a01b038316156109265760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100be565b60005b8251811015610998576000838281518110610946576109466111dd565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610983848284610b6e565b505080806109909061121f565b915050610929565b50505050565b6001600160a01b0382166109b0575050565b6109d2826040518060600160405280602881526020016114f760289139610f31565b600080836001600160a01b0316836040516109ed9190611445565b600060405180830381855af49150503d8060008114610a28576040519150601f19603f3d011682016040523d82523d6000602084013e610a2d565b606091505b50915091508161099857805115610a475780518082602001fd5b838360405163192105d760e01b81526004016100be929190611461565b610a868160405180606001604052806024815260200161151f60249139610f31565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610bea5760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100be565b306001600160a01b03831603610c595760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016100be565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610ca89161148d565b9050808214610d9a576001600160a01b03841660009081526001860160205260408120805483908110610cdd57610cdd6111dd565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610d2e57610d2e6111dd565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610dc357610dc36114a6565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081208190558190036106e9576002850154600090610e269060019061148d565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ed5576000876002018381548110610e6557610e656111dd565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e9657610e966111dd565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610ee857610ee86114a6565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816109985760405162461bcd60e51b81526004016100be91906114bc565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610f8b57610f8b610f52565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fba57610fba610f52565b604052919050565b600067ffffffffffffffff821115610fdc57610fdc610f52565b5060051b60200190565b80356001600160a01b0381168114610ffd57600080fd5b919050565b60006020828403121561101457600080fd5b6040516020810181811067ffffffffffffffff8211171561103757611037610f52565b60405290508061104683610fe6565b905292915050565b6000806040838503121561106157600080fd5b823567ffffffffffffffff8082111561107957600080fd5b818501915085601f83011261108d57600080fd5b813560206110a261109d83610fc2565b610f91565b82815260059290921b840181019181810190898411156110c157600080fd5b8286015b848110156111bf578035868111156110dc57600080fd5b87016060818d03601f190112156110f257600080fd5b6110fa610f68565b611105868301610fe6565b815260408201356003811061111957600080fd5b8187015260608201358881111561112f57600080fd5b8083019250508c603f83011261114457600080fd5b8582013561115461109d82610fc2565b81815260059190911b830160400190878101908f83111561117457600080fd5b6040850194505b828510156111aa5784356001600160e01b03198116811461119b57600080fd5b8252938801939088019061117b565b604084015250508452509183019183016110c5565b5096506111d0905088888301611002565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161123157611231611209565b5060010190565b60005b8381101561125357818101518382015260200161123b565b50506000910152565b60008151808452611274816020860160208601611238565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561135857898403607f19018652815180516001600160a01b031685528381015189860190600381106112f757634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156113435783516001600160e01b0319168252928601926001929092019190860190611319565b509785019795505050908201906001016112b1565b50506001600160a01b038a1690880152868103604088015261137a818961125c565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b0380831681810361143b5761143b611209565b6001019392505050565b60008251611457818460208701611238565b9190910192915050565b6001600160a01b03831681526040602082018190526000906114859083018461125c565b949350505050565b818103818111156114a0576114a0611209565b92915050565b634e487b7160e01b600052603160045260246000fd5b6020815260006114cf602083018461125c565b939250505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220ce0d753ddc7c3ce38643bb477ecfa01b9b42eb020928eb600b75ea42f6f2ffdf64736f6c63430008110033";

type RadomRegistryDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RadomRegistryDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RadomRegistryDiamond__factory extends ContractFactory {
  constructor(...args: RadomRegistryDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RadomRegistryDiamond> {
    return super.deploy(overrides || {}) as Promise<RadomRegistryDiamond>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RadomRegistryDiamond {
    return super.attach(address) as RadomRegistryDiamond;
  }
  override connect(signer: Signer): RadomRegistryDiamond__factory {
    return super.connect(signer) as RadomRegistryDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RadomRegistryDiamondInterface {
    return new utils.Interface(_abi) as RadomRegistryDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RadomRegistryDiamond {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RadomRegistryDiamond;
  }
}
