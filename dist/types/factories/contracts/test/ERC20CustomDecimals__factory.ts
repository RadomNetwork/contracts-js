/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20CustomDecimals,
  ERC20CustomDecimalsInterface,
} from "../../../contracts/test/ERC20CustomDecimals";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "numDecimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e1b38038062000e1b8339810160408190526200003491620002da565b84848484838381600390805190602001906200005292919062000167565b5080516200006890600490602084019062000167565b5050506200007d8183620000a160201b60201c565b50506005805460ff191660ff949094169390931790925550620003f0945050505050565b6001600160a01b038216620000fc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011091906200038c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200017590620003b3565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023557600080fd5b81516001600160401b03808211156200025257620002526200020d565b604051601f8301601f19908116603f011681019082821181831017156200027d576200027d6200020d565b816040528381526020925086838588010111156200029a57600080fd5b600091505b83821015620002be57858201830151818301840152908201906200029f565b83821115620002d05760008385830101525b9695505050505050565b600080600080600060a08688031215620002f357600080fd5b85516001600160401b03808211156200030b57600080fd5b6200031989838a0162000223565b965060208801519150808211156200033057600080fd5b506200033f8882890162000223565b60408801516060890151919650945090506001600160a01b03811681146200036657600080fd5b608087015190925060ff811681146200037e57600080fd5b809150509295509295909350565b60008219821115620003ae57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003c857607f821691505b60208210811415620003ea57634e487b7160e01b600052602260045260246000fd5b50919050565b610a1b80620004006000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101b3578063a457c2d7146101bb578063a9059cbb146101ce578063dd62ed3e146101e157600080fd5b806342966c681461016257806370a082311461017757806379cc6790146101a057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101f4565b6040516100e9919061083f565b60405180910390f35b6101056101003660046108b0565b610286565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046108da565b61029e565b60055460405160ff90911681526020016100e9565b61010561015d3660046108b0565b6102c2565b610175610170366004610916565b6102e4565b005b61011961018536600461092f565b6001600160a01b031660009081526020819052604090205490565b6101756101ae3660046108b0565b6102f1565b6100dc61030a565b6101056101c93660046108b0565b610319565b6101056101dc3660046108b0565b610399565b6101196101ef366004610951565b6103a7565b60606003805461020390610984565b80601f016020809104026020016040519081016040528092919081815260200182805461022f90610984565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856103d2565b5060019392505050565b6000336102ac8582856104f7565b6102b7858585610571565b506001949350505050565b6000336102948185856102d583836103a7565b6102df91906109bf565b6103d2565b6102ee3382610715565b50565b6102fc8233836104f7565b6103068282610715565b5050565b60606004805461020390610984565b6000338161032782866103a7565b90508381101561038c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102b782868684036103d2565b600033610294818585610571565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b6001600160a01b0382166104955760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610383565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061050384846103a7565b9050600019811461056b578181101561055e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610383565b61056b84848484036103d2565b50505050565b6001600160a01b0383166105d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610383565b6001600160a01b0382166106375760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610383565b6001600160a01b038316600090815260208190526040902054818110156106af5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610383565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361056b565b6001600160a01b0382166107755760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610383565b6001600160a01b038216600090815260208190526040902054818110156107e95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610383565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104ea565b600060208083528351808285015260005b8181101561086c57858101830151858201604001528201610850565b8181111561087e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108ab57600080fd5b919050565b600080604083850312156108c357600080fd5b6108cc83610894565b946020939093013593505050565b6000806000606084860312156108ef57600080fd5b6108f884610894565b925061090660208501610894565b9150604084013590509250925092565b60006020828403121561092857600080fd5b5035919050565b60006020828403121561094157600080fd5b61094a82610894565b9392505050565b6000806040838503121561096457600080fd5b61096d83610894565b915061097b60208401610894565b90509250929050565b600181811c9082168061099857607f821691505b602082108114156109b957634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156109e057634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122010d8d40a0edc90c636bc7dea28d32cf945b483cf72ca29ace4568413ac73fa1964736f6c63430008090033";

type ERC20CustomDecimalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20CustomDecimalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20CustomDecimals__factory extends ContractFactory {
  constructor(...args: ERC20CustomDecimalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    numDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20CustomDecimals> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      owner,
      numDecimals,
      overrides || {}
    ) as Promise<ERC20CustomDecimals>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    owner: PromiseOrValue<string>,
    numDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      owner,
      numDecimals,
      overrides || {}
    );
  }
  override attach(address: string): ERC20CustomDecimals {
    return super.attach(address) as ERC20CustomDecimals;
  }
  override connect(signer: Signer): ERC20CustomDecimals__factory {
    return super.connect(signer) as ERC20CustomDecimals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20CustomDecimalsInterface {
    return new utils.Interface(_abi) as ERC20CustomDecimalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20CustomDecimals {
    return new Contract(address, _abi, signerOrProvider) as ERC20CustomDecimals;
  }
}
