/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RadomContractDeployer,
  RadomContractDeployerInterface,
} from "../../contracts/RadomContractDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "calculateDestinationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "initdata",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610432806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319cdeff11461003b578063ab66395e1461006a575b600080fd5b61004e610049366004610319565b610105565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610386565b8051602091820120604080518084019490945233606090811b6bffffffffffffffffffffffff1990811686840152825160348188030181526054870184528051908601206001600160f81b031960748801523090921b166075860152608985015260a9808501929092528051808503909201825260c990930190925281519101206001600160a01b031690565b600080843360405160200161013692919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012090506000818551602087016000f590506001600160a01b0381166101b75760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064015b60405180910390fd5b83511561026d576000816001600160a01b0316856040516101d891906103cd565b6000604051808303816000865af19150503d8060008114610215576040519150601f19603f3d011682016040523d82523d6000602084013e61021a565b606091505b505090508061026b5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a204661696c6564206f6e20696e697469616c697a6500000060448201526064016101ae565b505b95945050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261029d57600080fd5b813567ffffffffffffffff808211156102b8576102b8610276565b604051601f8301601f19908116603f011681019082821181831017156102e0576102e0610276565b816040528381528660208588010111156102f957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561032e57600080fd5b83359250602084013567ffffffffffffffff8082111561034d57600080fd5b6103598783880161028c565b9350604086013591508082111561036f57600080fd5b5061037c8682870161028c565b9150509250925092565b6000806040838503121561039957600080fd5b82359150602083013567ffffffffffffffff8111156103b757600080fd5b6103c38582860161028c565b9150509250929050565b6000825160005b818110156103ee57602081860181015185830152016103d4565b50600092019182525091905056fea2646970667358221220586b2ac2b5df2f4eca52ce46ab6b727da971590ff495666008bbd6f63bc1c99f64736f6c63430008110033";

type RadomContractDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RadomContractDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RadomContractDeployer__factory extends ContractFactory {
  constructor(...args: RadomContractDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RadomContractDeployer> {
    return super.deploy(overrides || {}) as Promise<RadomContractDeployer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RadomContractDeployer {
    return super.attach(address) as RadomContractDeployer;
  }
  override connect(signer: Signer): RadomContractDeployer__factory {
    return super.connect(signer) as RadomContractDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RadomContractDeployerInterface {
    return new utils.Interface(_abi) as RadomContractDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RadomContractDeployer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RadomContractDeployer;
  }
}
