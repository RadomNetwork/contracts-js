/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AutomationFacet,
  AutomationFacetInterface,
} from "../../../contracts/facets/AutomationFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "AutoDepositTriggerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedMethod",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "AutoDepositConfigDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "AutoDepositConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumTimeUntilExpire",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumDuration",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxFeeInBasisPoints",
        type: "uint32",
      },
    ],
    name: "AutoDepositDefaultValuesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "triggeredBy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "AutoDepositTriggered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "autoDepositMinimumTimeUntilExpireInBps",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "minTimeUntilExpireInSeconds",
        type: "uint32",
      },
    ],
    name: "changeDefaultValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "deleteAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "getAutoDepositConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultValues",
    outputs: [
      {
        internalType: "uint32",
        name: "autoDepositMinimumTimeUntilExpireInBps",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "minTimeUntilExpireInSeconds",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscriptionTriggerResult",
    outputs: [
      {
        internalType: "bool",
        name: "isSuccessful",
        type: "bool",
      },
      {
        internalType: "string",
        name: "failedReason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "intervalsToAdd",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        internalType: "bool",
        name: "sendToWallet",
        type: "bool",
      },
    ],
    name: "triggerAutoDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "totalDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateSubscriptionAutoDepositConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160105534801561001557600080fd5b50611d5c806100256000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635d47fc7c1161005b5780635d47fc7c146101f057806360236b2714610203578063dfcb724614610216578063e313e1251461022957600080fd5b8063025715331461008d578063098b4187146100ba57806315e881fb146101b757806334ed1f06146101db575b600080fd5b6100a061009b366004611658565b610271565b604080519283526020830191909152015b60405180910390f35b6101686100c83660046116d1565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b03166000908152600d6020908152604091829020825160a081018452905460ff8082161515835261010082041615159282019290925261ffff62010000830481169382019390935263ffffffff600160201b8304166060820152600160401b909104909116608082015290565b604080518251151581526020808401511515908201528282015161ffff9081169282019290925260608084015163ffffffff16908201526080928301519091169181019190915260a0016100b1565b6101ca6101c536600461170b565b610703565b6040516100b1959493929190611776565b6101ee6101e93660046117cc565b61091a565b005b6101ee6101fe366004611800565b61093a565b6101ee610211366004611888565b610a82565b6101ee6102243660046116d1565b610b3e565b600c546040805161ffff600160401b84048116825263ffffffff600160201b850481166020840152600160501b850490911692820192909252911660608201526080016100b1565b6000806002601054036102975760405163553e2b4560e11b815260040160405180910390fd5b600260105560008490036102be57604051637e70cee760e11b815260040160405180910390fd5b6000805b858110156105a35760006003818989858181106102e1576102e16118e4565b90506020020160208101906102f6919061170b565b67ffffffffffffffff168152602081019190915260400160002080549091506001600160a01b038b8116600160381b9092041614158061034d575060028101546001600160a01b038a8116600160201b9092041614155b1561036b57604051630ebd8d1960e11b815260040160405180910390fd5b60008060008060006103a38d8d89818110610388576103886118e4565b905060200201602081019061039d919061170b565b87610ba2565b94509450945094509450846103fe578c8c888181106103c4576103c46118e4565b90506020020160208101906103d9919061170b565b8460405163904c53bd60e01b81526004016103f59291906118fa565b60405180910390fd5b610408838b611933565b9950610414818a611933565b98508186600101601c8282829054906101000a900463ffffffff166104399190611946565b82546101009290920a63ffffffff8181021990931691831602179091556001880154885460009850600160c01b820483169750600160a01b90910482169550610488945016915042905061196a565b6104929190611993565b61049c919061196a565b90508160030154816104ae91906119a7565b60018301546001600160a01b039081166000908152600b60209081526040808320938f16835292905290812080549091906104ea908490611933565b9091555050600182018054829190601890610513908490600160c01b900463ffffffff16611946565b92506101000a81548163ffffffff021916908363ffffffff1602179055508082600101601c8282829054906101000a900463ffffffff1661055491906119be565b92506101000a81548163ffffffff021916908363ffffffff16021790555081600301548161058291906119a7565b61058c9085611933565b93505050808061059b906119db565b9150506102c2565b506001600160a01b038089166000908152600a60209081526040808320938b168352929052205481906105d7908590611933565b6105e1919061196a565b6001600160a01b03808a166000908152600a60209081526040808320938c1683529290522055831561063c576106226001600160a01b038816893086610f12565b6106376001600160a01b038816893385610f12565b610696565b61065d883061064b8587611933565b6001600160a01b038b16929190610f12565b336000908152600f602090815260408083206001600160a01b038b16845290915281208054849290610690908490611933565b90915550505b866001600160a01b0316336001600160a01b0316896001600160a01b03167f9c47fafb4f19a7e100d2c81aa57615b71e8436561b9612e1d75497f750aab76a898988886040516106e994939291906119f4565b60405180910390a450600160105590969095509350505050565b67ffffffffffffffff8116600090815260036020526040812060609082908190819061072f8782610ba2565b9399509197509550935091508561074a576000955050610911565b60006107568386611933565b600283015483546040516370a0823160e01b81526001600160a01b03600160381b90920482166004820152929350600092600160201b90920416906370a0823190602401602060405180830381865afa1580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190611a4b565b90508181101561082857505060408051808201909152601b81527f496e73756666696369656e742057616c6c65742042616c616e6365000000000060208201526000965094506109119050565b60028301548354604051636eb1769f60e11b8152600160381b9091046001600160a01b039081166004830152306024830152600092600160201b9004169063dd62ed3e90604401602060405180830381865afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b09190611a4b565b9050828110156108f7575050604080518082019091526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020820152600097509550610911915050565b505060408051602081019091526000815260019750955050505b91939590929450565b81600160f81b61092a8282610f6c565b610934848461100b565b50505050565b83600160f81b61094a8282610f6c565b60005b84811015610a7957600060038188888581811061096c5761096c6118e4565b9050602002016020810190610981919061170b565b67ffffffffffffffff168152602081019190915260400160002080549091506001600160a01b03898116600160381b90920416146109d257604051630ebd8d1960e11b815260040160405180910390fd5b84600e60008989868181106109e9576109e96118e4565b90506020020160208101906109fe919061170b565b67ffffffffffffffff1681526020810191909152604001600020610a228282611a7e565b905050876001600160a01b03167f06fe0c6d458b7bb229e71a998662174aa56123a47918cac4d6a8d869a89c448b86604051610a5e9190611b57565b60405180910390a25080610a71816119db565b91505061094d565b50505050505050565b610a8a6110c5565b600c805469ffffffffffff000000001916600160401b61ffff87811691820267ffffffff00000000191692909217600160201b63ffffffff888116918202929092176bffff000000000000ffffffff1916600160501b94881694850263ffffffff19161791861691909117909355604080519182526020820193909352918201527fae3ffa31904232832e28578e14fec80b88cf399441d0a62ad616f2803b45157f9060600160405180910390a150505050565b80600160f81b610b4e8282610f6c565b6001600160a01b0383166000818152600d6020526040808220805469ffffffffffffffffffff19169055517fb0b758fabe9c9d5884a33cab2d674ad0e52348d42f8593edb27498f5ab6bb0b39190a2505050565b60006060600080600080610bcd8760000160079054906101000a90046001600160a01b03168961114e565b9050806020015115610c2157505060408051808201909152601881527f4175746f206465706f7369742069732064697361626c65640000000000000000602082015260009450925083915081905080610f08565b8654600160201b900460ff1680610c43575086546601000000000000900460ff165b15610c7a576000806000806040518060600160405280602b8152602001611cb3602b91399291909550955095509550955050610f08565b600187015460009063ffffffff600160a01b8204811691610cac91600160e01b8204811691600160c01b900416611946565b610cb7906001611946565b63ffffffff16610cc791906119a7565b8854610cd9919063ffffffff16611933565b9050804210610d2357505060408051808201909152601481527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b6020820152600095509350849250829150819050610f08565b6001880154606083015160009163ffffffff600160a01b909104811691161015610d635750600188810154909450600160a01b900463ffffffff16610d88565b5060608201516001890154610d8590600160a01b900463ffffffff1682611bd3565b94505b6003890154610d9d9063ffffffff87166119a7565b95506000610dab428461196a565b905060006127108363ffffffff16866040015161ffff16610dcc91906119a7565b610dd69190611993565b600c5490915063ffffffff16811015610df45750600c5463ffffffff165b80821115610e3257600080600080604051806080016040528060498152602001611cde60499139929190995099509950995099505050505050610f08565b600081866080015161ffff168484610e4a919061196a565b610e5491906119a7565b610e5e9190611993565b9050600080610e6d8b84611334565b9150915081610edb57600080610e8e610e886127108f611993565b86611334565b9150915081610ed257600080600080604051806060016040528060368152602001611c7d603691399291909e509e509e509e509e5050505050505050505050610f08565b9950610eea9050565b610ee761271082611993565b98505b505060408051602081019091526000815260019b5099505050505050505b9295509295909350565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261093490859061137f565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190611bf6565b6110075760405163061cbdd360e51b815260040160405180910390fd5b5050565b61101b6040820160208301611c13565b15801561103b57506110336080820160608301611c30565b63ffffffff16155b15611059576040516303f741b360e01b815260040160405180910390fd5b6001600160a01b0382166000908152600d60205260409020819061107d8282611a7e565b905050816001600160a01b03167f06fe0c6d458b7bb229e71a998662174aa56123a47918cac4d6a8d869a89c448b826040516110b99190611b57565b60405180910390a25050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461114c5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016103f5565b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526001600160a01b0383166000908152600d6020908152604080832067ffffffffffffffff86168452600e8352818420825160a081018452858152938401859052918301849052606083018490526080830193909352908254610100900460ff16806111ea57508154610100900460ff165b151560208201528254600160201b900463ffffffff161561121e578254600160201b900463ffffffff166060820152611261565b8154600160201b900463ffffffff161561124b578154600160201b900463ffffffff166060820152611261565b600c54600160201b900463ffffffff1660608201525b825462010000900461ffff161561128857825462010000900461ffff1660408201526112c3565b815462010000900461ffff16156112af57815462010000900461ffff1660408201526112c3565b600c54600160401b900461ffff1660408201525b8254600160401b900461ffff16156112ec578254600160401b900461ffff166080820152611329565b8154600160401b900461ffff1615611315578154600160401b900461ffff166080820152611329565b600c54600160501b900461ffff1660808201525b925050505b92915050565b6000808360000361134b5750600190506000611378565b8383028385828161135e5761135e61197d565b0414611371576000809250925050611378565b6001925090505b9250929050565b60006113d4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114569092919063ffffffff16565b80519091501561145157808060200190518101906113f29190611bf6565b6114515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103f5565b505050565b6060611465848460008561146d565b949350505050565b6060824710156114ce5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103f5565b600080866001600160a01b031685876040516114ea9190611c4d565b60006040518083038185875af1925050503d8060008114611527576040519150601f19603f3d011682016040523d82523d6000602084013e61152c565b606091505b509150915061153d87838387611548565b979650505050505050565b606083156115b75782516000036115b0576001600160a01b0385163b6115b05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f5565b5081611465565b61146583838151156115cc5781518083602001fd5b8060405162461bcd60e51b81526004016103f59190611c69565b80356001600160a01b03811681146115fd57600080fd5b919050565b60008083601f84011261161457600080fd5b50813567ffffffffffffffff81111561162c57600080fd5b6020830191508360208260051b850101111561137857600080fd5b801515811461165557600080fd5b50565b60008060008060006080868803121561167057600080fd5b611679866115e6565b9450611687602087016115e6565b9350604086013567ffffffffffffffff8111156116a357600080fd5b6116af88828901611602565b90945092505060608601356116c381611647565b809150509295509295909350565b6000602082840312156116e357600080fd5b6116ec826115e6565b9392505050565b803567ffffffffffffffff811681146115fd57600080fd5b60006020828403121561171d57600080fd5b6116ec826116f3565b60005b83811015611741578181015183820152602001611729565b50506000910152565b60008151808452611762816020860160208601611726565b601f01601f19169290920160200192915050565b851515815260a06020820152600061179160a083018761174a565b60408301959095525063ffffffff92909216606083015260809091015292915050565b600060a082840312156117c657600080fd5b50919050565b60008060c083850312156117df57600080fd5b6117e8836115e6565b91506117f784602085016117b4565b90509250929050565b60008060008060e0858703121561181657600080fd5b61181f856115e6565b9350602085013567ffffffffffffffff81111561183b57600080fd5b61184787828801611602565b909450925061185b905086604087016117b4565b905092959194509250565b61ffff8116811461165557600080fd5b63ffffffff8116811461165557600080fd5b6000806000806080858703121561189e57600080fd5b84356118a981611866565b935060208501356118b981611876565b925060408501356118c981611866565b915060608501356118d981611876565b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff83168152604060208201526000611465604083018461174a565b634e487b7160e01b600052601160045260246000fd5b8082018082111561132e5761132e61191d565b63ffffffff8181168382160190808211156119635761196361191d565b5092915050565b8181038181111561132e5761132e61191d565b634e487b7160e01b600052601260045260246000fd5b6000826119a2576119a261197d565b500490565b808202811582820484141761132e5761132e61191d565b63ffffffff8281168282160390808211156119635761196361191d565b6000600182016119ed576119ed61191d565b5060010190565b6060808252810184905260008560808301825b87811015611a365767ffffffffffffffff611a21846116f3565b16825260209283019290910190600101611a07565b50602084019590955250506040015292915050565b600060208284031215611a5d57600080fd5b5051919050565b6000813561132e81611866565b6000813561132e81611876565b8135611a8981611647565b815460ff19811691151560ff1691821783556020840135611aa981611647565b61ff0090151560081b1661ffff1982168317811784556040850135611acd81611866565b63ffff00008160101b1663ffff000019851663ffffffff19851617831717855550505050611b22611b0060608401611a71565b825467ffffffff00000000191660209190911b67ffffffff0000000016178255565b611007611b3160808401611a64565b825469ffff0000000000000000191660409190911b69ffff000000000000000016178255565b60a081018235611b6681611647565b151582526020830135611b7881611647565b151560208301526040830135611b8d81611866565b61ffff9081166040840152606084013590611ba782611876565b63ffffffff8216606085015260808501359150611bc382611866565b8082166080850152505092915050565b600063ffffffff80841680611bea57611bea61197d565b92169190910492915050565b600060208284031215611c0857600080fd5b81516116ec81611647565b600060208284031215611c2557600080fd5b81356116ec81611647565b600060208284031215611c4257600080fd5b81356116ec81611876565b60008251611c5f818460208701611726565b9190910192915050565b6020815260006116ec602083018461174a56fe4665652063616c63756c6174696f6e206f766572666c6f772e20546865206465706f736974416d6f756e7420697320746f6f20626967537562736372697074696f6e2069732073657420746f2063616e63656c6c6564206f72206578706972656454696d6520756e74696c20537562736372697074696f6e2045787069726174696f6e2069732067726561746572207468616e206d696e696d756d54696d65556e74696c457870697265a26469706673582212200ab69a08a143ac91c49b1b0212cc076be1ddb84179d5abf736c1b117145191a064736f6c63430008110033";

type AutomationFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutomationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutomationFacet__factory extends ContractFactory {
  constructor(...args: AutomationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutomationFacet> {
    return super.deploy(overrides || {}) as Promise<AutomationFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AutomationFacet {
    return super.attach(address) as AutomationFacet;
  }
  override connect(signer: Signer): AutomationFacet__factory {
    return super.connect(signer) as AutomationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutomationFacetInterface {
    return new utils.Interface(_abi) as AutomationFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutomationFacet {
    return new Contract(address, _abi, signerOrProvider) as AutomationFacet;
  }
}
