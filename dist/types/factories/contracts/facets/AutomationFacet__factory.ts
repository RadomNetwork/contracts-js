/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AutomationFacet,
  AutomationFacetInterface,
} from "../../../contracts/facets/AutomationFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "AutoDepositTriggerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "AutoDepositConfigDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "AutoDepositConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumTimeUntilExpire",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumDuration",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxFeeInBasisPoints",
        type: "uint32",
      },
    ],
    name: "AutoDepositDefaultValuesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "triggeredBy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "AutoDepositTriggered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "autoDepositMinimumTimeUntilExpire",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint16",
      },
    ],
    name: "changeDefaultValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "deleteAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "getAutoDepositConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultValues",
    outputs: [
      {
        internalType: "uint32",
        name: "autoDepositMinimumTimeUntilExpire",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscriptionTriggerResult",
    outputs: [
      {
        internalType: "bool",
        name: "isSuccessful",
        type: "bool",
      },
      {
        internalType: "string",
        name: "failedReason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "intervalsToAdd",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        internalType: "bool",
        name: "sendToWallet",
        type: "bool",
      },
    ],
    name: "triggerAutoDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "totalDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositUpdate",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "updateAutoDepositConfigAndDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "updateAutoDepositConfigAndDepositAndOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFeeInBasisPoints",
            type: "uint32",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateAutoDepositConfigAndOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160105534801561001557600080fd5b5061207c806100256000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80633e855033116100665780633e855033146101ec5780634d79b250146101ff578063a97845d714610212578063dfcb724614610225578063e313e1251461023857600080fd5b806302571533146100a3578063098b4187146100d057806315e881fb146101a057806322109cdc146101c457806328f85223146101d9575b600080fd5b6100b66100b1366004611654565b61026b565b604080519283526020830191909152015b60405180910390f35b61015f6100de3660046116cd565b60408051608080820183526000808352602080840182905283850182905260609384018290526001600160a01b03959095168152600d8552839020835191820184525460ff8082161515835261010082041615159482019490945263ffffffff620100008504811693820193909352600160301b9093049091169082015290565b604080518251151581526020808401511515908201528282015163ffffffff90811692820192909252606092830151909116918101919091526080016100c7565b6101b36101ae366004611707565b610923565b6040516100c7959493929190611772565b6101d76101d23660046117da565b610b39565b005b6101d76101e7366004611874565b610cf8565b6101d76101fa3660046118a8565b610d18565b6101d761020d36600461194b565b610e12565b6101d761022036600461199d565b610e9f565b6101d76102333660046116cd565b610f6c565b600c54600e546040805163ffffffff8085168252600160201b9094048416602082015292909116908201526060016100c7565b6000806002601054036102915760405163553e2b4560e11b815260040160405180910390fd5b600260105560008490036102b857604051637e70cee760e11b815260040160405180910390fd5b6000805b858110156105765760006003818989858181106102db576102db6119e9565b90506020020160208101906102f09190611707565b67ffffffffffffffff168152602081019190915260400160002080549091506001600160a01b038b8116600160381b90920416141580610347575060028101546001600160a01b038a8116600160201b9092041614155b1561036557604051630ebd8d1960e11b815260040160405180910390fd5b600080600080600061037686610fd0565b94509450945094509450846103d1578c8c88818110610397576103976119e9565b90506020020160208101906103ac9190611707565b8460405163904c53bd60e01b81526004016103c89291906119ff565b60405180910390fd5b6103db838b611a40565b99506103e7818a611a40565b98508186600101601c8282829054906101000a900463ffffffff1661040c9190611a59565b82546101009290920a63ffffffff8181021990931691831602179091556001880154885460009850600160c01b820483169750600160a01b9091048216955061045b9450169150429050611a7d565b6104659190611aa6565b61046f9190611a7d565b90508160040154816104819190611aba565b60018301546001600160a01b039081166000908152600b60209081526040808320938f16835292905290812080549091906104bd908490611a40565b90915550506001820180548291906018906104e6908490600160c01b900463ffffffff16611a59565b92506101000a81548163ffffffff021916908363ffffffff1602179055508082600101601c8282829054906101000a900463ffffffff166105279190611ad1565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160040154816105559190611aba565b61055f9085611a40565b93505050808061056e90611aee565b9150506102bc565b5060006105838385611a40565b6040516370a0823160e01b81526001600160a01b038b8116600483015291925082918a16906370a0823190602401602060405180830381865afa1580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f29190611b07565b101561061157604051633ed9d6e560e11b815260040160405180910390fd5b604051636eb1769f60e11b81526001600160a01b038a81166004830152306024830152600091908a169063dd62ed3e90604401602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611b07565b9050818110156106a8576040516313be252b60e01b815260040160405180910390fd5b50506001600160a01b038089166000908152600a60209081526040808320938b168352929052205481906106dd908590611a40565b6106e79190611a7d565b6001600160a01b03808a166000908152600a60209081526040808320938c16835292905220558315610800576040516323b872dd60e01b81526001600160a01b038816906323b872dd90610743908b9030908890600401611b20565b6020604051808303816000875af1158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611b44565b506040516323b872dd60e01b81526001600160a01b038816906323b872dd906107b7908b9033908790600401611b20565b6020604051808303816000875af11580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190611b44565b506108b6565b6001600160a01b0387166323b872dd893061081b8688611a40565b6040518463ffffffff1660e01b815260040161083993929190611b20565b6020604051808303816000875af1158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c9190611b44565b50336000908152600f602090815260408083206001600160a01b038b168452909152812080548492906108b0908490611a40565b90915550505b866001600160a01b0316336001600160a01b0316896001600160a01b03167f9c47fafb4f19a7e100d2c81aa57615b71e8436561b9612e1d75497f750aab76a898988886040516109099493929190611b61565b60405180910390a450600160105590969095509350505050565b67ffffffffffffffff8116600090815260036020526040812060609082908190819061094e81610fd0565b93995091975095509350915085610969576000955050610b30565b60006109758386611a40565b600283015483546040516370a0823160e01b81526001600160a01b03600160381b90920482166004820152929350600092600160201b90920416906370a0823190602401602060405180830381865afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190611b07565b905081811015610a4757505060408051808201909152601b81527f496e73756666696369656e742057616c6c65742042616c616e636500000000006020820152600096509450610b309050565b60028301548354604051636eb1769f60e11b8152600160381b9091046001600160a01b039081166004830152306024830152600092600160201b9004169063dd62ed3e90604401602060405180830381865afa158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190611b07565b905082811015610b16575050604080518082019091526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020820152600097509550610b30915050565b505060408051602081019091526000815260019750955050505b91939590929450565b610b4660208701876116cd565b600160f81b610b558282611351565b610b6b610b6560208a018a6116cd565b856113f0565b60008030638340f54960e01b610b8460208d018d6116cd565b610b9460608e0160408f016116cd565b88604051602401610ba793929190611b20565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610be59190611bb8565b600060405180830381855af49150503d8060008114610c20576040519150601f19603f3d011682016040523d82523d6000602084013e610c25565b606091505b509150915081610c3857610c38816114aa565b604051309063cda1d4eb60e01b90610c5a908d908d908d908d90602401611d56565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610c989190611bb8565b600060405180830381855af49150503d8060008114610cd3576040519150601f19603f3d011682016040523d82523d6000602084013e610cd8565b606091505b50909250905081610cec57610cec816114aa565b50505050505050505050565b81600160f81b610d088282611351565b610d1284846113f0565b50505050565b610d2560208601866116cd565b600160f81b610d348282611351565b610d4a610d4460208901896116cd565b846113f0565b600080306001600160a01b031663cda1d4eb60e01b8a8a8a8a604051602401610d769493929190611d56565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610db49190611bb8565b600060405180830381855af49150503d8060008114610def576040519150601f19603f3d011682016040523d82523d6000602084013e610df4565b606091505b509150915081610e0757610e07816114aa565b505050505050505050565b610e1a61150e565b600c805463ffffffff85811667ffffffffffffffff199092168217600160201b91861691820217909255600e805461ffff851663ffffffff1990911681179091556040805192835260208301939093528183015290517fae3ffa31904232832e28578e14fec80b88cf399441d0a62ad616f2803b45157f9181900360600190a1505050565b610ea983856113f0565b600080306001600160a01b0316638340f54960e01b868686604051602401610ed393929190611b20565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610f119190611bb8565b600060405180830381855af49150503d8060008114610f4c576040519150601f19603f3d011682016040523d82523d6000602084013e610f51565b606091505b509150915081610f6457610f64816114aa565b505050505050565b80600160f81b610f7c8282611351565b6001600160a01b0383166000818152600d6020526040808220805469ffffffffffffffffffff19169055517fb0b758fabe9c9d5884a33cab2d674ad0e52348d42f8593edb27498f5ab6bb0b39190a2505050565b8054600160381b90046001600160a01b03166000908152600d602052604081208054606091839182918291610100900460ff161561105057505060408051808201909152601881527f4175746f206465706f7369742069732064697361626c65640000000000000000602082015260009450925083915081905080610b30565b805460009062010000900463ffffffff16810361107d5750600c54600160201b900463ffffffff1661108d565b50805462010000900463ffffffff165b600188015463ffffffff808316600160a01b90920416106110b157600193506110d0565b60018801546110cd90600160a01b900463ffffffff1682611e30565b93505b60048801546110e59063ffffffff8616611aba565b94506110ee9050565b8654600160201b900460ff168061110d57508654600160301b900460ff165b15611144576000806000806040518060600160405280602b8152602001611fd3602b91399291909550955095509550955050610b30565b600187015460009063ffffffff600160a01b820481169161117691600160e01b8204811691600160c01b900416611a59565b611181906001611a59565b63ffffffff166111919190611aba565b88546111a3919063ffffffff16611a40565b9050804211156111ee57505060408051808201909152601481527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b6020820152600095509350849250829150819050610b30565b60006111fa4283611a7d565b600c5490915063ffffffff168082111561124357600080600080604051806080016040528060498152602001611ffe604991399291909850985098509850985050505050610b30565b83546000908190600160301b900463ffffffff16810361126c5750600e5463ffffffff1661127d565b508454600160301b900463ffffffff165b63ffffffff8084169082166112928683611a7d565b61129c9190611aba565b6112a69190611aa6565b9150506000806112b68a84611597565b915091508161131e576000806112d76112d16127108e611aa6565b86611597565b915091508161131a57600080600080604051806060016040528060368152602001611f9d603691399291909d509d509d509d509d50505050505050505050610b30565b9850505b61132a61271082611aa6565b60408051602081019091526000815260019d509b5097505050505050505091939590929450565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa1580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf9190611b44565b6113ec5760405163061cbdd360e51b815260040160405180910390fd5b5050565b6114006040820160208301611e53565b15801561142057506114186060820160408301611e70565b63ffffffff16155b1561143e576040516303f741b360e01b815260040160405180910390fd5b6001600160a01b0382166000908152600d6020526040902081906114628282611e8d565b905050816001600160a01b03167f5da3957bdd695416dadbf726eb906c92fd2f712bed016b64388cc6fa12b8d1598260405161149e9190611f3a565b60405180910390a25050565b80516000036115065760405162461bcd60e51b815260206004820152602260248201527f5472616e73616374696f6e206661696c65642077697468206e6f20726561736f604482015261371760f11b60648201526084016103c8565b805181602001fd5b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146115955760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016103c8565b565b600080836000036115ae57506001905060006115db565b838302838582816115c1576115c1611a90565b04146115d45760008092509250506115db565b6001925090505b9250929050565b80356001600160a01b03811681146115f957600080fd5b919050565b60008083601f84011261161057600080fd5b50813567ffffffffffffffff81111561162857600080fd5b6020830191508360208260051b85010111156115db57600080fd5b801515811461165157600080fd5b50565b60008060008060006080868803121561166c57600080fd5b611675866115e2565b9450611683602087016115e2565b9350604086013567ffffffffffffffff81111561169f57600080fd5b6116ab888289016115fe565b90945092505060608601356116bf81611643565b809150509295509295909350565b6000602082840312156116df57600080fd5b6116e8826115e2565b9392505050565b803567ffffffffffffffff811681146115f957600080fd5b60006020828403121561171957600080fd5b6116e8826116ef565b60005b8381101561173d578181015183820152602001611725565b50506000910152565b6000815180845261175e816020860160208601611722565b601f01601f19169290920160200192915050565b851515815260a06020820152600061178d60a0830187611746565b60408301959095525063ffffffff92909216606083015260809091015292915050565b600060a082840312156117c257600080fd5b50919050565b6000608082840312156117c257600080fd5b60008060008060008061010087890312156117f457600080fd5b863567ffffffffffffffff8082111561180c57600080fd5b6118188a838b016117b0565b97506020890135915061182a82611643565b9095506040880135908082111561184057600080fd5b5061184d89828a016115fe565b9095509350611861905088606089016117c8565b915060e087013590509295509295509295565b60008060a0838503121561188757600080fd5b611890836115e2565b915061189f84602085016117c8565b90509250929050565b600080600080600060e086880312156118c057600080fd5b853567ffffffffffffffff808211156118d857600080fd5b6118e489838a016117b0565b9650602088013591506118f682611643565b9094506040870135908082111561190c57600080fd5b50611919888289016115fe565b909450925061192d905087606088016117c8565b90509295509295909350565b63ffffffff8116811461165157600080fd5b60008060006060848603121561196057600080fd5b833561196b81611939565b9250602084013561197b81611939565b9150604084013561ffff8116811461199257600080fd5b809150509250925092565b60008060008060e085870312156119b357600080fd5b6119bd86866117c8565b93506119cb608086016115e2565b92506119d960a086016115e2565b9396929550929360c00135925050565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff83168152604060208201526000611a226040830184611746565b949350505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611a5357611a53611a2a565b92915050565b63ffffffff818116838216019080821115611a7657611a76611a2a565b5092915050565b81810381811115611a5357611a53611a2a565b634e487b7160e01b600052601260045260246000fd5b600082611ab557611ab5611a90565b500490565b8082028115828204841417611a5357611a53611a2a565b63ffffffff828116828216039080821115611a7657611a76611a2a565b600060018201611b0057611b00611a2a565b5060010190565b600060208284031215611b1957600080fd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611b5657600080fd5b81516116e881611643565b6060808252810184905260008560808301825b87811015611ba35767ffffffffffffffff611b8e846116ef565b16825260209283019290910190600101611b74565b50602084019590955250506040015292915050565b60008251611bca818460208701611722565b9190910192915050565b6000808335601e19843603018112611beb57600080fd5b830160208101925035905067ffffffffffffffff811115611c0b57600080fd5b8036038213156115db57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112611c5957600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b87811015611cdd578284038952611c938288611c43565b60408135611ca081611939565b63ffffffff168652611cb482880183611bd4565b92508188880152611cc88288018483611c1a565b9b88019b965050509185019150600101611c7c565b5091979650505050505050565b81835260006020808501808196508560051b810191508460005b87811015611cdd578284038952611d1b8288611c43565b604081358652611d2d87830183611bd4565b92508188880152611d418288018483611c1a565b9b88019b965050509185019150600101611d04565b6060815260006001600160a01b0380611d6e886115e2565b16606084015280611d81602089016115e2565b16608084015280611d94604089016115e2565b1660a084015250606086013560c08301526080860135601e19873603018112611dbc57600080fd5b860160208101903567ffffffffffffffff811115611dd957600080fd5b8060051b3603821315611deb57600080fd5b60a060e0850152611e0161010085018284611c62565b915050611e12602084018715159052565b8281036040840152611e25818587611cea565b979650505050505050565b600063ffffffff80841680611e4757611e47611a90565b92169190910492915050565b600060208284031215611e6557600080fd5b81356116e881611643565b600060208284031215611e8257600080fd5b81356116e881611939565b8135611e9881611643565b815460ff19811691151560ff1691821783556020840135611eb881611643565b61ff0090151560081b1661ffff1982168317811784556040850135611edc81611939565b65ffffffff00008160101b169050808465ffffffffffff1985161783171785556060860135611f0a81611939565b69ffffffffffffffffffff1993909316909317179190911760309190911b69ffffffff0000000000001617905550565b608081018235611f4981611643565b151582526020830135611f5b81611643565b151560208301526040830135611f7081611939565b63ffffffff9081166040840152606084013590611f8c82611939565b808216606085015250509291505056fe4665652063616c63756c6174696f6e206f766572666c6f772e20546865206465706f736974416d6f756e7420697320746f6f20626967537562736372697074696f6e2069732073657420746f2063616e63656c6c6564206f72206578706972656454696d6520756e74696c20537562736372697074696f6e2045787069726174696f6e2069732067726561746572207468616e206d696e696d756d54696d65556e74696c457870697265a2646970667358221220c19598393f962d539541019e71feec709fa5dfbc54358dcc1bfde9262f32780764736f6c63430008110033";

type AutomationFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutomationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutomationFacet__factory extends ContractFactory {
  constructor(...args: AutomationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutomationFacet> {
    return super.deploy(overrides || {}) as Promise<AutomationFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AutomationFacet {
    return super.attach(address) as AutomationFacet;
  }
  override connect(signer: Signer): AutomationFacet__factory {
    return super.connect(signer) as AutomationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutomationFacetInterface {
    return new utils.Interface(_abi) as AutomationFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutomationFacet {
    return new Contract(address, _abi, signerOrProvider) as AutomationFacet;
  }
}
