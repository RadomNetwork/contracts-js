/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AutomationFacet,
  AutomationFacetInterface,
} from "../../../contracts/facets/AutomationFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "AutoDepositTriggerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "AutoDepositConfigDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "AutoDepositConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumTimeUntilExpire",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "minimumDuration",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxFeeInBasisPoints",
        type: "uint32",
      },
    ],
    name: "AutoDepositDefaultValuesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "triggeredBy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "AutoDepositTriggered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "autoDepositMinimumTimeUntilExpireInBps",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint16",
      },
      {
        internalType: "uint32",
        name: "minTimeUntilExpireInSeconds",
        type: "uint32",
      },
    ],
    name: "changeDefaultValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "deleteAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "getAutoDepositConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultValues",
    outputs: [
      {
        internalType: "uint32",
        name: "autoDepositMinimumTimeUntilExpireInBps",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMinimumDuration",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "autoDepositMaxFeeInBasisPoints",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "minTimeUntilExpireInSeconds",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscriptionTriggerResult",
    outputs: [
      {
        internalType: "bool",
        name: "isSuccessful",
        type: "bool",
      },
      {
        internalType: "string",
        name: "failedReason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "intervalsToAdd",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        internalType: "bool",
        name: "sendToWallet",
        type: "bool",
      },
    ],
    name: "triggerAutoDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "totalDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateAutoDepositConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig",
        name: "depositConfig",
        type: "tuple",
      },
    ],
    name: "updateSubscriptionAutoDepositConfigs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160105534801561001557600080fd5b50611cd8806100256000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635d47fc7c1161005b5780635d47fc7c146101f057806360236b2714610203578063dfcb724614610216578063e313e1251461022957600080fd5b8063025715331461008d578063098b4187146100ba57806315e881fb146101b757806334ed1f06146101db575b600080fd5b6100a061009b36600461160c565b610271565b604080519283526020830191909152015b60405180910390f35b6101686100c8366004611685565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b03166000908152600d6020908152604091829020825160a081018452905460ff8082161515835261010082041615159282019290925261ffff62010000830481169382019390935263ffffffff600160201b8304166060820152600160401b909104909116608082015290565b604080518251151581526020808401511515908201528282015161ffff9081169282019290925260608084015163ffffffff16908201526080928301519091169181019190915260a0016100b1565b6101ca6101c53660046116bf565b610973565b6040516100b1959493929190611720565b6101ee6101e9366004611776565b610b8a565b005b6101ee6101fe3660046117aa565b610baa565b6101ee610211366004611832565b610cf2565b6101ee610224366004611685565b610dae565b600c546040805161ffff600160401b84048116825263ffffffff600160201b850481166020840152600160501b850490911692820192909252911660608201526080016100b1565b6000806002601054036102975760405163553e2b4560e11b815260040160405180910390fd5b600260105560008490036102be57604051637e70cee760e11b815260040160405180910390fd5b6000805b858110156105a35760006003818989858181106102e1576102e161188e565b90506020020160208101906102f691906116bf565b67ffffffffffffffff168152602081019190915260400160002080549091506001600160a01b038b8116600160381b9092041614158061034d575060028101546001600160a01b038a8116600160201b9092041614155b1561036b57604051630ebd8d1960e11b815260040160405180910390fd5b60008060008060006103a38d8d898181106103885761038861188e565b905060200201602081019061039d91906116bf565b87610e12565b94509450945094509450846103fe578c8c888181106103c4576103c461188e565b90506020020160208101906103d991906116bf565b8460405163904c53bd60e01b81526004016103f59291906118a4565b60405180910390fd5b610408838b6118e5565b9950610414818a6118e5565b98508186600101601c8282829054906101000a900463ffffffff1661043991906118f8565b82546101009290920a63ffffffff8181021990931691831602179091556001880154885460009850600160c01b820483169750600160a01b90910482169550610488945016915042905061191c565b6104929190611945565b61049c919061191c565b90508160030154816104ae9190611959565b60018301546001600160a01b039081166000908152600b60209081526040808320938f16835292905290812080549091906104ea9084906118e5565b9091555050600182018054829190601890610513908490600160c01b900463ffffffff166118f8565b92506101000a81548163ffffffff021916908363ffffffff1602179055508082600101601c8282829054906101000a900463ffffffff166105549190611970565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160030154816105829190611959565b61058c90856118e5565b93505050808061059b9061198d565b9150506102c2565b5060006105b083856118e5565b6040516370a0823160e01b81526001600160a01b038b8116600483015291925082918a16906370a0823190602401602060405180830381865afa1580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f91906119a6565b101561063e57604051633ed9d6e560e11b815260040160405180910390fd5b604051636eb1769f60e11b81526001600160a01b038a81166004830152306024830152600091908a169063dd62ed3e90604401602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b291906119a6565b9050818110156106d5576040516313be252b60e01b815260040160405180910390fd5b50506001600160a01b038089166000908152600a60209081526040808320938b1683529290522054819061070a9085906118e5565b610714919061191c565b6001600160a01b03808a166000908152600a60209081526040808320938c16835292905220558315610839576040516323b872dd60e01b81526001600160a01b038981166004830152306024830152604482018590528816906323b872dd906064016020604051808303816000875af1158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b991906119bf565b506040516323b872dd60e01b81526001600160a01b038981166004830152336024830152604482018490528816906323b872dd906064016020604051808303816000875af115801561080f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083391906119bf565b50610906565b6001600160a01b0387166323b872dd893061085486886118e5565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc91906119bf565b50336000908152600f602090815260408083206001600160a01b038b168452909152812080548492906109009084906118e5565b90915550505b866001600160a01b0316336001600160a01b0316896001600160a01b03167f9c47fafb4f19a7e100d2c81aa57615b71e8436561b9612e1d75497f750aab76a8989888860405161095994939291906119dc565b60405180910390a450600160105590969095509350505050565b67ffffffffffffffff8116600090815260036020526040812060609082908190819061099f8782610e12565b939950919750955093509150856109ba576000955050610b81565b60006109c683866118e5565b600283015483546040516370a0823160e01b81526001600160a01b03600160381b90920482166004820152929350600092600160201b90920416906370a0823190602401602060405180830381865afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b91906119a6565b905081811015610a9857505060408051808201909152601b81527f496e73756666696369656e742057616c6c65742042616c616e636500000000006020820152600096509450610b819050565b60028301548354604051636eb1769f60e11b8152600160381b9091046001600160a01b039081166004830152306024830152600092600160201b9004169063dd62ed3e90604401602060405180830381865afa158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2091906119a6565b905082811015610b67575050604080518082019091526016815275496e73756666696369656e7420416c6c6f77616e636560501b6020820152600097509550610b81915050565b505060408051602081019091526000815260019750955050505b91939590929450565b81600160f81b610b9a8282611187565b610ba48484611226565b50505050565b83600160f81b610bba8282611187565b60005b84811015610ce9576000600381888885818110610bdc57610bdc61188e565b9050602002016020810190610bf191906116bf565b67ffffffffffffffff168152602081019190915260400160002080549091506001600160a01b03898116600160381b9092041614610c4257604051630ebd8d1960e11b815260040160405180910390fd5b84600e6000898986818110610c5957610c5961188e565b9050602002016020810190610c6e91906116bf565b67ffffffffffffffff1681526020810191909152604001600020610c928282611a4d565b905050876001600160a01b03167f06fe0c6d458b7bb229e71a998662174aa56123a47918cac4d6a8d869a89c448b86604051610cce9190611b1f565b60405180910390a25080610ce18161198d565b915050610bbd565b50505050505050565b610cfa6112e0565b600c805469ffffffffffff000000001916600160401b61ffff87811691820267ffffffff00000000191692909217600160201b63ffffffff888116918202929092176bffff000000000000ffffffff1916600160501b94881694850263ffffffff19161791861691909117909355604080519182526020820193909352918201527fae3ffa31904232832e28578e14fec80b88cf399441d0a62ad616f2803b45157f9060600160405180910390a150505050565b80600160f81b610dbe8282611187565b6001600160a01b0383166000818152600d6020526040808220805469ffffffffffffffffffff19169055517fb0b758fabe9c9d5884a33cab2d674ad0e52348d42f8593edb27498f5ab6bb0b39190a2505050565b60006060600080600080610e3d8760000160079054906101000a90046001600160a01b031689611369565b9050806020015115610e9157505060408051808201909152601881527f4175746f206465706f7369742069732064697361626c6564000000000000000060208201526000945092508391508190508061117d565b8654600160201b900460ff1680610eb3575086546601000000000000900460ff165b15610eea576000806000806040518060600160405280602b8152602001611c2f602b9139929190955095509550955095505061117d565b600187015460009063ffffffff600160a01b8204811691610f1c91600160e01b8204811691600160c01b9004166118f8565b610f279060016118f8565b63ffffffff16610f379190611959565b8854610f49919063ffffffff166118e5565b905080421115610f9457505060408051808201909152601481527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b602082015260009550935084925082915081905061117d565b6001880154606083015160009163ffffffff600160a01b909104811691161015610fd45750600188810154909450600160a01b900463ffffffff16610ff9565b5060608201516001890154610ff690600160a01b900463ffffffff1682611b9b565b94505b600389015461100e9063ffffffff8716611959565b9550600061101c428461191c565b90506000612710856060015163ffffffff16866040015161ffff166110419190611959565b61104b9190611945565b600c5490915063ffffffff168110156110695750600c5463ffffffff165b808211156110a757600080600080604051806080016040528060498152602001611c5a6049913992919099509950995099509950505050505061117d565b600081866080015161ffff1684846110bf919061191c565b6110c99190611959565b6110d39190611945565b90506000806110e28b8461154f565b9150915081611150576000806111036110fd6127108f611945565b8661154f565b915091508161114757600080600080604051806060016040528060368152602001611bf9603691399291909e509e509e509e509e505050505050505050505061117d565b995061115f9050565b61115c61271082611945565b98505b505060408051602081019091526000815260019b5099505050505050505b9295509295909350565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa1580156111e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120591906119bf565b6112225760405163061cbdd360e51b815260040160405180910390fd5b5050565b6112366040820160208301611bbe565b158015611256575061124e6080820160608301611bdb565b63ffffffff16155b15611274576040516303f741b360e01b815260040160405180910390fd5b6001600160a01b0382166000908152600d6020526040902081906112988282611a4d565b905050816001600160a01b03167f06fe0c6d458b7bb229e71a998662174aa56123a47918cac4d6a8d869a89c448b826040516112d49190611b1f565b60405180910390a25050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146113675760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016103f5565b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526001600160a01b0383166000908152600d6020908152604080832067ffffffffffffffff86168452600e8352818420825160a081018452858152938401859052918301849052606083018490526080830193909352908254610100900460ff168061140557508154610100900460ff165b151560208201528254600160201b900463ffffffff1615611439578254600160201b900463ffffffff16606082015261147c565b8154600160201b900463ffffffff1615611466578154600160201b900463ffffffff16606082015261147c565b600c54600160201b900463ffffffff1660608201525b825462010000900461ffff16156114a357825462010000900461ffff1660408201526114de565b815462010000900461ffff16156114ca57815462010000900461ffff1660408201526114de565b600c54600160401b900461ffff1660408201525b8254600160401b900461ffff1615611507578254600160401b900461ffff166080820152611544565b8154600160401b900461ffff1615611530578154600160401b900461ffff166080820152611544565b600c54600160501b900461ffff1660808201525b925050505b92915050565b600080836000036115665750600190506000611593565b838302838582816115795761157961192f565b041461158c576000809250925050611593565b6001925090505b9250929050565b80356001600160a01b03811681146115b157600080fd5b919050565b60008083601f8401126115c857600080fd5b50813567ffffffffffffffff8111156115e057600080fd5b6020830191508360208260051b850101111561159357600080fd5b801515811461160957600080fd5b50565b60008060008060006080868803121561162457600080fd5b61162d8661159a565b945061163b6020870161159a565b9350604086013567ffffffffffffffff81111561165757600080fd5b611663888289016115b6565b9094509250506060860135611677816115fb565b809150509295509295909350565b60006020828403121561169757600080fd5b6116a08261159a565b9392505050565b803567ffffffffffffffff811681146115b157600080fd5b6000602082840312156116d157600080fd5b6116a0826116a7565b6000815180845260005b81811015611700576020818501810151868301820152016116e4565b506000602082860101526020601f19601f83011685010191505092915050565b851515815260a06020820152600061173b60a08301876116da565b60408301959095525063ffffffff92909216606083015260809091015292915050565b600060a0828403121561177057600080fd5b50919050565b60008060c0838503121561178957600080fd5b6117928361159a565b91506117a1846020850161175e565b90509250929050565b60008060008060e085870312156117c057600080fd5b6117c98561159a565b9350602085013567ffffffffffffffff8111156117e557600080fd5b6117f1878288016115b6565b90945092506118059050866040870161175e565b905092959194509250565b61ffff8116811461160957600080fd5b63ffffffff8116811461160957600080fd5b6000806000806080858703121561184857600080fd5b843561185381611810565b9350602085013561186381611820565b9250604085013561187381611810565b9150606085013561188381611820565b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff831681526040602082015260006118c760408301846116da565b949350505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611549576115496118cf565b63ffffffff818116838216019080821115611915576119156118cf565b5092915050565b81810381811115611549576115496118cf565b634e487b7160e01b600052601260045260246000fd5b6000826119545761195461192f565b500490565b8082028115828204841417611549576115496118cf565b63ffffffff828116828216039080821115611915576119156118cf565b60006001820161199f5761199f6118cf565b5060010190565b6000602082840312156119b857600080fd5b5051919050565b6000602082840312156119d157600080fd5b81516116a0816115fb565b6060808252810184905260008560808301825b87811015611a1e5767ffffffffffffffff611a09846116a7565b168252602092830192909101906001016119ef565b50602084019590955250506040015292915050565b6000813561154981611810565b6000813561154981611820565b8135611a58816115fb565b815460ff19811691151560ff1691821783556020840135611a78816115fb565b61ff0090151560081b1661ffff1982168317811784556040850135611a9c81611810565b63ffff00008160101b168463ffffffff19851617831717855550505050611aea611ac860608401611a40565b825467ffffffff00000000191660209190911b67ffffffff0000000016178255565b611222611af960808401611a33565b825469ffff0000000000000000191660409190911b69ffff000000000000000016178255565b60a081018235611b2e816115fb565b151582526020830135611b40816115fb565b151560208301526040830135611b5581611810565b61ffff9081166040840152606084013590611b6f82611820565b63ffffffff8216606085015260808501359150611b8b82611810565b8082166080850152505092915050565b600063ffffffff80841680611bb257611bb261192f565b92169190910492915050565b600060208284031215611bd057600080fd5b81356116a0816115fb565b600060208284031215611bed57600080fd5b81356116a08161182056fe4665652063616c63756c6174696f6e206f766572666c6f772e20546865206465706f736974416d6f756e7420697320746f6f20626967537562736372697074696f6e2069732073657420746f2063616e63656c6c6564206f72206578706972656454696d6520756e74696c20537562736372697074696f6e2045787069726174696f6e2069732067726561746572207468616e206d696e696d756d54696d65556e74696c457870697265a26469706673582212200f6aec059fd9aaf3040f09d3ab07751f806605a5b5df2354ea16b0cd7792309964736f6c63430008110033";

type AutomationFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutomationFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutomationFacet__factory extends ContractFactory {
  constructor(...args: AutomationFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutomationFacet> {
    return super.deploy(overrides || {}) as Promise<AutomationFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AutomationFacet {
    return super.attach(address) as AutomationFacet;
  }
  override connect(signer: Signer): AutomationFacet__factory {
    return super.connect(signer) as AutomationFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutomationFacetInterface {
    return new utils.Interface(_abi) as AutomationFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutomationFacet {
    return new Contract(address, _abi, signerOrProvider) as AutomationFacet;
  }
}
