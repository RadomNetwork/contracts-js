/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BillingFacet,
  BillingFacetInterface,
} from "../../../contracts/facets/BillingFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "AutoDepositTriggerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedMethod",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meteredBudgetUsed",
        type: "uint256",
      },
    ],
    name: "MeteredProductCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "OrderMetadataReplaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct Automation.DepositConfig[]",
        name: "autoDepositConfigs",
        type: "tuple[]",
      },
    ],
    name: "OrderPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Payment",
        name: "paymentData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "PaymentSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "SubscriptionRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "chargeMeteredProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
    ],
    name: "generateOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumTimeUntilExpireInBps",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMaxFeeInBps",
            type: "uint32",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPurchasedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumTimeUntilExpireInBps",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMaxFeeInBps",
            type: "uint32",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getSoldSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumTimeUntilExpireInBps",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMaxFeeInBps",
            type: "uint32",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMinimumTimeUntilExpireInBps",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "autoDepositMaxFeeInBps",
            type: "uint32",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "useRadomBalanceForMeteredCharge",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "disableAutoDeposit",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "minimumTimeUntilExpireInBps",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "minimumDuration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "maxFeeInBps",
            type: "uint16",
          },
        ],
        internalType: "struct Automation.DepositConfig[]",
        name: "autoDepositConfigs",
        type: "tuple[]",
      },
    ],
    name: "order",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct Billing.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type BillingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BillingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BillingFacet__factory extends ContractFactory {
  constructor(...args: BillingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BillingFacet> {
    return super.deploy(overrides || {}) as Promise<BillingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BillingFacet {
    return super.attach(address) as BillingFacet;
  }
  override connect(signer: Signer): BillingFacet__factory {
    return super.connect(signer) as BillingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BillingFacetInterface {
    return new utils.Interface(_abi) as BillingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BillingFacet {
    return new Contract(address, _abi, signerOrProvider) as BillingFacet;
  }
}
