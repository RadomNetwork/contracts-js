/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BillingFacet,
  BillingFacetInterface,
} from "../../../contracts/facets/BillingFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meteredBudgetUsed",
        type: "uint256",
      },
    ],
    name: "MeteredProductCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "OrderMetadataReplaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "configInputs",
        type: "tuple[]",
      },
    ],
    name: "OrderPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Payment",
        name: "paymentData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "PaymentSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "chargeMeteredProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
    ],
    name: "generateOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPurchasedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getSoldSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "order",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct Billing.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506132ad806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638499367b116100665780638499367b1461011b5780639bfc49451461013c578063a47c76961461014f578063cda1d4eb1461016f578063e55d21161461018257600080fd5b806303ddb5aa146100a35780632819fd44146100cd5780632ecf5b7f146100e257806352489354146100f557806360e083a714610108575b600080fd5b6100b66100b1366004612523565b610195565b6040516100c4929190612715565b60405180910390f35b6100e06100db36600461278a565b61030b565b005b6100e06100f03660046127a7565b6103a8565b6100e0610103366004612844565b6105b7565b6100b6610116366004612523565b6106da565b61012e6101293660046128a7565b61083c565b6040519081526020016100c4565b6100b661014a366004612523565b61086c565b61016261015d36600461278a565b6109a7565b6040516100c491906128e3565b6100e061017d3660046128f6565b610a0c565b6100e061019036600461278a565b610dbb565b6001600160a01b038316600090815260046020526040812060609190829082906101be90610e54565b9050806001600160401b0316866001600160401b031611156101e4579092509050610303565b6001600160401b0381166101f8868861297a565b6001600160401b03161161020c5784610216565b61021686826129a1565b6001600160401b03166001600160401b03811115610236576102366129c1565b60405190808252806020026020018201604052801561026f57816020015b61025c61244c565b8152602001906001900390816102545790505b50915060005b8251816001600160401b031610156102fc576102c36102be610297838a61297a565b6001600160a01b038b166000908152600460205260409020906001600160401b0316610e5e565b610e71565b83826001600160401b0316815181106102de576102de6129d7565b602002602001018190525080806102f4906129ed565b915050610275565b5090925090505b935093915050565b6001600160401b0381166000908152600360205260409020600181015461033f906001600160a01b0316600160f41b61104a565b61034a8160016110e9565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f969dbeb428468d1aa44663a22bc139cde2010cfb4e5e5c28c7d62300f90f975b906020015b60405180910390a35050565b6001600160401b038216600090815260036020526040902060018101546103dc906001600160a01b0316600160f51b61104a565b60006103e782611353565b9150508061040857604051630e0aac8560e21b815260040160405180910390fd5b816006015460000361042d576040516323d7062760e11b815260040160405180910390fd5b6005820154825463ffffffff600160201b8304811692811691610451911642612a13565b61045b9190612a46565b63ffffffff1611156104b657600060078301556005820154825463ffffffff91821691610489911642612a13565b6104939190612a46565b8260050160046101000a81548163ffffffff021916908363ffffffff1602179055505b60078201546104c59084612a69565b826006015410156104e95760405163e46f952f60e01b815260040160405180910390fd5b828260070160008282546104fd9190612a69565b909155505081546001600160a01b03600160381b90910481166000818152600d60205260409020546002850154600186015460ff90921693610550938893600160201b90930482169290911690856113ed565b600183015460078401546040516001600160a01b03909216916001600160401b038816917f78216ffa9e2ba6f983e241252f1ab3ab7cb211ffdf77f4c694b7472aab6fb93b916105a891898252602082015260400190565b60405180910390a35050505050565b6105c76060850160408601612a7c565b600160f61b6105d6828261104a565b468660800135146105f9576040516217e1ef60ea1b815260040160405180910390fd5b610634863561060e6040890160208a01612a7c565b61061e60808a0160608b01612a7c565b61062e60608b0160408c01612a7c565b896113ed565b6000866040516020016106479190612aea565b6040516020818303038152906040528051906020012090508660400160208101906106729190612a7c565b6001600160a01b031661068b6080890160608a01612a7c565b6001600160a01b03167fed22c6fc3e57e43b1cd3bca364681918a9521f0b7369f6d307a1bfee837cd33c838a89896040516106c99493929190612bfe565b60405180910390a350505050505050565b6001600160a01b0383166000908152600560205260408120606091908290829061070390610e54565b9050806001600160401b0316866001600160401b03161115610729579092509050610303565b6001600160401b03811661073d868861297a565b6001600160401b031611610751578461075b565b61075b86826129a1565b6001600160401b03166001600160401b0381111561077b5761077b6129c1565b6040519080825280602002602001820160405280156107b457816020015b6107a161244c565b8152602001906001900390816107995790505b50915060005b8251816001600160401b031610156102fc576108036102be6107dc838a61297a565b6001600160a01b038b166000908152600560205260409020906001600160401b0316610e5e565b83826001600160401b03168151811061081e5761081e6129d7565b60200260200101819052508080610834906129ed565b9150506107ba565b60008160405160200161084f9190612d67565b604051602081830303815290604052805190602001209050919050565b6001600160a01b0383166000908152600560205260408120606091908290829061089590610e54565b9050806001600160401b0316866001600160401b031611156108bb579092509050610303565b6001600160401b0381166108cf868861297a565b6001600160401b0316116108e357846108ed565b6108ed86826129a1565b6001600160401b03166001600160401b0381111561090d5761090d6129c1565b60405190808252806020026020018201604052801561094657816020015b61093361244c565b81526020019060019003908161092b5790505b50915060005b8251816001600160401b031610156102fc5761096e6102be6107dc838a61297a565b83826001600160401b031681518110610989576109896129d7565b6020026020010181905250808061099f906129ed565b91505061094c565b6109af61244c565b6109e0826001600160401b0316600090815260036020526040902054600160381b90046001600160a01b0316151590565b6109fd57604051631a00354f60e01b815260040160405180910390fd5b610a0682610e71565b92915050565b610a196020850185612a7c565b600160f61b610a28828261104a565b46866060013514610a4b576040516217e1ef60ea1b815260040160405180910390fd5b6000610a5a6080880188612d7a565b90506001600160401b03811115610a7357610a736129c1565b604051908082528060200260200182016040528015610a9c578160200160208202803683370190505b5090506000600d81610ab160208b018b612a7c565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600087610b3d578154610100900460ff1615610b025760405163544b041f60e01b815260040160405180910390fd5b8154600160301b900463ffffffff1615610b2b57508054600160301b900463ffffffff16610b3d565b50600c54600160201b900463ffffffff165b6000805b610b4e60808c018c612d7a565b9050811015610c70576000610b6660808d018d612d7a565b83818110610b7657610b766129d7565b9050602002810190610b889190612dc3565b610b9190612e5d565b805190915063ffffffff16600003610bd05760008160200151806020019051810190610bbd9190612fb6565b9050610bca8d828e611589565b50610c5d565b805163ffffffff16600103610c445760008160200151806020019051810190610bf99190613055565b9050610c078d828e886115ca565b878581518110610c1957610c196129d7565b6001600160401b039092166020928302919091019091015283610c3b8161310e565b94505050610c5d565b604051631bd9fd8960e21b815260040160405180910390fd5b5080610c688161310e565b915050610b41565b506000816001600160401b03811115610c8b57610c8b6129c1565b604051908082528060200260200182016040528015610cb4578160200160208202803683370190505b50905060005b82811015610d1857858181518110610cd457610cd46129d7565b6020026020010151828281518110610cee57610cee6129d7565b6001600160401b039092166020928302919091019091015280610d108161310e565b915050610cba565b508a604051602001610d2a9190612d67565b60408051601f19818403018152919052805160209182012090610d4f908d018d612a7c565b6001600160a01b0316610d6860408e0160208f01612a7c565b6001600160a01b03167f895dbaed823905efb59335e19c68f099070dbf76bae3414213793cac4318bdfd8e858e8e604051610da69493929190613127565b60405180910390a45050505050505050505050565b6001600160401b03811660009081526003602052604090208054610df390600160381b90046001600160a01b0316600160f71b61104a565b610dfe8160006110e9565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f2fd6804d6a34929fd90881e9852a73f8dd653c88209884a55a5a6767834e22ff9060200161039c565b6000610a06825490565b6000610e6a8383611bd8565b9392505050565b610e7961244c565b6001600160401b0382166000908152600360205260409020610e9961244c565b600080610ea584611353565b6001600160401b0388166060860152600286015463ffffffff80821660408801528754908116608088015260c0870184905282151561018088015260ff600160201b808304821615156101a08a015265010000000000830490911615156101c089015260048901546101008901526001600160a01b03920482166101e0880152600160381b900416855260038601805492945090925090610f459061319c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f719061319c565b8015610fbe5780601f10610f9357610100808354040283529160200191610fbe565b820191906000526020600020905b815481529060010190602001808311610fa157829003601f168201915b505050505060a0840152505060018201546001600160a01b038116602083015263ffffffff600160a01b82048116610120840152600160c01b82048116610140840152600160e01b90910481166101608301526005830154808216610200840152600160201b900416610220820152600682015461024082015260079091015461026082015292915050565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa1580156110a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c891906131d0565b6110e55760405163061cbdd360e51b815260040160405180910390fd5b5050565b6111038254600160381b90046001600160a01b0316151590565b61112057604051631a00354f60e01b815260040160405180910390fd5b8154600160201b900460ff168061113f57508154600160301b900460ff165b1561115d57604051630e0aac8560e21b815260040160405180910390fd5b600282015463ffffffff1660010361130b576001820154825460009163ffffffff600160c01b8204811692600160a01b90920481169161119e9116426131ed565b6111a89190613200565b6111b291906131ed565b905080156112f85782600101601c9054906101000a900463ffffffff1660016111db9190613214565b63ffffffff16811061120057604051630e0aac8560e21b815260040160405180910390fd5b808360010160188282829054906101000a900463ffffffff166112239190613214565b92506101000a81548163ffffffff021916908363ffffffff16021790555060008360040154826112539190613231565b84546001600160a01b03600160381b90910481166000908152600a6020908152604080832060028a0154600160201b90049094168352929052908120805492935083929091906112a49084906131ed565b909155505060018401546001600160a01b039081166000908152600b602090815260408083206002890154600160201b9004909416835292905290812080548392906112f1908490612a69565b9091555050505b506001820180546001600160e01b031690555b8154811515650100000000000265ffff000000001990911617600160201b90811780845560028401546110e5926001600160a01b03600160381b909304831692910416611c02565b600080826004015460000361136e5750600092600192509050565b600283015460009063ffffffff166001036113e257600184015463ffffffff600160a01b82048116916113b291600160e01b8204811691600160c01b900416613214565b6113bd906001613214565b63ffffffff166113cd9190613231565b84546113df919063ffffffff16612a69565b90505b934285119350915050565b6113f86000856121d2565b6114155760405163350b944160e11b815260040160405180910390fd5b8460000361143657604051631b701ba360e11b815260040160405180910390fd5b806114f5576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561148e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b291906131d0565b506001600160a01b038084166000908152600b60209081526040808320938816835292905290812080548792906114ea908490612a69565b909155506115829050565b6114ff8285611c02565b6001600160a01b038083166000908152600a60209081526040808320938816835292905290812080548792906115369084906131ed565b90915550506001600160a01b038084166000908152600b6020908152604080832093881683529290529081208054879290611572908490612a69565b9091555061158290508285611c02565b5050505050565b60208201516115c5906115a26060860160408701612a7c565b6115b26040870160208801612a7c565b6115bf6020880188612a7c565b856113ed565b505050565b60006115da600280546001019055565b60006115e560025490565b90506116026115fa6060880160408901612a7c565b6000906121d2565b61161f5760405163350b944160e11b815260040160405180910390fd5b845160000361164157604051631b701ba360e11b815260040160405180910390fd5b846020015163ffffffff1660000361166c5760405163bc41e3f560e01b815260040160405180910390fd5b6116778187876121f4565b600660006116886020890189612a7c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760400160208101906116bd9190612a7c565b6001600160a01b031681526020808201929092526040908101600090812080546001810182559082528382206004820401805460039092166008026101000a6001600160401b038181021990931692871602919091179055600792909161172991908a01908a01612a7c565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087604001602081019061175e9190612a7c565b6001600160a01b03168152602080820192909252604001600090812080546001810182559082529181206004830401805460039093166008026101000a6001600160401b0381810219909416938516029290921790915584156118eb5750845180600a60006117d060208b018b612a7c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960400160208101906118059190612a7c565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156118455760405163356680b760e01b815260040160405180910390fd5b80600a600061185760208b018b612a7c565b6001600160a01b03166001600160a01b03168152602001908152602001600020600089604001602081019061188c9190612a7c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546118bb91906131ed565b909155506118e690506118d16020890189612a7c565b6118e160608a0160408b01612a7c565b611c02565b611b4e565b60008463ffffffff16876020015163ffffffff161061190c5750600161191e565b602087015161191b9086612a46565b90505b611929600182612a13565b6001600160401b038416600090815260036020526040902060010180546001600160e01b0316600160e01b63ffffffff93841602179055875161196e91831690613231565b91508161198160608a0160408b01612a7c565b6001600160a01b03166370a0823161199c60208c018c612a7c565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a049190613248565b1015611a235760405163356680b760e01b815260040160405180910390fd5b611a336060890160408a01612a7c565b6001600160a01b03166323b872dd611a4e60208b018b612a7c565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac591906131d0565b508651611ad290836131ed565b600a6000611ae360208c018c612a7c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611b189190612a7c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b479190612a69565b9091555050505b8551600b6000611b6460408b0160208c01612a7c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000896040016020810190611b999190612a7c565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611bc89190612a69565b9091555091979650505050505050565b6000826000018281548110611bef57611bef6129d7565b9060005260206000200154905092915050565b6001600160a01b03808316600090815260066020908152604080832093851683529290529081209080805b835481101561208d576000848281548110611c4a57611c4a6129d7565b6000918252602080832060048304015460039283166008026101000a90046001600160401b03168084529190526040909120805491925090600160201b900460ff1680611c9f57508054600160301b900460ff165b15611d815785548690611cb4906001906131ed565b81548110611cc457611cc46129d7565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316868481548110611cff57611cff6129d7565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555085805480611d4857611d48613261565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a021916905590555061207b9050565b6001810154815460009163ffffffff600160c01b8204811692600160a01b909204811691611db09116426131ed565b611dba9190613200565b611dc491906131ed565b905080600003611e125760018201546004830154600160a01b90910463ffffffff1690611df49062989680613231565b611dfe9190613200565b611e089086612a69565b945050505061207b565b81600101601c9054906101000a900463ffffffff166001611e339190613214565b63ffffffff168110611f8c575060018101805463ffffffff600160e01b820481169283929091601891611e6f918591600160c01b900416613214565b825463ffffffff9182166101009390930a928302919092021990911617905550600182810180546001600160e01b03169055825466ff0000000000001916600160301b17835587548891611ec2916131ed565b81548110611ed257611ed26129d7565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316878581548110611f0d57611f0d6129d7565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555086805480611f5657611f56613261565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a02191690559055612012565b808260010160188282829054906101000a900463ffffffff16611faf9190613214565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160010160149054906101000a900463ffffffff1663ffffffff16826004015462989680611ffb9190613231565b6120059190613200565b61200f9086612a69565b94505b60008260040154826120249190613231565b90506120308188612a69565b60018401546001600160a01b039081166000908152600b60209081526040808320938e16835292905290812080549299508392909190612071908490612a69565b9091555050505050505b806120858161310e565b915050611c2d565b508060000361209d575050505050565b6001600160a01b038086166000908152600a60209081526040808320938816835292905290812080548492906120d49084906131ed565b90915550506001600160a01b038086166000908152600a6020908152604080832093881683529290529081205490826121108362989680613231565b61211a9190613200565b905060005b85548110156121c857600086828154811061213c5761213c6129d7565b6000918252602080832060048304015460039283166008026101000a90046001600160401b0316808452919052604090912060018101549192509061218e90600160a01b900463ffffffff1685613200565b6001909101805463ffffffff92909216600160e01b026001600160e01b0390921691909117905550806121c08161310e565b91505061211f565b5050505050505050565b6001600160a01b03811660009081526001830160205260408120541515610e6a565b6001600160401b0383166000908152600360209081526040909120805463ffffffff19164263ffffffff161781559061222f90840184612a7c565b81546001600160a01b0391909116600160381b02670100000000000000600160d81b03199091161781556122696040840160208501612a7c565b6001808301805460028501805463ffffffff191690931790925584516004850155602085015163ffffffff16600160a01b026001600160c01b03199092166001600160a01b0393909316929092171790556122ca6060840160408501612a7c565b6002820180546001600160a01b0392909216600160201b02640100000000600160c01b031990921691909117905560808201511561232d5760808201516006820155606082015160058201805463ffffffff191663ffffffff9092169190911790555b61236a6001600160401b0385166004600061234b6020880188612a7c565b6001600160a01b031681526020810191909152604001600020906123f3565b5061238c6001600160401b0385166005600061234b6040880160208901612a7c565b50836001600160401b03167f7653d3d792a858ef3d6fa51046fa6a0c8363bbdeca1759b033b6d948c07a7660846040516020016123c99190612d67565b60408051601f1981840301815290829052805160209182012082520160405180910390a250505050565b6000818152600183016020526040812054610e6a9084908490849061244457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a06565b506000610a06565b604080516102808101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e0810182905261020081018290526102208101829052610240810182905261026081019190915290565b80356001600160a01b038116811461250657600080fd5b919050565b6001600160401b038116811461252057600080fd5b50565b60008060006060848603121561253857600080fd5b612541846124ef565b925060208401356125518161250b565b915060408401356125618161250b565b809150509250925092565b6000815180845260005b8181101561259257602081850181015186830182015201612576565b506000602082860101526020601f19601f83011685010191505092915050565b80516001600160a01b03168252600061028060208301516125de60208601826001600160a01b03169052565b5060408301516125f6604086018263ffffffff169052565b50606083015161261160608601826001600160401b03169052565b506080830151612629608086018263ffffffff169052565b5060a08301518160a08601526126418286018261256c565b91505060c083015160c085015260e083015160e08501526101008084015181860152506101208084015161267c8287018263ffffffff169052565b50506101408381015163ffffffff9081169186019190915261016080850151821690860152610180808501511515908601526101a0808501511515908601526101c0808501511515908601526101e0808501516001600160a01b03169086015261020080850151821690860152610220808501519091169085015261024080840151908501526102609283015192909301919091525090565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561276c57605f1988870301855261275a8683516125b2565b9550938201939082019060010161273e565b50508394506001600160401b03871681870152505050509392505050565b60006020828403121561279c57600080fd5b8135610e6a8161250b565b600080604083850312156127ba57600080fd5b82356127c58161250b565b946020939093013593505050565b600060a082840312156127e557600080fd5b50919050565b801515811461252057600080fd5b60008083601f84011261280b57600080fd5b5081356001600160401b0381111561282257600080fd5b6020830191508360208260051b850101111561283d57600080fd5b9250929050565b60008060008060e0858703121561285a57600080fd5b61286486866127d3565b935060a0850135612874816127eb565b925060c08501356001600160401b0381111561288f57600080fd5b61289b878288016127f9565b95989497509550505050565b6000602082840312156128b957600080fd5b81356001600160401b038111156128cf57600080fd5b6128db848285016127d3565b949350505050565b602081526000610e6a60208301846125b2565b6000806000806060858703121561290c57600080fd5b84356001600160401b038082111561292357600080fd5b61292f888389016127d3565b955060208701359150612941826127eb565b9093506040860135908082111561295757600080fd5b5061289b878288016127f9565b634e487b7160e01b600052601160045260246000fd5b6001600160401b0381811683821601908082111561299a5761299a612964565b5092915050565b6001600160401b0382811682821603908082111561299a5761299a612964565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001600160401b03808316818103612a0957612a09612964565b6001019392505050565b63ffffffff82811682821603908082111561299a5761299a612964565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680612a5d57612a5d612a30565b92169190910492915050565b80820180821115610a0657610a06612964565b600060208284031215612a8e57600080fd5b610e6a826124ef565b80358252612aa7602082016124ef565b6001600160a01b03818116602085015280612ac4604085016124ef565b16604085015280612ad7606085016124ef565b1660608501525050608090810135910152565b60a08101610a068284612a97565b6000808335601e19843603018112612b0f57600080fd5b83016020810192503590506001600160401b03811115612b2e57600080fd5b80360382131561283d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612b7c57600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b87811015612bf1578284038952612bb68288612b66565b604081358652612bc887830183612af8565b92508188880152612bdc8288018483612b3d565b9b88019b965050509185019150600101612b9f565b5091979650505050505050565b848152612c0e6020820185612a97565b60e060c08201526000612c2560e083018486612b85565b9695505050505050565b63ffffffff8116811461252057600080fd5b81835260006020808501808196508560051b810191508460005b87811015612bf1578284038952612c728288612b66565b60408135612c7f81612c2f565b63ffffffff168652612c9382880183612af8565b92508188880152612ca78288018483612b3d565b9b88019b965050509185019150600101612c5b565b60006001600160a01b0380612cd0846124ef565b16845280612ce0602085016124ef565b16602085015280612cf3604085016124ef565b16604085015250606082013560608401526080820135601e19833603018112612d1b57600080fd5b82016020810190356001600160401b03811115612d3757600080fd5b8060051b3603821315612d4957600080fd5b60a06080860152612d5e60a086018284612c41565b95945050505050565b602081526000610e6a6020830184612cbc565b6000808335601e19843603018112612d9157600080fd5b8301803591506001600160401b03821115612dab57600080fd5b6020019150600581901b360382131561283d57600080fd5b60008235603e19833603018112612dd957600080fd5b9190910192915050565b604080519081016001600160401b0381118282101715612e0557612e056129c1565b60405290565b60405160c081016001600160401b0381118282101715612e0557612e056129c1565b604051601f8201601f191681016001600160401b0381118282101715612e5557612e556129c1565b604052919050565b600060408236031215612e6f57600080fd5b612e77612de3565b8235612e8281612c2f565b81526020838101356001600160401b0380821115612e9f57600080fd5b9085019036601f830112612eb257600080fd5b813581811115612ec457612ec46129c1565b612ed6601f8201601f19168501612e2d565b91508082523684828501011115612eec57600080fd5b80848401858401376000908201840152918301919091525092915050565b600082601f830112612f1b57600080fd5b815160206001600160401b03821115612f3657612f366129c1565b612f44818360051b01612e2d565b82815260069290921b84018101918181019086841115612f6357600080fd5b8286015b84811015612fab5760408189031215612f805760008081fd5b612f88612de3565b8151612f938161250b565b81528185015185820152835291830191604001612f67565b509695505050505050565b600060208284031215612fc857600080fd5b81516001600160401b0380821115612fdf57600080fd5b9083019060608286031215612ff357600080fd5b60405160608101818110838211171561300e5761300e6129c1565b604052825161301c8161250b565b81526020838101519082015260408301518281111561303a57600080fd5b61304687828601612f0a565b60408301525095945050505050565b60006020828403121561306757600080fd5b81516001600160401b038082111561307e57600080fd5b9083019060c0828603121561309257600080fd5b61309a612e0b565b8251815260208301516130ac81612c2f565b602082015260408301516130bf8161250b565b604082015260608301516130d281612c2f565b60608201526080838101519082015260a0830151828111156130f357600080fd5b6130ff87828601612f0a565b60a08301525095945050505050565b60006001820161312057613120612964565b5060010190565b60608152600061313a6060830187612cbc565b82810360208481019190915286518083528782019282019060005b8181101561317a5784516001600160401b031683529383019391830191600101613155565b5050848103604086015261318f818789612b85565b9998505050505050505050565b600181811c908216806131b057607f821691505b6020821081036127e557634e487b7160e01b600052602260045260246000fd5b6000602082840312156131e257600080fd5b8151610e6a816127eb565b81810381811115610a0657610a06612964565b60008261320f5761320f612a30565b500490565b63ffffffff81811683821601908082111561299a5761299a612964565b8082028115828204841417610a0657610a06612964565b60006020828403121561325a57600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122050716ec77185acd403bba795c3561a38c5a0b2280a1468103ec4ac96ca0cb7c264736f6c63430008110033";

type BillingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BillingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BillingFacet__factory extends ContractFactory {
  constructor(...args: BillingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BillingFacet> {
    return super.deploy(overrides || {}) as Promise<BillingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BillingFacet {
    return super.attach(address) as BillingFacet;
  }
  override connect(signer: Signer): BillingFacet__factory {
    return super.connect(signer) as BillingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BillingFacetInterface {
    return new utils.Interface(_abi) as BillingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BillingFacet {
    return new Contract(address, _abi, signerOrProvider) as BillingFacet;
  }
}
