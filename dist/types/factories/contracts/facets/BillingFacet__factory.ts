/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BillingFacet,
  BillingFacetInterface,
} from "../../../contracts/facets/BillingFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meteredBudgetUsed",
        type: "uint256",
      },
    ],
    name: "MeteredProductCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "OrderMetadataReplaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "configInputs",
        type: "tuple[]",
      },
    ],
    name: "OrderPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Payment",
        name: "paymentData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "PaymentSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "chargeMeteredProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
    ],
    name: "generateOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPurchasedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getSoldSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "order",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct Billing.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506133e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638499367b116100665780638499367b1461011b5780639bfc49451461013c578063a47c76961461014f578063cda1d4eb1461016f578063e55d21161461018257600080fd5b806303ddb5aa146100a35780632819fd44146100cd5780632ecf5b7f146100e257806352489354146100f557806360e083a714610108575b600080fd5b6100b66100b1366004612639565b610195565b6040516100c492919061282b565b60405180910390f35b6100e06100db3660046128a0565b61030b565b005b6100e06100f03660046128bd565b6103a8565b6100e061010336600461295a565b6105b7565b6100b6610116366004612639565b6106e1565b61012e6101293660046129bd565b610843565b6040519081526020016100c4565b6100b661014a366004612639565b610873565b61016261015d3660046128a0565b6109ae565b6040516100c491906129f9565b6100e061017d366004612a0c565b610a13565b6100e06101903660046128a0565b610dc2565b6001600160a01b038316600090815260046020526040812060609190829082906101be90610e5b565b9050806001600160401b0316866001600160401b031611156101e4579092509050610303565b6001600160401b0381166101f88688612a90565b6001600160401b03161161020c5784610216565b6102168682612ab7565b6001600160401b03166001600160401b0381111561023657610236612ad7565b60405190808252806020026020018201604052801561026f57816020015b61025c612562565b8152602001906001900390816102545790505b50915060005b8251816001600160401b031610156102fc576102c36102be610297838a612a90565b6001600160a01b038b166000908152600460205260409020906001600160401b0316610e65565b610e78565b83826001600160401b0316815181106102de576102de612aed565b602002602001018190525080806102f490612b03565b915050610275565b5090925090505b935093915050565b6001600160401b0381166000908152600360205260409020600181015461033f906001600160a01b0316600160f41b611051565b61034a8160016110f0565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f969dbeb428468d1aa44663a22bc139cde2010cfb4e5e5c28c7d62300f90f975b906020015b60405180910390a35050565b6001600160401b038216600090815260036020526040902060018101546103dc906001600160a01b0316600160f51b611051565b60006103e7826113ef565b9150508061040857604051630e0aac8560e21b815260040160405180910390fd5b816006015460000361042d576040516323d7062760e11b815260040160405180910390fd5b6005820154825463ffffffff600160201b8304811692811691610451911642612b29565b61045b9190612b5c565b63ffffffff1611156104b657600060078301556005820154825463ffffffff91821691610489911642612b29565b6104939190612b5c565b8260050160046101000a81548163ffffffff021916908363ffffffff1602179055505b60078201546104c59084612b7f565b826006015410156104e95760405163e46f952f60e01b815260040160405180910390fd5b828260070160008282546104fd9190612b7f565b909155505081546001600160a01b03600160381b90910481166000818152600d60205260409020546002850154600186015460ff90921693610550938893600160201b90930482169290911690856114e6565b600183015460078401546040516001600160a01b03909216916001600160401b038816917f78216ffa9e2ba6f983e241252f1ab3ab7cb211ffdf77f4c694b7472aab6fb93b916105a891898252602082015260400190565b60405180910390a35050505050565b6105c76060850160408601612b92565b600160f61b6105d68282611051565b468660800135146105f9576040516217e1ef60ea1b815260040160405180910390fd5b85351561063b5761063b86356106156040890160208a01612b92565b61062560808a0160608b01612b92565b61063560608b0160408c01612b92565b896114e6565b60008660405160200161064e9190612c00565b6040516020818303038152906040528051906020012090508660400160208101906106799190612b92565b6001600160a01b03166106926080890160608a01612b92565b6001600160a01b03167fed22c6fc3e57e43b1cd3bca364681918a9521f0b7369f6d307a1bfee837cd33c838a89896040516106d09493929190612d14565b60405180910390a350505050505050565b6001600160a01b0383166000908152600560205260408120606091908290829061070a90610e5b565b9050806001600160401b0316866001600160401b03161115610730579092509050610303565b6001600160401b0381166107448688612a90565b6001600160401b0316116107585784610762565b6107628682612ab7565b6001600160401b03166001600160401b0381111561078257610782612ad7565b6040519080825280602002602001820160405280156107bb57816020015b6107a8612562565b8152602001906001900390816107a05790505b50915060005b8251816001600160401b031610156102fc5761080a6102be6107e3838a612a90565b6001600160a01b038b166000908152600560205260409020906001600160401b0316610e65565b83826001600160401b03168151811061082557610825612aed565b6020026020010181905250808061083b90612b03565b9150506107c1565b6000816040516020016108569190612e74565b604051602081830303815290604052805190602001209050919050565b6001600160a01b0383166000908152600560205260408120606091908290829061089c90610e5b565b9050806001600160401b0316866001600160401b031611156108c2579092509050610303565b6001600160401b0381166108d68688612a90565b6001600160401b0316116108ea57846108f4565b6108f48682612ab7565b6001600160401b03166001600160401b0381111561091457610914612ad7565b60405190808252806020026020018201604052801561094d57816020015b61093a612562565b8152602001906001900390816109325790505b50915060005b8251816001600160401b031610156102fc576109756102be6107e3838a612a90565b83826001600160401b03168151811061099057610990612aed565b602002602001018190525080806109a690612b03565b915050610953565b6109b6612562565b6109e7826001600160401b0316600090815260036020526040902054600160381b90046001600160a01b0316151590565b610a0457604051631a00354f60e01b815260040160405180910390fd5b610a0d82610e78565b92915050565b610a206020850185612b92565b600160f61b610a2f8282611051565b46866060013514610a52576040516217e1ef60ea1b815260040160405180910390fd5b6000610a616080880188612e87565b90506001600160401b03811115610a7a57610a7a612ad7565b604051908082528060200260200182016040528015610aa3578160200160208202803683370190505b5090506000600d81610ab860208b018b612b92565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600087610b44578154610100900460ff1615610b095760405163544b041f60e01b815260040160405180910390fd5b8154600160301b900463ffffffff1615610b3257508054600160301b900463ffffffff16610b44565b50600c54600160201b900463ffffffff165b6000805b610b5560808c018c612e87565b9050811015610c77576000610b6d60808d018d612e87565b83818110610b7d57610b7d612aed565b9050602002810190610b8f9190612ed0565b610b9890612f6a565b805190915063ffffffff16600003610bd75760008160200151806020019051810190610bc491906130c3565b9050610bd18d828e611661565b50610c64565b805163ffffffff16600103610c4b5760008160200151806020019051810190610c009190613162565b9050610c0e8d828e886116ac565b878581518110610c2057610c20612aed565b6001600160401b039092166020928302919091019091015283610c428161321b565b94505050610c64565b604051631bd9fd8960e21b815260040160405180910390fd5b5080610c6f8161321b565b915050610b48565b506000816001600160401b03811115610c9257610c92612ad7565b604051908082528060200260200182016040528015610cbb578160200160208202803683370190505b50905060005b82811015610d1f57858181518110610cdb57610cdb612aed565b6020026020010151828281518110610cf557610cf5612aed565b6001600160401b039092166020928302919091019091015280610d178161321b565b915050610cc1565b508a604051602001610d319190612e74565b60408051601f19818403018152919052805160209182012090610d56908d018d612b92565b6001600160a01b0316610d6f60408e0160208f01612b92565b6001600160a01b03167f895dbaed823905efb59335e19c68f099070dbf76bae3414213793cac4318bdfd8e858e8e604051610dad9493929190613234565b60405180910390a45050505050505050505050565b6001600160401b03811660009081526003602052604090208054610dfa90600160381b90046001600160a01b0316600160f71b611051565b610e058160006110f0565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f2fd6804d6a34929fd90881e9852a73f8dd653c88209884a55a5a6767834e22ff9060200161039c565b6000610a0d825490565b6000610e718383611ccb565b9392505050565b610e80612562565b6001600160401b0382166000908152600360205260409020610ea0612562565b600080610eac846113ef565b6001600160401b0388166060860152600286015463ffffffff80821660408801528754908116608088015260c0870184905282151561018088015260ff600160201b808304821615156101a08a015265010000000000830490911615156101c089015260048901546101008901526001600160a01b03920482166101e0880152600160381b900416855260038601805492945090925090610f4c906132a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f78906132a9565b8015610fc55780601f10610f9a57610100808354040283529160200191610fc5565b820191906000526020600020905b815481529060010190602001808311610fa857829003601f168201915b505050505060a0840152505060018201546001600160a01b038116602083015263ffffffff600160a01b82048116610120840152600160c01b82048116610140840152600160e01b90910481166101608301526005830154808216610200840152600160201b900416610220820152600682015461024082015260079091015461026082015292915050565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa1580156110ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cf91906132dd565b6110ec5760405163061cbdd360e51b815260040160405180910390fd5b5050565b61110a8254600160381b90046001600160a01b0316151590565b61112757604051631a00354f60e01b815260040160405180910390fd5b8154600160201b900460ff168061114657508154600160301b900460ff165b1561116457604051630e0aac8560e21b815260040160405180910390fd5b81600401546000036111f9576001820154600160a01b900463ffffffff16156111d6576001820154825463ffffffff600160a01b9092048216916111a99116426132fa565b6111b3919061330d565b8260010160186101000a81548163ffffffff021916908363ffffffff1602179055505b8154901515650100000000000265ffff000000001990911617600160201b179055565b600282015463ffffffff166001036113a7576001820154825460009163ffffffff600160c01b8204811692600160a01b90920481169161123a9116426132fa565b611244919061330d565b61124e91906132fa565b905080156113945782600101601c9054906101000a900463ffffffff1660016112779190613321565b63ffffffff16811061129c57604051630e0aac8560e21b815260040160405180910390fd5b808360010160188282829054906101000a900463ffffffff166112bf9190613321565b92506101000a81548163ffffffff021916908363ffffffff16021790555060008360040154826112ef919061333e565b84546001600160a01b03600160381b90910481166000908152600a6020908152604080832060028a0154600160201b90049094168352929052908120805492935083929091906113409084906132fa565b909155505060018401546001600160a01b039081166000908152600b602090815260408083206002890154600160201b90049094168352929052908120805483929061138d908490612b7f565b9091555050505b506001820180546001600160e01b031690555b8154811515650100000000000265ffff000000001990911617600160201b90811780845560028401546110ec926001600160a01b03600160381b909304831692910416611cf5565b6000808260040154600003611467578254600160201b900460ff161561145b5760018301546000906114379063ffffffff600160a01b8204811691600160c01b900416613355565b8454611449919063ffffffff16613321565b63ffffffff1694428611945092505050565b50600092600192509050565b600283015460009063ffffffff166001036114db57600184015463ffffffff600160a01b82048116916114ab91600160e01b8204811691600160c01b900416613321565b6114b6906001613321565b63ffffffff166114c6919061333e565b84546114d8919063ffffffff16612b7f565b90505b934285119350915050565b6114f16000856122e8565b61150e5760405163350b944160e11b815260040160405180910390fd5b806115cd576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a91906132dd565b506001600160a01b038084166000908152600b60209081526040808320938816835292905290812080548792906115c2908490612b7f565b9091555061165a9050565b6115d78285611cf5565b6001600160a01b038083166000908152600a602090815260408083209388168352929052908120805487929061160e9084906132fa565b90915550506001600160a01b038084166000908152600b602090815260408083209388168352929052908120805487929061164a908490612b7f565b9091555061165a90508285611cf5565b5050505050565b6020820151156116a75760208201516116a7906116846060860160408701612b92565b6116946040870160208801612b92565b6116a16020880188612b92565b856114e6565b505050565b60006116bc600280546001019055565b60006116c760025490565b90506116e46116dc6060880160408901612b92565b6000906122e8565b6117015760405163350b944160e11b815260040160405180910390fd5b846020015163ffffffff1660000361172c5760405163bc41e3f560e01b815260040160405180910390fd5b61173781878761230a565b600660006117486020890189612b92565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087604001602081019061177d9190612b92565b6001600160a01b031681526020808201929092526040908101600090812080546001810182559082528382206004820401805460039092166008026101000a6001600160401b03818102199093169287160291909117905560079290916117e991908a01908a01612b92565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087604001602081019061181e9190612b92565b6001600160a01b03168152602080820192909252604001600090812080546001810182559082529190206004820401805460039092166008026101000a6001600160401b038181021990931692841602919091179055845115611cc257846020015163ffffffff166000036118a65760405163bc41e3f560e01b815260040160405180910390fd5b600084156119de5750845180600a60006118c360208b018b612b92565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960400160208101906118f89190612b92565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156119385760405163356680b760e01b815260040160405180910390fd5b80600a600061194a60208b018b612b92565b6001600160a01b03166001600160a01b03168152602001908152602001600020600089604001602081019061197f9190612b92565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119ae91906132fa565b909155506119d990506119c46020890189612b92565b6119d460608a0160408b01612b92565b611cf5565b611c41565b60008463ffffffff16876020015163ffffffff16106119ff57506001611a11565b6020870151611a0e9086612b5c565b90505b611a1c600182612b29565b6001600160401b038416600090815260036020526040902060010180546001600160e01b0316600160e01b63ffffffff938416021790558751611a619183169061333e565b915081611a7460608a0160408b01612b92565b6001600160a01b03166370a08231611a8f60208c018c612b92565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af7919061337d565b1015611b165760405163356680b760e01b815260040160405180910390fd5b611b266060890160408a01612b92565b6001600160a01b03166323b872dd611b4160208b018b612b92565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb891906132dd565b508651611bc590836132fa565b600a6000611bd660208c018c612b92565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611c0b9190612b92565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611c3a9190612b7f565b9091555050505b8551600b6000611c5760408b0160208c01612b92565b6001600160a01b03166001600160a01b031681526020019081526020016000206000896040016020810190611c8c9190612b92565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611cbb9190612b7f565b9091555050505b95945050505050565b6000826000018281548110611ce257611ce2612aed565b9060005260206000200154905092915050565b6001600160a01b03808316600090815260066020908152604080832093851683529290529081209080805b8354811015612193576000848281548110611d3d57611d3d612aed565b6000918252602080832060048084049091015460039384166008026101000a90046001600160401b03168085529290915260408320908101549193509103611d86575050612181565b8054600160201b900460ff1680611da557508054600160301b900460ff165b15611e875785548690611dba906001906132fa565b81548110611dca57611dca612aed565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316868481548110611e0557611e05612aed565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555085805480611e4e57611e4e613396565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a02191690559055506121819050565b6001810154815460009163ffffffff600160c01b8204811692600160a01b909204811691611eb69116426132fa565b611ec0919061330d565b611eca91906132fa565b905080600003611f185760018201546004830154600160a01b90910463ffffffff1690611efa906298968061333e565b611f04919061330d565b611f0e9086612b7f565b9450505050612181565b81600101601c9054906101000a900463ffffffff166001611f399190613321565b63ffffffff168110612092575060018101805463ffffffff600160e01b820481169283929091601891611f75918591600160c01b900416613321565b825463ffffffff9182166101009390930a928302919092021990911617905550600182810180546001600160e01b03169055825466ff0000000000001916600160301b17835587548891611fc8916132fa565b81548110611fd857611fd8612aed565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b031687858154811061201357612013612aed565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b031602179055508680548061205c5761205c613396565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a02191690559055612118565b808260010160188282829054906101000a900463ffffffff166120b59190613321565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160010160149054906101000a900463ffffffff1663ffffffff16826004015462989680612101919061333e565b61210b919061330d565b6121159086612b7f565b94505b600082600401548261212a919061333e565b90506121368188612b7f565b60018401546001600160a01b039081166000908152600b60209081526040808320938e16835292905290812080549299508392909190612177908490612b7f565b9091555050505050505b8061218b8161321b565b915050611d20565b50806000036121a3575050505050565b6001600160a01b038086166000908152600a60209081526040808320938816835292905290812080548492906121da9084906132fa565b90915550506001600160a01b038086166000908152600a602090815260408083209388168352929052908120549082612216836298968061333e565b612220919061330d565b905060005b85548110156122de57600086828154811061224257612242612aed565b6000918252602080832060048084049091015460039384166008026101000a90046001600160401b0316808552929091526040832090810154919350910361228b5750506122cc565b60018101546122a790600160a01b900463ffffffff168561330d565b81600101601c6101000a81548163ffffffff021916908363ffffffff16021790555050505b806122d68161321b565b915050612225565b5050505050505050565b6001600160a01b03811660009081526001830160205260408120541515610e71565b6001600160401b0383166000908152600360209081526040909120805463ffffffff19164263ffffffff161781559061234590840184612b92565b81546001600160a01b0391909116600160381b02670100000000000000600160d81b031990911617815561237f6040840160208501612b92565b6001808301805460028501805463ffffffff191690931790925584516004850155602085015163ffffffff16600160a01b026001600160c01b03199092166001600160a01b0393909316929092171790556123e06060840160408501612b92565b6002820180546001600160a01b0392909216600160201b02640100000000600160c01b03199092169190911790556080820151156124435760808201516006820155606082015160058201805463ffffffff191663ffffffff9092169190911790555b6124806001600160401b038516600460006124616020880188612b92565b6001600160a01b03168152602081019190915260400160002090612509565b506124a26001600160401b038516600560006124616040880160208901612b92565b50836001600160401b03167f7653d3d792a858ef3d6fa51046fa6a0c8363bbdeca1759b033b6d948c07a7660846040516020016124df9190612e74565b60408051601f1981840301815290829052805160209182012082520160405180910390a250505050565b6000818152600183016020526040812054610e719084908490849061255a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a0d565b506000610a0d565b604080516102808101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e0810182905261020081018290526102208101829052610240810182905261026081019190915290565b80356001600160a01b038116811461261c57600080fd5b919050565b6001600160401b038116811461263657600080fd5b50565b60008060006060848603121561264e57600080fd5b61265784612605565b9250602084013561266781612621565b9150604084013561267781612621565b809150509250925092565b6000815180845260005b818110156126a85760208185018101518683018201520161268c565b506000602082860101526020601f19601f83011685010191505092915050565b80516001600160a01b03168252600061028060208301516126f460208601826001600160a01b03169052565b50604083015161270c604086018263ffffffff169052565b50606083015161272760608601826001600160401b03169052565b50608083015161273f608086018263ffffffff169052565b5060a08301518160a086015261275782860182612682565b91505060c083015160c085015260e083015160e0850152610100808401518186015250610120808401516127928287018263ffffffff169052565b50506101408381015163ffffffff9081169186019190915261016080850151821690860152610180808501511515908601526101a0808501511515908601526101c0808501511515908601526101e0808501516001600160a01b03169086015261020080850151821690860152610220808501519091169085015261024080840151908501526102609283015192909301919091525090565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561288257605f198887030185526128708683516126c8565b95509382019390820190600101612854565b50508394506001600160401b03871681870152505050509392505050565b6000602082840312156128b257600080fd5b8135610e7181612621565b600080604083850312156128d057600080fd5b82356128db81612621565b946020939093013593505050565b600060a082840312156128fb57600080fd5b50919050565b801515811461263657600080fd5b60008083601f84011261292157600080fd5b5081356001600160401b0381111561293857600080fd5b6020830191508360208260051b850101111561295357600080fd5b9250929050565b60008060008060e0858703121561297057600080fd5b61297a86866128e9565b935060a085013561298a81612901565b925060c08501356001600160401b038111156129a557600080fd5b6129b18782880161290f565b95989497509550505050565b6000602082840312156129cf57600080fd5b81356001600160401b038111156129e557600080fd5b6129f1848285016128e9565b949350505050565b602081526000610e7160208301846126c8565b60008060008060608587031215612a2257600080fd5b84356001600160401b0380821115612a3957600080fd5b612a45888389016128e9565b955060208701359150612a5782612901565b90935060408601359080821115612a6d57600080fd5b506129b18782880161290f565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115612ab057612ab0612a7a565b5092915050565b6001600160401b03828116828216039080821115612ab057612ab0612a7a565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001600160401b03808316818103612b1f57612b1f612a7a565b6001019392505050565b63ffffffff828116828216039080821115612ab057612ab0612a7a565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680612b7357612b73612b46565b92169190910492915050565b80820180821115610a0d57610a0d612a7a565b600060208284031215612ba457600080fd5b610e7182612605565b80358252612bbd60208201612605565b6001600160a01b03818116602085015280612bda60408501612605565b16604085015280612bed60608501612605565b1660608501525050608090810135910152565b60a08101610a0d8284612bad565b6000808335601e19843603018112612c2557600080fd5b83016020810192503590506001600160401b03811115612c4457600080fd5b80360382131561295357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612c9257600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b87811015612d07578284038952612ccc8288612c7c565b604081358652612cde87830183612c0e565b92508188880152612cf28288018483612c53565b9b88019b965050509185019150600101612cb5565b5091979650505050505050565b848152612d246020820185612bad565b60e060c08201526000612d3b60e083018486612c9b565b9695505050505050565b63ffffffff8116811461263657600080fd5b81835260006020808501808196508560051b810191508460005b87811015612d07578284038952612d888288612c7c565b60408135612d9581612d45565b63ffffffff168652612da982880183612c0e565b92508188880152612dbd8288018483612c53565b9b88019b965050509185019150600101612d71565b60006001600160a01b0380612de684612605565b16845280612df660208501612605565b16602085015280612e0960408501612605565b16604085015250606082013560608401526080820135601e19833603018112612e3157600080fd5b82016020810190356001600160401b03811115612e4d57600080fd5b8060051b3603821315612e5f57600080fd5b60a06080860152611cc260a086018284612d57565b602081526000610e716020830184612dd2565b6000808335601e19843603018112612e9e57600080fd5b8301803591506001600160401b03821115612eb857600080fd5b6020019150600581901b360382131561295357600080fd5b60008235603e19833603018112612ee657600080fd5b9190910192915050565b604080519081016001600160401b0381118282101715612f1257612f12612ad7565b60405290565b60405160c081016001600160401b0381118282101715612f1257612f12612ad7565b604051601f8201601f191681016001600160401b0381118282101715612f6257612f62612ad7565b604052919050565b600060408236031215612f7c57600080fd5b612f84612ef0565b8235612f8f81612d45565b81526020838101356001600160401b0380821115612fac57600080fd5b9085019036601f830112612fbf57600080fd5b813581811115612fd157612fd1612ad7565b612fe3601f8201601f19168501612f3a565b91508082523684828501011115612ff957600080fd5b80848401858401376000908201840152918301919091525092915050565b600082601f83011261302857600080fd5b815160206001600160401b0382111561304357613043612ad7565b613051818360051b01612f3a565b82815260069290921b8401810191818101908684111561307057600080fd5b8286015b848110156130b8576040818903121561308d5760008081fd5b613095612ef0565b81516130a081612621565b81528185015185820152835291830191604001613074565b509695505050505050565b6000602082840312156130d557600080fd5b81516001600160401b03808211156130ec57600080fd5b908301906060828603121561310057600080fd5b60405160608101818110838211171561311b5761311b612ad7565b604052825161312981612621565b81526020838101519082015260408301518281111561314757600080fd5b61315387828601613017565b60408301525095945050505050565b60006020828403121561317457600080fd5b81516001600160401b038082111561318b57600080fd5b9083019060c0828603121561319f57600080fd5b6131a7612f18565b8251815260208301516131b981612d45565b602082015260408301516131cc81612621565b604082015260608301516131df81612d45565b60608201526080838101519082015260a08301518281111561320057600080fd5b61320c87828601613017565b60a08301525095945050505050565b60006001820161322d5761322d612a7a565b5060010190565b6060815260006132476060830187612dd2565b82810360208481019190915286518083528782019282019060005b818110156132875784516001600160401b031683529383019391830191600101613262565b5050848103604086015261329c818789612c9b565b9998505050505050505050565b600181811c908216806132bd57607f821691505b6020821081036128fb57634e487b7160e01b600052602260045260246000fd5b6000602082840312156132ef57600080fd5b8151610e7181612901565b81810381811115610a0d57610a0d612a7a565b60008261331c5761331c612b46565b500490565b63ffffffff818116838216019080821115612ab057612ab0612a7a565b8082028115828204841417610a0d57610a0d612a7a565b63ffffffff81811683821602808216919082811461337557613375612a7a565b505092915050565b60006020828403121561338f57600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122003435cca581552c748622a774f391b3c0fa0c995a748cb06c4078339905535da64736f6c63430008110033";

type BillingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BillingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BillingFacet__factory extends ContractFactory {
  constructor(...args: BillingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BillingFacet> {
    return super.deploy(overrides || {}) as Promise<BillingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BillingFacet {
    return super.attach(address) as BillingFacet;
  }
  override connect(signer: Signer): BillingFacet__factory {
    return super.connect(signer) as BillingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BillingFacetInterface {
    return new utils.Interface(_abi) as BillingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BillingFacet {
    return new Contract(address, _abi, signerOrProvider) as BillingFacet;
  }
}
