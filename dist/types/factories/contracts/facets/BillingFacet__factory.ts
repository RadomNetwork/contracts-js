/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BillingFacet,
  BillingFacetInterface,
} from "../../../contracts/facets/BillingFacet";

const _abi = [
  {
    inputs: [],
    name: "AutoDepositConfigDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AutoDepositDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientWalletBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAutoDepositConfig",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubscriptionId",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSubscriptionsToAutoDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "ReEntrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotCloseEnoughToExpire",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongChainId",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meteredBudgetUsed",
        type: "uint256",
      },
    ],
    name: "MeteredProductCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "OrderMetadataReplaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "configInputs",
        type: "tuple[]",
      },
    ],
    name: "OrderPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Payment",
        name: "paymentData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "PaymentSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "chargeMeteredProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
    ],
    name: "generateOrderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPurchasedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getSoldSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "order",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct Billing.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50613289806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80638499367b116100665780638499367b1461011a5780639bfc49451461013b578063a47c76961461014e578063cda1d4eb1461016e578063e55d21161461018157600080fd5b8062af553b146100a257806303ddb5aa146100b75780632819fd44146100e15780632ecf5b7f146100f457806360e083a714610107575b600080fd5b6100b56100b0366004612527565b610194565b005b6100ca6100c53660046125c2565b610294565b6040516100d89291906127b4565b60405180910390f35b6100b56100ef366004612829565b61040a565b6100b5610102366004612846565b6104a7565b6100ca6101153660046125c2565b6106b6565b61012d61012836600461288a565b610818565b6040519081526020016100d8565b6100ca6101493660046125c2565b610848565b61016161015c366004612829565b610983565b6040516100d891906128c6565b6100b561017c3660046128d9565b6109e8565b6100b561018f366004612829565b610d97565b6101a46060850160408601612947565b600160f61b6101b38282610e30565b6101ee86356101c86040890160208a01612947565b6101d860808a0160608b01612947565b6101e860608b0160408c01612947565b89610ecf565b60008660405160200161020191906129ae565b60405160208183030381529060405280519060200120905086604001602081019061022c9190612947565b6001600160a01b03166102456080890160608a01612947565b6001600160a01b03167f082fe92817e02e9c7a605b5c411bf859cfca70ea6939aafa8550d3dc871c23a6838a89896040516102839493929190612ac2565b60405180910390a350505050505050565b6001600160a01b038316600090815260046020526040812060609190829082906102bd9061106b565b9050806001600160401b0316866001600160401b031611156102e3579092509050610402565b6001600160401b0381166102f78688612b09565b6001600160401b03161161030b5784610315565b6103158682612b30565b6001600160401b03166001600160401b0381111561033557610335612b50565b60405190808252806020026020018201604052801561036e57816020015b61035b612428565b8152602001906001900390816103535790505b50915060005b8251816001600160401b031610156103fb576103c26103bd610396838a612b09565b6001600160a01b038b166000908152600460205260409020906001600160401b0316611075565b611088565b83826001600160401b0316815181106103dd576103dd612b66565b602002602001018190525080806103f390612b7c565b915050610374565b5090925090505b935093915050565b6001600160401b0381166000908152600360205260409020600181015461043e906001600160a01b0316600160f41b610e30565b610449816001611261565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f969dbeb428468d1aa44663a22bc139cde2010cfb4e5e5c28c7d62300f90f975b906020015b60405180910390a35050565b6001600160401b038216600090815260036020526040902060018101546104db906001600160a01b0316600160f51b610e30565b60006104e6826114cb565b9150508061050757604051630e0aac8560e21b815260040160405180910390fd5b816006015460000361052c576040516323d7062760e11b815260040160405180910390fd5b6005820154825463ffffffff600160201b8304811692811691610550911642612ba2565b61055a9190612bd5565b63ffffffff1611156105b557600060078301556005820154825463ffffffff91821691610588911642612ba2565b6105929190612bd5565b8260050160046101000a81548163ffffffff021916908363ffffffff1602179055505b60078201546105c49084612bf8565b826006015410156105e85760405163e46f952f60e01b815260040160405180910390fd5b828260070160008282546105fc9190612bf8565b909155505081546001600160a01b03600160381b90910481166000818152600d60205260409020546002850154600186015460ff9092169361064f938893600160201b9093048216929091169085610ecf565b600183015460078401546040516001600160a01b03909216916001600160401b038816917f78216ffa9e2ba6f983e241252f1ab3ab7cb211ffdf77f4c694b7472aab6fb93b916106a791898252602082015260400190565b60405180910390a35050505050565b6001600160a01b038316600090815260056020526040812060609190829082906106df9061106b565b9050806001600160401b0316866001600160401b03161115610705579092509050610402565b6001600160401b0381166107198688612b09565b6001600160401b03161161072d5784610737565b6107378682612b30565b6001600160401b03166001600160401b0381111561075757610757612b50565b60405190808252806020026020018201604052801561079057816020015b61077d612428565b8152602001906001900390816107755790505b50915060005b8251816001600160401b031610156103fb576107df6103bd6107b8838a612b09565b6001600160a01b038b166000908152600560205260409020906001600160401b0316611075565b83826001600160401b0316815181106107fa576107fa612b66565b6020026020010181905250808061081090612b7c565b915050610796565b60008160405160200161082b9190612d43565b604051602081830303815290604052805190602001209050919050565b6001600160a01b038316600090815260056020526040812060609190829082906108719061106b565b9050806001600160401b0316866001600160401b03161115610897579092509050610402565b6001600160401b0381166108ab8688612b09565b6001600160401b0316116108bf57846108c9565b6108c98682612b30565b6001600160401b03166001600160401b038111156108e9576108e9612b50565b60405190808252806020026020018201604052801561092257816020015b61090f612428565b8152602001906001900390816109075790505b50915060005b8251816001600160401b031610156103fb5761094a6103bd6107b8838a612b09565b83826001600160401b03168151811061096557610965612b66565b6020026020010181905250808061097b90612b7c565b915050610928565b61098b612428565b6109bc826001600160401b0316600090815260036020526040902054600160381b90046001600160a01b0316151590565b6109d957604051631a00354f60e01b815260040160405180910390fd5b6109e282611088565b92915050565b6109f56020850185612947565b600160f61b610a048282610e30565b46866060013514610a27576040516217e1ef60ea1b815260040160405180910390fd5b6000610a366080880188612d56565b90506001600160401b03811115610a4f57610a4f612b50565b604051908082528060200260200182016040528015610a78578160200160208202803683370190505b5090506000600d81610a8d60208b018b612947565b6001600160a01b03166001600160a01b031681526020019081526020016000209050600087610b19578154610100900460ff1615610ade5760405163544b041f60e01b815260040160405180910390fd5b8154600160301b900463ffffffff1615610b0757508054600160301b900463ffffffff16610b19565b50600c54600160201b900463ffffffff165b6000805b610b2a60808c018c612d56565b9050811015610c4c576000610b4260808d018d612d56565b83818110610b5257610b52612b66565b9050602002810190610b649190612d9f565b610b6d90612e39565b805190915063ffffffff16600003610bac5760008160200151806020019051810190610b999190612f92565b9050610ba68d828e611565565b50610c39565b805163ffffffff16600103610c205760008160200151806020019051810190610bd59190613031565b9050610be38d828e886115a6565b878581518110610bf557610bf5612b66565b6001600160401b039092166020928302919091019091015283610c17816130ea565b94505050610c39565b604051631bd9fd8960e21b815260040160405180910390fd5b5080610c44816130ea565b915050610b1d565b506000816001600160401b03811115610c6757610c67612b50565b604051908082528060200260200182016040528015610c90578160200160208202803683370190505b50905060005b82811015610cf457858181518110610cb057610cb0612b66565b6020026020010151828281518110610cca57610cca612b66565b6001600160401b039092166020928302919091019091015280610cec816130ea565b915050610c96565b508a604051602001610d069190612d43565b60408051601f19818403018152919052805160209182012090610d2b908d018d612947565b6001600160a01b0316610d4460408e0160208f01612947565b6001600160a01b03167f895dbaed823905efb59335e19c68f099070dbf76bae3414213793cac4318bdfd8e858e8e604051610d829493929190613103565b60405180910390a45050505050505050505050565b6001600160401b03811660009081526003602052604090208054610dcf90600160381b90046001600160a01b0316600160f71b610e30565b610dda816000611261565b600181015481546040516001600160a01b03600160381b909204821681529116906001600160401b038416907f2fd6804d6a34929fd90881e9852a73f8dd653c88209884a55a5a6767834e22ff9060200161049b565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae9190613178565b610ecb5760405163061cbdd360e51b815260040160405180910390fd5b5050565b610eda600085611bb4565b610ef75760405163350b944160e11b815260040160405180910390fd5b84600003610f1857604051631b701ba360e11b815260040160405180910390fd5b80610fd7576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f949190613178565b506001600160a01b038084166000908152600b6020908152604080832093881683529290529081208054879290610fcc908490612bf8565b909155506110649050565b610fe18285611bd6565b6001600160a01b038083166000908152600a6020908152604080832093881683529290529081208054879290611018908490613195565b90915550506001600160a01b038084166000908152600b6020908152604080832093881683529290529081208054879290611054908490612bf8565b9091555061106490508285611bd6565b5050505050565b60006109e2825490565b600061108183836121a6565b9392505050565b611090612428565b6001600160401b03821660009081526003602052604090206110b0612428565b6000806110bc846114cb565b6001600160401b0388166060860152600286015463ffffffff80821660408801528754908116608088015260c0870184905282151561018088015260ff600160201b808304821615156101a08a015265010000000000830490911615156101c089015260048901546101008901526001600160a01b03920482166101e0880152600160381b90041685526003860180549294509092509061115c906131a8565b80601f0160208091040260200160405190810160405280929190818152602001828054611188906131a8565b80156111d55780601f106111aa576101008083540402835291602001916111d5565b820191906000526020600020905b8154815290600101906020018083116111b857829003601f168201915b505050505060a0840152505060018201546001600160a01b038116602083015263ffffffff600160a01b82048116610120840152600160c01b82048116610140840152600160e01b90910481166101608301526005830154808216610200840152600160201b900416610220820152600682015461024082015260079091015461026082015292915050565b61127b8254600160381b90046001600160a01b0316151590565b61129857604051631a00354f60e01b815260040160405180910390fd5b8154600160201b900460ff16806112b757508154600160301b900460ff165b156112d557604051630e0aac8560e21b815260040160405180910390fd5b600282015463ffffffff16600103611483576001820154825460009163ffffffff600160c01b8204811692600160a01b909204811691611316911642613195565b61132091906131dc565b61132a9190613195565b905080156114705782600101601c9054906101000a900463ffffffff16600161135391906131f0565b63ffffffff16811061137857604051630e0aac8560e21b815260040160405180910390fd5b808360010160188282829054906101000a900463ffffffff1661139b91906131f0565b92506101000a81548163ffffffff021916908363ffffffff16021790555060008360040154826113cb919061320d565b84546001600160a01b03600160381b90910481166000908152600a6020908152604080832060028a0154600160201b900490941683529290529081208054929350839290919061141c908490613195565b909155505060018401546001600160a01b039081166000908152600b602090815260408083206002890154600160201b900490941683529290529081208054839290611469908490612bf8565b9091555050505b506001820180546001600160e01b031690555b8154811515650100000000000265ffff000000001990911617600160201b9081178084556002840154610ecb926001600160a01b03600160381b909304831692910416611bd6565b60008082600401546000036114e65750600092600192509050565b600283015460009063ffffffff1660010361155a57600184015463ffffffff600160a01b820481169161152a91600160e01b8204811691600160c01b9004166131f0565b6115359060016131f0565b63ffffffff16611545919061320d565b8454611557919063ffffffff16612bf8565b90505b934285119350915050565b60208201516115a19061157e6060860160408701612947565b61158e6040870160208801612947565b61159b6020880188612947565b85610ecf565b505050565b60006115b6600280546001019055565b60006115c160025490565b90506115de6115d66060880160408901612947565b600090611bb4565b6115fb5760405163350b944160e11b815260040160405180910390fd5b845160000361161d57604051631b701ba360e11b815260040160405180910390fd5b846020015163ffffffff166000036116485760405163bc41e3f560e01b815260040160405180910390fd5b6116538187876121d0565b600660006116646020890189612947565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008760400160208101906116999190612947565b6001600160a01b031681526020808201929092526040908101600090812080546001810182559082528382206004820401805460039092166008026101000a6001600160401b038181021990931692871602919091179055600792909161170591908a01908a01612947565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087604001602081019061173a9190612947565b6001600160a01b03168152602080820192909252604001600090812080546001810182559082529181206004830401805460039093166008026101000a6001600160401b0381810219909416938516029290921790915584156118c75750845180600a60006117ac60208b018b612947565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960400160208101906117e19190612947565b6001600160a01b03166001600160a01b031681526020019081526020016000205410156118215760405163356680b760e01b815260040160405180910390fd5b80600a600061183360208b018b612947565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008960400160208101906118689190612947565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546118979190613195565b909155506118c290506118ad6020890189612947565b6118bd60608a0160408b01612947565b611bd6565b611b2a565b60008463ffffffff16876020015163ffffffff16106118e8575060016118fa565b60208701516118f79086612bd5565b90505b611905600182612ba2565b6001600160401b038416600090815260036020526040902060010180546001600160e01b0316600160e01b63ffffffff93841602179055875161194a9183169061320d565b91508161195d60608a0160408b01612947565b6001600160a01b03166370a0823161197860208c018c612947565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e09190613224565b10156119ff5760405163356680b760e01b815260040160405180910390fd5b611a0f6060890160408a01612947565b6001600160a01b03166323b872dd611a2a60208b018b612947565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015611a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa19190613178565b508651611aae9083613195565b600a6000611abf60208c018c612947565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a6040016020810190611af49190612947565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611b239190612bf8565b9091555050505b8551600b6000611b4060408b0160208c01612947565b6001600160a01b03166001600160a01b031681526020019081526020016000206000896040016020810190611b759190612947565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611ba49190612bf8565b9091555091979650505050505050565b6001600160a01b03811660009081526001830160205260408120541515611081565b6001600160a01b03808316600090815260066020908152604080832093851683529290529081209080805b8354811015612061576000848281548110611c1e57611c1e612b66565b6000918252602080832060048304015460039283166008026101000a90046001600160401b03168084529190526040909120805491925090600160201b900460ff1680611c7357508054600160301b900460ff165b15611d555785548690611c8890600190613195565b81548110611c9857611c98612b66565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316868481548110611cd357611cd3612b66565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555085805480611d1c57611d1c61323d565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a021916905590555061204f9050565b6001810154815460009163ffffffff600160c01b8204811692600160a01b909204811691611d84911642613195565b611d8e91906131dc565b611d989190613195565b905080600003611de65760018201546004830154600160a01b90910463ffffffff1690611dc8906298968061320d565b611dd291906131dc565b611ddc9086612bf8565b945050505061204f565b81600101601c9054906101000a900463ffffffff166001611e0791906131f0565b63ffffffff168110611f60575060018101805463ffffffff600160e01b820481169283929091601891611e43918591600160c01b9004166131f0565b825463ffffffff9182166101009390930a928302919092021990911617905550600182810180546001600160e01b03169055825466ff0000000000001916600160301b17835587548891611e9691613195565b81548110611ea657611ea6612b66565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316878581548110611ee157611ee1612b66565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555086805480611f2a57611f2a61323d565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a02191690559055611fe6565b808260010160188282829054906101000a900463ffffffff16611f8391906131f0565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160010160149054906101000a900463ffffffff1663ffffffff16826004015462989680611fcf919061320d565b611fd991906131dc565b611fe39086612bf8565b94505b6000826004015482611ff8919061320d565b90506120048188612bf8565b60018401546001600160a01b039081166000908152600b60209081526040808320938e16835292905290812080549299508392909190612045908490612bf8565b9091555050505050505b80612059816130ea565b915050611c01565b5080600003612071575050505050565b6001600160a01b038086166000908152600a60209081526040808320938816835292905290812080548492906120a8908490613195565b90915550506001600160a01b038086166000908152600a6020908152604080832093881683529290529081205490826120e4836298968061320d565b6120ee91906131dc565b905060005b855481101561219c57600086828154811061211057612110612b66565b6000918252602080832060048304015460039283166008026101000a90046001600160401b0316808452919052604090912060018101549192509061216290600160a01b900463ffffffff16856131dc565b6001909101805463ffffffff92909216600160e01b026001600160e01b039092169190911790555080612194816130ea565b9150506120f3565b5050505050505050565b60008260000182815481106121bd576121bd612b66565b9060005260206000200154905092915050565b6001600160401b0383166000908152600360209081526040909120805463ffffffff19164263ffffffff161781559061220b90840184612947565b81546001600160a01b0391909116600160381b02670100000000000000600160d81b03199091161781556122456040840160208501612947565b6001808301805460028501805463ffffffff191690931790925584516004850155602085015163ffffffff16600160a01b026001600160c01b03199092166001600160a01b0393909316929092171790556122a66060840160408501612947565b6002820180546001600160a01b0392909216600160201b02640100000000600160c01b03199092169190911790556080820151156123095760808201516006820155606082015160058201805463ffffffff191663ffffffff9092169190911790555b6123466001600160401b038516600460006123276020880188612947565b6001600160a01b031681526020810191909152604001600020906123cf565b506123686001600160401b038516600560006123276040880160208901612947565b50836001600160401b03167f7653d3d792a858ef3d6fa51046fa6a0c8363bbdeca1759b033b6d948c07a7660846040516020016123a59190612d43565b60408051601f1981840301815290829052805160209182012082520160405180910390a250505050565b600081815260018301602052604081205461108190849084908490612420575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556109e2565b5060006109e2565b604080516102808101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e0810182905261020081018290526102208101829052610240810182905261026081019190915290565b80151581146124d957600080fd5b50565b60008083601f8401126124ee57600080fd5b5081356001600160401b0381111561250557600080fd5b6020830191508360208260051b850101111561252057600080fd5b9250929050565b60008060008084860360c081121561253e57600080fd5b608081121561254c57600080fd5b50849350608085013561255e816124cb565b925060a08501356001600160401b0381111561257957600080fd5b612585878288016124dc565b95989497509550505050565b80356001600160a01b03811681146125a857600080fd5b919050565b6001600160401b03811681146124d957600080fd5b6000806000606084860312156125d757600080fd5b6125e084612591565b925060208401356125f0816125ad565b91506040840135612600816125ad565b809150509250925092565b6000815180845260005b8181101561263157602081850181015186830182015201612615565b506000602082860101526020601f19601f83011685010191505092915050565b80516001600160a01b031682526000610280602083015161267d60208601826001600160a01b03169052565b506040830151612695604086018263ffffffff169052565b5060608301516126b060608601826001600160401b03169052565b5060808301516126c8608086018263ffffffff169052565b5060a08301518160a08601526126e08286018261260b565b91505060c083015160c085015260e083015160e08501526101008084015181860152506101208084015161271b8287018263ffffffff169052565b50506101408381015163ffffffff9081169186019190915261016080850151821690860152610180808501511515908601526101a0808501511515908601526101c0808501511515908601526101e0808501516001600160a01b03169086015261020080850151821690860152610220808501519091169085015261024080840151908501526102609283015192909301919091525090565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561280b57605f198887030185526127f9868351612651565b955093820193908201906001016127dd565b50508394506001600160401b03871681870152505050509392505050565b60006020828403121561283b57600080fd5b8135611081816125ad565b6000806040838503121561285957600080fd5b8235612864816125ad565b946020939093013593505050565b600060a0828403121561288457600080fd5b50919050565b60006020828403121561289c57600080fd5b81356001600160401b038111156128b257600080fd5b6128be84828501612872565b949350505050565b6020815260006110816020830184612651565b600080600080606085870312156128ef57600080fd5b84356001600160401b038082111561290657600080fd5b61291288838901612872565b955060208701359150612924826124cb565b9093506040860135908082111561293a57600080fd5b50612585878288016124dc565b60006020828403121561295957600080fd5b61108182612591565b8035825261297260208201612591565b6001600160a01b0381811660208501528061298f60408501612591565b166040850152806129a260608501612591565b16606085015250505050565b608081016109e28284612962565b6000808335601e198436030181126129d357600080fd5b83016020810192503590506001600160401b038111156129f257600080fd5b80360382131561252057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612a4057600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b87811015612ab5578284038952612a7a8288612a2a565b604081358652612a8c878301836129bc565b92508188880152612aa08288018483612a01565b9b88019b965050509185019150600101612a63565b5091979650505050505050565b848152612ad26020820185612962565b60c060a08201526000612ae960c083018486612a49565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03818116838216019080821115612b2957612b29612af3565b5092915050565b6001600160401b03828116828216039080821115612b2957612b29612af3565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001600160401b03808316818103612b9857612b98612af3565b6001019392505050565b63ffffffff828116828216039080821115612b2957612b29612af3565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff80841680612bec57612bec612bbf565b92169190910492915050565b808201808211156109e2576109e2612af3565b63ffffffff811681146124d957600080fd5b81835260006020808501808196508560051b810191508460005b87811015612ab5578284038952612c4e8288612a2a565b60408135612c5b81612c0b565b63ffffffff168652612c6f828801836129bc565b92508188880152612c838288018483612a01565b9b88019b965050509185019150600101612c37565b60006001600160a01b0380612cac84612591565b16845280612cbc60208501612591565b16602085015280612ccf60408501612591565b16604085015250606082013560608401526080820135601e19833603018112612cf757600080fd5b82016020810190356001600160401b03811115612d1357600080fd5b8060051b3603821315612d2557600080fd5b60a06080860152612d3a60a086018284612c1d565b95945050505050565b6020815260006110816020830184612c98565b6000808335601e19843603018112612d6d57600080fd5b8301803591506001600160401b03821115612d8757600080fd5b6020019150600581901b360382131561252057600080fd5b60008235603e19833603018112612db557600080fd5b9190910192915050565b604080519081016001600160401b0381118282101715612de157612de1612b50565b60405290565b60405160c081016001600160401b0381118282101715612de157612de1612b50565b604051601f8201601f191681016001600160401b0381118282101715612e3157612e31612b50565b604052919050565b600060408236031215612e4b57600080fd5b612e53612dbf565b8235612e5e81612c0b565b81526020838101356001600160401b0380821115612e7b57600080fd5b9085019036601f830112612e8e57600080fd5b813581811115612ea057612ea0612b50565b612eb2601f8201601f19168501612e09565b91508082523684828501011115612ec857600080fd5b80848401858401376000908201840152918301919091525092915050565b600082601f830112612ef757600080fd5b815160206001600160401b03821115612f1257612f12612b50565b612f20818360051b01612e09565b82815260069290921b84018101918181019086841115612f3f57600080fd5b8286015b84811015612f875760408189031215612f5c5760008081fd5b612f64612dbf565b8151612f6f816125ad565b81528185015185820152835291830191604001612f43565b509695505050505050565b600060208284031215612fa457600080fd5b81516001600160401b0380821115612fbb57600080fd5b9083019060608286031215612fcf57600080fd5b604051606081018181108382111715612fea57612fea612b50565b6040528251612ff8816125ad565b81526020838101519082015260408301518281111561301657600080fd5b61302287828601612ee6565b60408301525095945050505050565b60006020828403121561304357600080fd5b81516001600160401b038082111561305a57600080fd5b9083019060c0828603121561306e57600080fd5b613076612de7565b82518152602083015161308881612c0b565b6020820152604083015161309b816125ad565b604082015260608301516130ae81612c0b565b60608201526080838101519082015260a0830151828111156130cf57600080fd5b6130db87828601612ee6565b60a08301525095945050505050565b6000600182016130fc576130fc612af3565b5060010190565b6060815260006131166060830187612c98565b82810360208481019190915286518083528782019282019060005b818110156131565784516001600160401b031683529383019391830191600101613131565b5050848103604086015261316b818789612a49565b9998505050505050505050565b60006020828403121561318a57600080fd5b8151611081816124cb565b818103818111156109e2576109e2612af3565b600181811c908216806131bc57607f821691505b60208210810361288457634e487b7160e01b600052602260045260246000fd5b6000826131eb576131eb612bbf565b500490565b63ffffffff818116838216019080821115612b2957612b29612af3565b80820281158282048414176109e2576109e2612af3565b60006020828403121561323657600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122054949b9e605a88de031df8990bb30929c6d5e5b32469c8de72fa1659b3d93b3e64736f6c63430008110033";

type BillingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BillingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BillingFacet__factory extends ContractFactory {
  constructor(...args: BillingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BillingFacet> {
    return super.deploy(overrides || {}) as Promise<BillingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BillingFacet {
    return super.attach(address) as BillingFacet;
  }
  override connect(signer: Signer): BillingFacet__factory {
    return super.connect(signer) as BillingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BillingFacetInterface {
    return new utils.Interface(_abi) as BillingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BillingFacet {
    return new Contract(address, _abi, signerOrProvider) as BillingFacet;
  }
}
