/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BillingFacet,
  BillingFacetInterface,
} from "../../../contracts/facets/BillingFacet";

const _abi = [
  {
    inputs: [],
    name: "FeatureNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargingInterval",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMeteredCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "OrgMustDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "ProductHasNoPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotMetered",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionVoid",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedProduct",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "productId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "meteredBudgetUsed",
        type: "uint256",
      },
    ],
    name: "MeteredProductCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "OrderMetadataReplaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "subscriptionIds",
        type: "uint64[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "configInputs",
        type: "tuple[]",
      },
    ],
    name: "OrderPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Billing.Payment",
        name: "paymentData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "PaymentSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "productId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64[]",
        name: "addOns",
        type: "uint64[]",
      },
    ],
    name: "SubscriptionAddOnsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "productId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "productId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "serviceSubscriptionId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "productId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "SubscriptionRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "chargeMeteredProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
    ],
    name: "generateOrderId",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPaginatedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "productId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useRadomBalance",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getPurchasedSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "productId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useRadomBalance",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "offset",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "limit",
        type: "uint64",
      },
    ],
    name: "getSoldSubscriptions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "productId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useRadomBalance",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint64",
        name: "cursor",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "productId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "productType",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "subscriptionStart",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "authenticationString",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "subscriptionEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "indexRunsOutOfFunds",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricing",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "chargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "elapsedIntervals",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "intervals",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useRadomBalance",
            type: "bool",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "meteredChargingInterval",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMeteredChargeInterval",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "meteredBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "meteredBudgetUsed",
            type: "uint256",
          },
        ],
        internalType: "struct Subscriptions.SubscriptionResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "productType",
                type: "uint32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Billing.Product[]",
            name: "products",
            type: "tuple[]",
          },
        ],
        internalType: "struct Billing.Order",
        name: "orderData",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "order",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct Billing.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromRadomBalance",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct Billing.KeyValuePair[]",
        name: "metadata",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "subscriptionId",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint64[]",
            name: "addOns",
            type: "uint64[]",
          },
        ],
        internalType: "struct Billing.UpdateAddOnsOrder",
        name: "updateData",
        type: "tuple",
      },
    ],
    name: "updateAddOnsOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506130c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806360e083a71161007157806360e083a7146101265780638bc54357146101395780638e85cb2b1461015a5780639bfc49451461016d578063a47c769614610180578063e55d2116146101a057600080fd5b806303ddb5aa146100ae5780632819fd44146100d85780632ecf5b7f146100ed57806354c57f99146101005780635869a73f14610113575b600080fd5b6100c16100bc36600461223e565b6101b3565b6040516100cf92919061245c565b60405180910390f35b6100eb6100e63660046124d1565b610329565b005b6100eb6100fb3660046124ee565b6103cf565b6100eb61010e36600461258b565b6105db565b6100eb610121366004612605565b6108d2565b6100c161013436600461223e565b6109d4565b61014c610147366004612663565b610b36565b6040519081526020016100cf565b6100eb610168366004612697565b610b66565b6100c161017b36600461223e565b610b7f565b61019361018e3660046124d1565b610cba565b6040516100cf91906126d1565b6100eb6101ae3660046124d1565b610d1f565b6001600160a01b038316600090815260046020526040812060609190829082906101dc90610dc1565b9050806001600160401b0316866001600160401b03161115610202579092509050610321565b6001600160401b03811661021686886126fa565b6001600160401b03161161022a5784610234565b6102348682612721565b6001600160401b03166001600160401b0381111561025457610254612741565b60405190808252806020026020018201604052801561028d57816020015b61027a61215e565b8152602001906001900390816102725790505b50915060005b8251816001600160401b0316101561031a576102e16102dc6102b5838a6126fa565b6001600160a01b038b166000908152600460205260409020906001600160401b0316610dcb565b610dde565b83826001600160401b0316815181106102fc576102fc612757565b602002602001018190525080806103129061276d565b915050610293565b5090925090505b935093915050565b6001600160401b0381166000908152600360205260409020600181015461035d906001600160a01b0316600160f41b610fd8565b610368816001611077565b6001810154600282015482546040516001600160a01b03600160401b909204821681529216916001600160401b03918216918516907f494350c89350bea6353af90dce375cddec28a9678705f2724a8fc0bc0a5c91e5906020015b60405180910390a45050565b6001600160401b03821660009081526003602052604090206001810154610403906001600160a01b0316600160f51b610fd8565b600061040e826112ed565b9150508061042f57604051630e0aac8560e21b815260040160405180910390fd5b8160060154600003610454576040516323d7062760e11b815260040160405180910390fd5b6005820154825463ffffffff6401000000008304811692811691610479911642612793565b61048391906127c6565b63ffffffff1611156104de57600060078301556005820154825463ffffffff918216916104b1911642612793565b6104bb91906127c6565b8260050160046101000a81548163ffffffff021916908363ffffffff1602179055505b60078201546104ed90846127e9565b826006015410156105115760405163e46f952f60e01b815260040160405180910390fd5b8282600701600082825461052591906127e9565b909155505060028201546001830154835461056c9286926001600160a01b03600160601b90920482169290821691600160401b8204169060ff600160381b9091041661138e565b6001820154600283015460078401546040516001600160a01b03909316926001600160401b03928316928816917f259d5a4bb0baaf3e786085787a98c287d7a4b3b531f9508ed9f4469ab8e3259b916105cd91898252602082015260400190565b60405180910390a450505050565b6105eb60408501602086016127fc565b600160f61b6105fa8282610fd8565b60008660405160200161060d91906129dd565b60408051601f1981840301815291905280516020909101209050600061063660608901896129f0565b90506001600160401b0381111561064f5761064f612741565b604051908082528060200260200182016040528015610678578160200160208202803683370190505b5090506000805b61068c60608b018b6129f0565b90508110156107ad5760006106a460608c018c6129f0565b838181106106b4576106b4612757565b90506020028101906106c69190612a39565b6106cf90612b18565b805190915063ffffffff1660000361070e57600081602001518060200190518101906106fb9190612c9f565b90506107088c828d61152a565b5061079a565b805163ffffffff1660010361078157600081602001518060200190518101906107379190612d59565b90506107448c828d611565565b85858151811061075657610756612757565b6001600160401b03909216602092830291909101909101528361077881612e2f565b9450505061079a565b604051631bd9fd8960e21b815260040160405180910390fd5b50806107a581612e2f565b91505061067f565b506000816001600160401b038111156107c8576107c8612741565b6040519080825280602002602001820160405280156107f1578160200160208202803683370190505b50905060005b828110156108555783818151811061081157610811612757565b602002602001015182828151811061082b5761082b612757565b6001600160401b03909216602092830291909101909101528061084d81612e2f565b9150506107f7565b508361086760408c0160208d016127fc565b6001600160a01b031661088060608d0160408e016127fc565b6001600160a01b03167f0e294f952112a7f9b53aa9f16a077197ad3b1e34f4ac01924bc369ec3cdec6ce8d858d8d6040516108be9493929190612eb4565b60405180910390a450505050505050505050565b6108e260808501606086016127fc565b600160f61b6108f18282610fd8565b61092f60208701356109096060890160408a016127fc565b61091960a08a0160808b016127fc565b61092960808b0160608c016127fc565b8961138e565b6000866040516020016109429190612f89565b60408051601f198184030181529190528051602090910120905061096c60808801606089016127fc565b6001600160a01b031661098560a0890160808a016127fc565b6001600160a01b03167fa169f2f03eb550394c99727dd1da769ef56b17a00704155a44cd6beefbfecbeb838a89896040516109c39493929190612f97565b60405180910390a350505050505050565b6001600160a01b038316600090815260056020526040812060609190829082906109fd90610dc1565b9050806001600160401b0316866001600160401b03161115610a23579092509050610321565b6001600160401b038116610a3786886126fa565b6001600160401b031611610a4b5784610a55565b610a558682612721565b6001600160401b03166001600160401b03811115610a7557610a75612741565b604051908082528060200260200182016040528015610aae57816020015b610a9b61215e565b815260200190600190039081610a935790505b50915060005b8251816001600160401b0316101561031a57610afd6102dc610ad6838a6126fa565b6001600160a01b038b166000908152600560205260409020906001600160401b0316610dcb565b83826001600160401b031681518110610b1857610b18612757565b60200260200101819052508080610b2e9061276d565b915050610ab4565b600081604051602001610b4991906129dd565b604051602081830303815290604052805190602001209050919050565b604051636d40ebe160e11b815260040160405180910390fd5b6001600160a01b03831660009081526005602052604081206060919082908290610ba890610dc1565b9050806001600160401b0316866001600160401b03161115610bce579092509050610321565b6001600160401b038116610be286886126fa565b6001600160401b031611610bf65784610c00565b610c008682612721565b6001600160401b03166001600160401b03811115610c2057610c20612741565b604051908082528060200260200182016040528015610c5957816020015b610c4661215e565b815260200190600190039081610c3e5790505b50915060005b8251816001600160401b0316101561031a57610c816102dc610ad6838a6126fa565b83826001600160401b031681518110610c9c57610c9c612757565b60200260200101819052508080610cb29061276d565b915050610c5f565b610cc261215e565b610cf3826001600160401b0316600090815260036020526040902054600160401b90046001600160a01b0316151590565b610d1057604051631a00354f60e01b815260040160405180910390fd5b610d1982610dde565b92915050565b6001600160401b03811660009081526003602052604090208054610d5790600160401b90046001600160a01b0316600160f71b610fd8565b610d62816000611077565b6001810154600282015482546040516001600160a01b03600160401b909204821681529216916001600160401b03918216918516907fd404a4d7556afa909b0be97f56961d98dc9aeda64c1379f999b4fef8d8cd512e906020016103c3565b6000610d19825490565b6000610dd783836118b6565b9392505050565b610de661215e565b6001600160401b0382166000908152600360205260409020610e0661215e565b600080610e12846112ed565b6001600160401b0380891660808701526002870154908116604087015263ffffffff600160401b80830482166060890152885491821660a089015260e088018590528315156101a089015260ff6401000000008304811615156101c08a0152650100000000008304811615156101e08a0152600160381b830416151561020089015260048901546101208901526001600160a01b03600160601b9093048316610220890152900416855260038601805492945090925090610ed290612fc8565b80601f0160208091040260200160405190810160405280929190818152602001828054610efe90612fc8565b8015610f4b5780601f10610f2057610100808354040283529160200191610f4b565b820191906000526020600020905b815481529060010190602001808311610f2e57829003601f168201915b505050505060c0840152505060018201546001600160a01b038116602083015263ffffffff600160a01b82048116610140840152600160c01b82048116610160840152600160e01b9091048116610180830152600583015480821661024084015264010000000090041661026082015260068201546102808201526007909101546102a082015292915050565b6040516302a664eb60e11b81526001600160f01b0319821660048201526001600160a01b0383166024820152336044820152309063054cc9d690606401602060405180830381865afa158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190612ffc565b6110735760405163061cbdd360e51b815260040160405180910390fd5b5050565b6110918254600160401b90046001600160a01b0316151590565b6110ae57604051631a00354f60e01b815260040160405180910390fd5b8154640100000000900460ff16806110ce57508154600160301b900460ff165b156110ec57604051630e0aac8560e21b815260040160405180910390fd5b6002820154600160401b900463ffffffff166001036112a1576001820154825460009163ffffffff600160c01b8204811692600160a01b909204811691611134911642613019565b61113e919061302c565b6111489190613019565b9050801561128e5782600101601c9054906101000a900463ffffffff1660016111719190613040565b63ffffffff16811061119657604051630e0aac8560e21b815260040160405180910390fd5b808360010160188282829054906101000a900463ffffffff166111b99190613040565b92506101000a81548163ffffffff021916908363ffffffff16021790555060008360040154826111e9919061305d565b84546001600160a01b03600160401b90910481166000908152600a6020908152604080832060028a0154600160601b900490941683529290529081208054929350839290919061123a908490613019565b909155505060018401546001600160a01b039081166000908152600b602090815260408083206002890154600160601b9004909416835292905290812080548392906112879084906127e9565b9091555050505b506001820180546001600160e01b031690555b8154811515650100000000000265ffff000000001990911617640100000000178083556002830154611073916001600160a01b03600160401b909104811691600160601b9004166118e0565b60008082600401546000036113085750600092600192509050565b6002830154600090600160401b900463ffffffff1660010361138357600184015463ffffffff600160a01b820481169161135391600160e01b8204811691600160c01b900416613040565b61135e906001613040565b63ffffffff1661136e919061305d565b8454611380919063ffffffff166127e9565b90505b934285119350915050565b611399600085611eb1565b6113b65760405163350b944160e11b815260040160405180910390fd5b846000036113d757604051631b701ba360e11b815260040160405180910390fd5b80611496576040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038516906323b872dd906064016020604051808303816000875af115801561142f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114539190612ffc565b506001600160a01b038084166000908152600b602090815260408083209388168352929052908120805487929061148b9084906127e9565b909155506115239050565b6114a082856118e0565b6001600160a01b038083166000908152600a60209081526040808320938816835292905290812080548792906114d7908490613019565b90915550506001600160a01b038084166000908152600b60209081526040808320938816835292905290812080548792906115139084906127e9565b90915550611523905082856118e0565b5050505050565b6115608260400151836060015185604001602081019061154a91906127fc565b61155a60408801602089016127fc565b8561138e565b505050565b6000611575600280546001019055565b600061158060025490565b602085015190915061159490600090611eb1565b6115b15760405163350b944160e11b815260040160405180910390fd5b83606001516000036115d657604051631b701ba360e11b815260040160405180910390fd5b836040015163ffffffff166000036116015760405163bc41e3f560e01b815260040160405180910390fd5b8261161f57604051636d40ebe160e11b815260040160405180910390fd5b6006600061163360408801602089016127fc565b6001600160a01b0390811682526020808301939093526040918201600090812088850151909216815290835281812080546001810182559082529281206004840401805460039094166008026101000a6001600160401b03818102199095169486160293909317909255600791906116b190606089019089016127fc565b6001600160a01b0390811682526020808301939093526040918201600090812088850151909216815290835281812080546001810182559082528382206004820401805460039092166008026101000a6001600160401b038181021990931692871602919091179055606087015192600a9261173291908a01908a016127fc565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086602001516001600160a01b03166001600160a01b031681526020019081526020016000205410156117995760405163356680b760e01b815260040160405180910390fd5b6060840151600a60006117b26040890160208a016127fc565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546118089190613019565b909155505060608085015190600b9060009061182990890160408a016127fc565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086602001516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461187f91906127e9565b90915550611891905081868686611ed3565b6118ae6118a460408701602088016127fc565b85602001516118e0565b949350505050565b60008260000182815481106118cd576118cd612757565b9060005260206000200154905092915050565b6001600160a01b03808316600090815260066020908152604080832093851683529290529081209080805b8354811015611d6c57600084828154811061192857611928612757565b6000918252602080832060048304015460039283166008026101000a90046001600160401b03168084529190526040909120805491925090640100000000900460ff168061197e57508054600160301b900460ff165b15611a60578554869061199390600190613019565b815481106119a3576119a3612757565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b03168684815481106119de576119de612757565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555085805480611a2757611a27613074565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a0219169055905550611d5a9050565b6001810154815460009163ffffffff600160c01b8204811692600160a01b909204811691611a8f911642613019565b611a99919061302c565b611aa39190613019565b905080600003611af15760018201546004830154600160a01b90910463ffffffff1690611ad3906298968061305d565b611add919061302c565b611ae790866127e9565b9450505050611d5a565b81600101601c9054906101000a900463ffffffff166001611b129190613040565b63ffffffff168110611c6b575060018101805463ffffffff600160e01b820481169283929091601891611b4e918591600160c01b900416613040565b825463ffffffff9182166101009390930a928302919092021990911617905550600182810180546001600160e01b03169055825466ff0000000000001916600160301b17835587548891611ba191613019565b81548110611bb157611bb1612757565b90600052602060002090600491828204019190066008029054906101000a90046001600160401b0316878581548110611bec57611bec612757565b90600052602060002090600491828204019190066008026101000a8154816001600160401b0302191690836001600160401b0316021790555086805480611c3557611c35613074565b60008281526020902060046000199092019182040180546001600160401b03600860038516026101000a02191690559055611cf1565b808260010160188282829054906101000a900463ffffffff16611c8e9190613040565b92506101000a81548163ffffffff021916908363ffffffff1602179055508160010160149054906101000a900463ffffffff1663ffffffff16826004015462989680611cda919061305d565b611ce4919061302c565b611cee90866127e9565b94505b6000826004015482611d03919061305d565b9050611d0f81886127e9565b60018401546001600160a01b039081166000908152600b60209081526040808320938e16835292905290812080549299508392909190611d509084906127e9565b9091555050505050505b80611d6481612e2f565b91505061190b565b5080600003611d7c575050505050565b6001600160a01b038086166000908152600a6020908152604080832093881683529290529081208054849290611db3908490613019565b90915550506001600160a01b038086166000908152600a602090815260408083209388168352929052908120549082611def836298968061305d565b611df9919061302c565b905060005b8554811015611ea7576000868281548110611e1b57611e1b612757565b6000918252602080832060048304015460039283166008026101000a90046001600160401b03168084529190526040909120600181015491925090611e6d90600160a01b900463ffffffff168561302c565b6001909101805463ffffffff92909216600160e01b026001600160e01b039092169190911790555080611e9f81612e2f565b915050611dfe565b5050505050505050565b6001600160a01b03811660009081526001830160205260408120541515610dd7565b6001600160401b038416600090815260036020908152604091829020805463ffffffff19164263ffffffff1617815591611f12919086019086016127fc565b81546001600160a01b0391909116600160401b0268010000000000000000600160e01b0319909116178155611f4d60608501604086016127fc565b600182018054855160028501805460608901516004880155604089015163ffffffff16600160a01b026001600160c01b03199094166001600160a01b0396871617939093179093556020870151909316600160601b026bffffffffffffffffffffffff6bffffffffffffffffffffffff199092166001600160401b0390941693909317600160401b17169190911790558054821515600160381b0267ff000000000000001990911617815560c08301511561202d5760c0830151600682015560a083015160058201805463ffffffff191663ffffffff9092169190911790555b61206d6001600160401b0386166004600061204e6040890160208a016127fc565b6001600160a01b03168152602081019190915260400160002090612105565b5061208f6001600160401b0386166005600061204e6060890160408a016127fc565b5082600001516001600160401b0316856001600160401b03167f0326db233fb0f2f72d8e903ff0b7c3f44461917f4cbecde093539374608039ae866040516020016120da91906129dd565b60408051601f1981840301815290829052805160209182012082520160405180910390a35050505050565b6000818152600183016020526040812054610dd79084908490849061215657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d19565b506000610d19565b604080516102c08101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e08101829052610200810182905261022081018290526102408101829052610260810182905261028081018290526102a081019190915290565b6001600160a01b038116811461222657600080fd5b50565b6001600160401b038116811461222657600080fd5b60008060006060848603121561225357600080fd5b833561225e81612211565b9250602084013561226e81612229565b9150604084013561227e81612229565b809150509250925092565b6000815180845260005b818110156122af57602081850181015186830182015201612293565b506000602082860101526020601f19601f83011685010191505092915050565b80516001600160a01b0316825260006102c060208301516122fb60208601826001600160a01b03169052565b50604083015161231660408601826001600160401b03169052565b50606083015161232e606086018263ffffffff169052565b50608083015161234960808601826001600160401b03169052565b5060a083015161236160a086018263ffffffff169052565b5060c08301518160c086015261237982860182612289565b91505060e083015160e0850152610100808401518186015250610120808401518186015250610140808401516123b68287018263ffffffff169052565b50506101608381015163ffffffff90811691860191909152610180808501518216908601526101a0808501511515908601526101c0808501511515908601526101e08085015115159086015261020080850151151590860152610220808501516001600160a01b03169086015261024080850151821690860152610260808501519091169085015261028080840151908501526102a09283015192909301919091525090565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156124b357605f198887030185526124a18683516122cf565b95509382019390820190600101612485565b50508394506001600160401b03871681870152505050509392505050565b6000602082840312156124e357600080fd5b8135610dd781612229565b6000806040838503121561250157600080fd5b823561250c81612229565b946020939093013593505050565b60006080828403121561252c57600080fd5b50919050565b801515811461222657600080fd5b60008083601f84011261255257600080fd5b5081356001600160401b0381111561256957600080fd5b6020830191508360208260051b850101111561258457600080fd5b9250929050565b600080600080606085870312156125a157600080fd5b84356001600160401b03808211156125b857600080fd5b6125c48883890161251a565b9550602087013591506125d682612532565b909350604086013590808211156125ec57600080fd5b506125f987828801612540565b95989497509550505050565b60008060008084860360e081121561261c57600080fd5b60a081121561262a57600080fd5b5084935060a085013561263c81612532565b925060c08501356001600160401b0381111561265757600080fd5b6125f987828801612540565b60006020828403121561267557600080fd5b81356001600160401b0381111561268b57600080fd5b6118ae8482850161251a565b6000602082840312156126a957600080fd5b81356001600160401b038111156126bf57600080fd5b820160608185031215610dd757600080fd5b602081526000610dd760208301846122cf565b634e487b7160e01b600052601160045260246000fd5b6001600160401b0381811683821601908082111561271a5761271a6126e4565b5092915050565b6001600160401b0382811682821603908082111561271a5761271a6126e4565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001600160401b03808316818103612789576127896126e4565b6001019392505050565b63ffffffff82811682821603908082111561271a5761271a6126e4565b634e487b7160e01b600052601260045260246000fd5b600063ffffffff808416806127dd576127dd6127b0565b92169190910492915050565b80820180821115610d1957610d196126e4565b60006020828403121561280e57600080fd5b8135610dd781612211565b63ffffffff8116811461222657600080fd5b6000808335601e1984360301811261284257600080fd5b83016020810192503590506001600160401b0381111561286157600080fd5b80360382131561258457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e198336030181126128af57600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b878110156129335782840389526128e98288612899565b604081356128f681612819565b63ffffffff16865261290a8288018361282b565b9250818888015261291e8288018483612870565b9b88019b9650505091850191506001016128d2565b5091979650505050505050565b803582526000602082013561295481612211565b6001600160a01b03908116602085015260408301359061297382612211565b166040840152606082013536839003601e1901811261299157600080fd5b82016020810190356001600160401b038111156129ad57600080fd5b8060051b36038213156129bf57600080fd5b608060608601526129d46080860182846128b8565b95945050505050565b602081526000610dd76020830184612940565b6000808335601e19843603018112612a0757600080fd5b8301803591506001600160401b03821115612a2157600080fd5b6020019150600581901b360382131561258457600080fd5b60008235603e19833603018112612a4f57600080fd5b9190910192915050565b604080519081016001600160401b0381118282101715612a7b57612a7b612741565b60405290565b604051606081016001600160401b0381118282101715612a7b57612a7b612741565b60405160a081016001600160401b0381118282101715612a7b57612a7b612741565b60405161010081016001600160401b0381118282101715612a7b57612a7b612741565b604051601f8201601f191681016001600160401b0381118282101715612b1057612b10612741565b604052919050565b600060408236031215612b2a57600080fd5b612b32612a59565b8235612b3d81612819565b81526020838101356001600160401b0380821115612b5a57600080fd5b9085019036601f830112612b6d57600080fd5b813581811115612b7f57612b7f612741565b612b91601f8201601f19168501612ae8565b91508082523684828501011115612ba757600080fd5b80848401858401376000908201840152918301919091525092915050565b8051612bd081612229565b919050565b8051612bd081612211565b600082601f830112612bf157600080fd5b815160206001600160401b03821115612c0c57612c0c612741565b612c1a818360051b01612ae8565b82815260609283028501820192828201919087851115612c3957600080fd5b8387015b85811015612c925781818a031215612c555760008081fd5b612c5d612a81565b8151612c6881612229565b815281860151612c7781612229565b81870152604082810151908201528452928401928101612c3d565b5090979650505050505050565b600060208284031215612cb157600080fd5b81516001600160401b0380821115612cc857600080fd5b9083019060a08286031215612cdc57600080fd5b612ce4612aa3565b8251612cef81612229565b81526020830151612cff81612229565b6020820152604083810151908201526060830151612d1c81612211565b6060820152608083015182811115612d3357600080fd5b612d3f87828601612be0565b60808301525095945050505050565b8051612bd081612819565b600060208284031215612d6b57600080fd5b81516001600160401b0380821115612d8257600080fd5b908301906101008286031215612d9757600080fd5b612d9f612ac5565b612da883612bc5565b8152612db660208401612bd5565b6020820152612dc760408401612d4e565b604082015260608301516060820152612de260808401612bc5565b6080820152612df360a08401612d4e565b60a082015260c083015160c082015260e083015182811115612e1457600080fd5b612e2087828601612be0565b60e08301525095945050505050565b600060018201612e4157612e416126e4565b5060010190565b81835260006020808501808196508560051b810191508460005b87811015612933578284038952612e798288612899565b604081358652612e8b8783018361282b565b92508188880152612e9f8288018483612870565b9b88019b965050509185019150600101612e62565b606081526000612ec76060830187612940565b82810360208481019190915286518083528782019282019060005b81811015612f075784516001600160401b031683529383019391830191600101612ee2565b50508481036040860152612f1c818789612e48565b9998505050505050505050565b80358252602081013560208301526040810135612f4581612211565b6001600160a01b039081166040840152606082013590612f6482612211565b9081166060840152608082013590612f7b82612211565b808216608085015250505050565b60a08101610d198284612f29565b848152612fa76020820185612f29565b60e060c08201526000612fbe60e083018486612e48565b9695505050505050565b600181811c90821680612fdc57607f821691505b60208210810361252c57634e487b7160e01b600052602260045260246000fd5b60006020828403121561300e57600080fd5b8151610dd781612532565b81810381811115610d1957610d196126e4565b60008261303b5761303b6127b0565b500490565b63ffffffff81811683821601908082111561271a5761271a6126e4565b8082028115828204841417610d1957610d196126e4565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220815601e1c763f8c2b5dc18da0f18937a2f1478cb24b2a3ecfea431a936df86eb64736f6c63430008110033";

type BillingFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BillingFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BillingFacet__factory extends ContractFactory {
  constructor(...args: BillingFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BillingFacet> {
    return super.deploy(overrides || {}) as Promise<BillingFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BillingFacet {
    return super.attach(address) as BillingFacet;
  }
  override connect(signer: Signer): BillingFacet__factory {
    return super.connect(signer) as BillingFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BillingFacetInterface {
    return new utils.Interface(_abi) as BillingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BillingFacet {
    return new Contract(address, _abi, signerOrProvider) as BillingFacet;
  }
}
